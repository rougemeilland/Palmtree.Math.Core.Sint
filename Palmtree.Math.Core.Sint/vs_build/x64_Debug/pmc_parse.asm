; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27026.1 

include listing.inc

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

_DATA	SEGMENT
COMM	uint_number_zero:QWORD
COMM	uint_number_one:QWORD
_DATA	ENDS
msvcjmc	SEGMENT
__7B7A869E_ctype@h DB 01H
__457DD326_basetsd@h DB 01H
__4384A2D9_corecrt_memcpy_s@h DB 01H
__4E51A221_corecrt_wstring@h DB 01H
__2140C079_string@h DB 01H
__1887E595_winnt@h DB 01H
__9FC7C64B_processthreadsapi@h DB 01H
__FA470AEC_memoryapi@h DB 01H
__F37DAFF1_winerror@h DB 01H
__7A450CCC_winbase@h DB 01H
__B4B40122_winioctl@h DB 01H
__86261D59_stralign@h DB 01H
__4A305C9B_pmc_parse@c DB 01H
msvcjmc	ENDS
PUBLIC	PMC_TryParse
PUBLIC	__JustMyCode_Default
EXTRN	AllocateNumber:PROC
EXTRN	_RTC_CheckStackVars:PROC
EXTRN	_RTC_InitBase:PROC
EXTRN	_RTC_Shutdown:PROC
EXTRN	__CheckForDebuggerJustMyCode:PROC
EXTRN	__GSHandlerCheck:PROC
EXTRN	__security_check_cookie:PROC
EXTRN	ep_uint:BYTE
EXTRN	__security_cookie:QWORD
;	COMDAT pdata
pdata	SEGMENT
$pdata$PMC_TryParse DD imagerel $LN7
	DD	imagerel $LN7+266
	DD	imagerel $unwind$PMC_TryParse
pdata	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
_RTC_Shutdown.rtc$TMZ DQ FLAT:_RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
_RTC_InitBase.rtc$IMZ DQ FLAT:_RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$PMC_TryParse DD 035054919H
	DD	011c3321H
	DD	07015002fH
	DD	05014H
	DD	imagerel __GSHandlerCheck
	DD	0168H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
PMC_TryParse$rtcName$0 DB 06fH
	DB	05fH
	DB	073H
	DB	069H
	DB	067H
	DB	06eH
	DB	00H
	ORG $+1
PMC_TryParse$rtcName$1 DB 06fH
	DB	05fH
	DB	061H
	DB	062H
	DB	073H
	DB	00H
	ORG $+2
PMC_TryParse$rtcName$2 DB 06eH
	DB	06fH
	DB	00H
	ORG $+5
PMC_TryParse$rtcFrameData DD 03H
	DD	00H
	DQ	FLAT:PMC_TryParse$rtcVarDesc
	ORG $+8
PMC_TryParse$rtcVarDesc DD 098H
	DD	08H
	DQ	FLAT:PMC_TryParse$rtcName$2
	DD	078H
	DD	08H
	DQ	FLAT:PMC_TryParse$rtcName$1
	DD	054H
	DD	01H
	DQ	FLAT:PMC_TryParse$rtcName$0
CONST	ENDS
; Function compile flags: /Odt
;	COMDAT __JustMyCode_Default
_TEXT	SEGMENT
__JustMyCode_Default PROC				; COMDAT
	ret	0
__JustMyCode_Default ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.sint\palmtree.math.core.sint\pmc_parse.c
;	COMDAT PMC_TryParse
_TEXT	SEGMENT
result$ = 4
o_sign$ = 36
o_abs$ = 72
no$ = 104
__$ArrayPad$ = 312
source$ = 352
number_styles$ = 360
format_option$ = 368
o$ = 376
PMC_TryParse PROC					; COMDAT

; 31   : {

$LN7:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 376				; 00000178H
	lea	rbp, QWORD PTR [rsp+48]
	mov	rdi, rsp
	mov	ecx, 94					; 0000005eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+408]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__4A305C9B_pmc_parse@c
	call	__CheckForDebuggerJustMyCode

; 32   :     PMC_STATUS_CODE result;
; 33   :     if (source == NULL)

	cmp	QWORD PTR source$[rbp], 0
	jne	SHORT $LN2@PMC_TryPar

; 34   :         return (PMC_STATUS_ARGUMENT_ERROR);

	mov	eax, -1
	jmp	SHORT $LN1@PMC_TryPar
$LN2@PMC_TryPar:

; 35   :     if (o == NULL)

	cmp	QWORD PTR o$[rbp], 0
	jne	SHORT $LN3@PMC_TryPar

; 36   :         return (PMC_STATUS_ARGUMENT_ERROR);

	mov	eax, -1
	jmp	SHORT $LN1@PMC_TryPar
$LN3@PMC_TryPar:

; 37   : 
; 38   :     char o_sign;
; 39   :     PMC_HANDLE_UINT o_abs;
; 40   :     if ((result = ep_uint.TryParseForSINT(source, number_styles, format_option, &o_sign, &o_abs)) != PMC_STATUS_OK)

	lea	rax, QWORD PTR o_abs$[rbp]
	mov	QWORD PTR [rsp+32], rax
	lea	r9, QWORD PTR o_sign$[rbp]
	mov	r8, QWORD PTR format_option$[rbp]
	mov	edx, DWORD PTR number_styles$[rbp]
	mov	rcx, QWORD PTR source$[rbp]
	call	QWORD PTR ep_uint+552
	mov	DWORD PTR result$[rbp], eax
	cmp	DWORD PTR result$[rbp], 0
	je	SHORT $LN4@PMC_TryPar

; 41   :         return (result);

	mov	eax, DWORD PTR result$[rbp]
	jmp	SHORT $LN1@PMC_TryPar
$LN4@PMC_TryPar:

; 42   : 
; 43   :     NUMBER_HEADER* no;
; 44   :     if ((result = AllocateNumber(&no, o_sign, o_abs)) != PMC_STATUS_OK)

	mov	r8, QWORD PTR o_abs$[rbp]
	movzx	edx, BYTE PTR o_sign$[rbp]
	lea	rcx, QWORD PTR no$[rbp]
	call	AllocateNumber
	mov	DWORD PTR result$[rbp], eax
	cmp	DWORD PTR result$[rbp], 0
	je	SHORT $LN5@PMC_TryPar

; 45   :         return (result);

	mov	eax, DWORD PTR result$[rbp]
	jmp	SHORT $LN1@PMC_TryPar
$LN5@PMC_TryPar:

; 46   : 
; 47   :     *o = (PMC_HANDLE_SINT)no;

	mov	rax, QWORD PTR o$[rbp]
	mov	rcx, QWORD PTR no$[rbp]
	mov	QWORD PTR [rax], rcx

; 48   :     return (PMC_STATUS_OK);

	xor	eax, eax
$LN1@PMC_TryPar:

; 49   : }

	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-48]
	lea	rdx, OFFSET FLAT:PMC_TryParse$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+328]
	pop	rdi
	pop	rbp
	ret	0
PMC_TryParse ENDP
_TEXT	ENDS
END
