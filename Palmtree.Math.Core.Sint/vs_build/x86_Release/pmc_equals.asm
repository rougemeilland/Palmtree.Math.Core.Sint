; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27026.1 

	TITLE	z:\sources\lunor\repos\rougemeilland\palmtree.math.core.sint\palmtree.math.core.sint\pmc_equals.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB OLDNAMES

PUBLIC	_PMC_Equals_X_X@12
PUBLIC	_PMC_Equals_X_UX@12
PUBLIC	_PMC_Equals_X_L@16
PUBLIC	_PMC_Equals_X_I@12
PUBLIC	_PMC_Equals_UX_X@12
PUBLIC	_PMC_Equals_L_X@16
PUBLIC	_PMC_Equals_I_X@12
; Function compile flags: /Ogtp
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.sint\palmtree.math.core.sint\pmc_equals.c
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.sint\palmtree.math.core.sint\pmc_memory.c
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.sint\palmtree.math.core.sint\pmc_equals.c
;	COMDAT _PMC_Equals_X_UX@12
_TEXT	SEGMENT
_u$ = 8							; size = 4
_v$ = 12						; size = 4
_w$ = 16						; size = 4
_PMC_Equals_X_UX@12 PROC				; COMDAT

; 149  : {

	push	ebp
	mov	ebp, esp

; 150  :     if (u == NULL)

	mov	eax, DWORD PTR _u$[ebp]
	test	eax, eax
	je	SHORT $LN20@PMC_Equals

; 151  :         return (PMC_STATUS_ARGUMENT_ERROR);
; 152  :     if (v == NULL)

	mov	ecx, DWORD PTR _v$[ebp]
	test	ecx, ecx
	je	SHORT $LN20@PMC_Equals

; 153  :         return (PMC_STATUS_ARGUMENT_ERROR);
; 154  :     if (w == NULL)

	mov	edx, DWORD PTR _w$[ebp]
	test	edx, edx
	je	SHORT $LN20@PMC_Equals
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.sint\palmtree.math.core.sint\pmc_memory.c

; 202  :     if (p->SIGNATURE1 != PMC_SIGNATURE || p->SIGNATURE2 != PMC_SINT_SIGNATURE)

	cmp	DWORD PTR [eax+4], 1231244656		; 49634d70H
	jne	SHORT $LN16@PMC_Equals
	cmp	DWORD PTR [eax+8], 1951287667		; 744e4973H
	jne	SHORT $LN16@PMC_Equals
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.sint\palmtree.math.core.sint\pmc_equals.c

; 160  :     if (nu->SIGN == 0)

	push	ebx
	mov	bl, BYTE PTR [eax+16]
	test	bl, bl
	jne	SHORT $LN22@PMC_Equals

; 161  :         *w = v->FLAGS.IS_ZERO;

	mov	eax, DWORD PTR [ecx]
	and	eax, 1
	mov	DWORD PTR [edx], eax

; 167  :         return (result);
; 168  : #ifdef _DEBUG
; 169  :     if (*w != 0 && *w != 1)
; 170  :         return (PMC_STATUS_INTERNAL_ERROR);
; 171  : #endif
; 172  :     return (PMC_STATUS_OK);

	xor	eax, eax
	pop	ebx

; 173  : }

	pop	ebp
	ret	12					; 0000000cH
$LN22@PMC_Equals:

; 162  :     else if (nu->SIGN < 0)

	js	SHORT $LN19@PMC_Equals

; 163  :         *w = 0;
; 164  :     else if (v->FLAGS.IS_ZERO)

	test	BYTE PTR [ecx], 1
	jne	SHORT $LN19@PMC_Equals

; 166  :     else if ((result = ep_uint.Equals_X_X(nu->ABS, v, w)) != PMC_STATUS_OK)

	push	edx
	push	ecx
	push	DWORD PTR [eax+12]
	call	DWORD PTR _ep_uint+244
	test	eax, eax
	je	SHORT $LN12@PMC_Equals
	pop	ebx

; 173  : }

	pop	ebp
	ret	12					; 0000000cH
$LN19@PMC_Equals:

; 165  :         *w = 0;

	mov	DWORD PTR [edx], 0
$LN12@PMC_Equals:

; 167  :         return (result);
; 168  : #ifdef _DEBUG
; 169  :     if (*w != 0 && *w != 1)
; 170  :         return (PMC_STATUS_INTERNAL_ERROR);
; 171  : #endif
; 172  :     return (PMC_STATUS_OK);

	xor	eax, eax
	pop	ebx

; 173  : }

	pop	ebp
	ret	12					; 0000000cH
$LN16@PMC_Equals:

; 156  :     PMC_STATUS_CODE result;
; 157  :     NUMBER_HEADER* nu = (NUMBER_HEADER*)u;
; 158  :     if ((result = CheckNumber(nu)) != PMC_STATUS_OK)
; 159  :         return (result);

	mov	eax, -257				; fffffeffH

; 173  : }

	pop	ebp
	ret	12					; 0000000cH
$LN20@PMC_Equals:

; 155  :         return (PMC_STATUS_ARGUMENT_ERROR);

	or	eax, -1

; 173  : }

	pop	ebp
	ret	12					; 0000000cH
_PMC_Equals_X_UX@12 ENDP
_TEXT	ENDS
END
