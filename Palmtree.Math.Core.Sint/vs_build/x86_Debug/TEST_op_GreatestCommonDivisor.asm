; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27026.1 

	TITLE	Z:\Sources\Lunor\Repos\rougemeilland\Palmtree.Math.Core.Sint\Palmtree.Math.Core.Sint\TEST_op_GreatestCommonDivisor.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

_DATA	SEGMENT
COMM	_uint_number_zero:DWORD
COMM	_uint_number_one:DWORD
_DATA	ENDS
msvcjmc	SEGMENT
__7B7A869E_ctype@h DB 01H
__457DD326_basetsd@h DB 01H
__4384A2D9_corecrt_memcpy_s@h DB 01H
__4E51A221_corecrt_wstring@h DB 01H
__2140C079_string@h DB 01H
__1887E595_winnt@h DB 01H
__9FC7C64B_processthreadsapi@h DB 01H
__FA470AEC_memoryapi@h DB 01H
__F37DAFF1_winerror@h DB 01H
__7A450CCC_winbase@h DB 01H
__B4B40122_winioctl@h DB 01H
__86261D59_stralign@h DB 01H
__059414E1_pmc_sint_debug@h DB 01H
__8C95CAB4_test_op_greatestcommondivisor@c DB 01H
msvcjmc	ENDS
PUBLIC	_TEST_GreatestCommonDivisor_I_X
PUBLIC	_TEST_GreatestCommonDivisor_L_X
PUBLIC	_TEST_GreatestCommonDivisor_UX_X
PUBLIC	_TEST_GreatestCommonDivisor_X_I
PUBLIC	_TEST_GreatestCommonDivisor_X_L
PUBLIC	_TEST_GreatestCommonDivisor_X_UX
PUBLIC	_TEST_GreatestCommonDivisor_X_X
PUBLIC	__JustMyCode_Default
PUBLIC	??_C@_1EC@NPMCAPKO@?$AAF?$AAr?$AAo?$AAm?$AAB?$AAy?$AAt?$AAe?$AAA?$AAr?$AAr?$AAa?$AAy?$AAn?$PP?$KJ@ ; `string'
PUBLIC	??_C@_1EE@HMCBFGEH@?$AAG?$AAr?$AAe?$AAa?$AAt?$AAe?$AAs?$AAt?$AAC?$AAo?$AAm?$AAm?$AAo?$AAn?$AAD@ ; `string'
PUBLIC	??_C@_1FK@DEBGJFKO@?$AAG?$AAr?$AAe?$AAa?$AAt?$AAe?$AAs?$AAt?$AAC?$AAo?$AAm?$AAm?$AAo?$AAn?$AAD@ ; `string'
PUBLIC	??_C@_1DO@DOHJEMND@?$AAT?$AAo?$AAB?$AAy?$AAt?$AAe?$AAA?$AAr?$AAr?$AAa?$AAy?$AAn?$PP?$KJ?$AA0?$PP?$LD@ ; `string'
PUBLIC	??_C@_1BK@CBDJCOBM@?$PP?G?$PP?$PM?$PP?$LP?$AAn?$PP?$IF?$PP?$LJ?$AAL?$AA?$AA?$PP?t?$AAW?$AAj?$AAD@ ; `string'
PUBLIC	??_C@_1EE@JEACKNDP@?$AAG?$AAr?$AAe?$AAa?$AAt?$AAe?$AAs?$AAt?$AAC?$AAo?$AAm?$AAm?$AAo?$AAn?$AAD@ ; `string'
PUBLIC	??_C@_1FK@GPIIGGDA@?$AAG?$AAr?$AAe?$AAa?$AAt?$AAe?$AAs?$AAt?$AAC?$AAo?$AAm?$AAm?$AAo?$AAn?$AAD@ ; `string'
PUBLIC	??_C@_1EG@IFNFFAEE@?$AAG?$AAr?$AAe?$AAa?$AAt?$AAe?$AAs?$AAt?$AAC?$AAo?$AAm?$AAm?$AAo?$AAn?$AAD@ ; `string'
PUBLIC	??_C@_1FM@CNBBCJNO@?$AAG?$AAr?$AAe?$AAa?$AAt?$AAe?$AAs?$AAt?$AAC?$AAo?$AAm?$AAm?$AAo?$AAn?$AAD@ ; `string'
PUBLIC	??_C@_1EE@HMONMDO@?$AAG?$AAr?$AAe?$AAa?$AAt?$AAe?$AAs?$AAt?$AAC?$AAo?$AAm?$AAm?$AAo?$AAn?$AAD@ ; `string'
PUBLIC	??_C@_1FK@GIINEDIJ@?$AAG?$AAr?$AAe?$AAa?$AAt?$AAe?$AAs?$AAt?$AAC?$AAo?$AAm?$AAm?$AAo?$AAn?$AAD@ ; `string'
PUBLIC	??_C@_1EE@CMEEAMCB@?$AAG?$AAr?$AAe?$AAa?$AAt?$AAe?$AAs?$AAt?$AAC?$AAo?$AAm?$AAm?$AAo?$AAn?$AAD@ ; `string'
PUBLIC	??_C@_1FK@CAMBNOBM@?$AAG?$AAr?$AAe?$AAa?$AAt?$AAe?$AAs?$AAt?$AAC?$AAo?$AAm?$AAm?$AAo?$AAn?$AAD@ ; `string'
PUBLIC	??_C@_1EG@LLHOJFEG@?$AAG?$AAr?$AAe?$AAa?$AAt?$AAe?$AAs?$AAt?$AAC?$AAo?$AAm?$AAm?$AAo?$AAn?$AAD@ ; `string'
PUBLIC	??_C@_1FM@KKPEGHPO@?$AAG?$AAr?$AAe?$AAa?$AAt?$AAe?$AAs?$AAt?$AAC?$AAo?$AAm?$AAm?$AAo?$AAn?$AAD@ ; `string'
PUBLIC	??_C@_1EK@HDEICNAJ@?$AAP?$AAM?$AAC?$AA_?$AAF?$AAr?$AAo?$AAm?$AAB?$AAy?$AAt?$AAe?$AAA?$AAr?$AAr@ ; `string'
PUBLIC	??_C@_1EE@ICGPEMFN@?$AAG?$AAr?$AAe?$AAa?$AAt?$AAe?$AAs?$AAt?$AAC?$AAo?$AAm?$AAm?$AAo?$AAn?$AAD@ ; `string'
PUBLIC	??_C@_1FK@NKICKOAJ@?$AAG?$AAr?$AAe?$AAa?$AAt?$AAe?$AAs?$AAt?$AAC?$AAo?$AAm?$AAm?$AAo?$AAn?$AAD@ ; `string'
EXTRN	_TEST_Assert:PROC
EXTRN	_FormatTestLabel:PROC
EXTRN	_FormatTestMesssage:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	@__CheckForDebuggerJustMyCode@4:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	___security_cookie:DWORD
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_C@_1FK@NKICKOAJ@?$AAG?$AAr?$AAe?$AAa?$AAt?$AAe?$AAs?$AAt?$AAC?$AAo?$AAm?$AAm?$AAo?$AAn?$AAD@
CONST	SEGMENT
??_C@_1FK@NKICKOAJ@?$AAG?$AAr?$AAe?$AAa?$AAt?$AAe?$AAs?$AAt?$AAC?$AAo?$AAm?$AAm?$AAo?$AAn?$AAD@ DB 'G'
	DB	00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 's', 00H
	DB	't', 00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'o', 00H, 'n'
	DB	00H, 'D', 00H, 'i', 00H, 'v', 00H, 'i', 00H, 's', 00H, 'o', 00H
	DB	'r', 00H, '_', 00H, 'X', 00H, '_', 00H, 'X', 00H, 'n0', 0a9H, '_'
	DB	'0^', 0b3H, '0', 0fcH, '0', 0c9H, '0L0', 01fH, 'g', 085H, '_', 01aH
	DB	090H, 08aH, '0g0o0j0D0(', 00H, '%', 00H, 'd', 00H, ')', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1EE@ICGPEMFN@?$AAG?$AAr?$AAe?$AAa?$AAt?$AAe?$AAs?$AAt?$AAC?$AAo?$AAm?$AAm?$AAo?$AAn?$AAD@
CONST	SEGMENT
??_C@_1EE@ICGPEMFN@?$AAG?$AAr?$AAe?$AAa?$AAt?$AAe?$AAs?$AAt?$AAC?$AAo?$AAm?$AAm?$AAo?$AAn?$AAD@ DB 'G'
	DB	00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 's', 00H
	DB	't', 00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'o', 00H, 'n'
	DB	00H, 'D', 00H, 'i', 00H, 'v', 00H, 'i', 00H, 's', 00H, 'o', 00H
	DB	'r', 00H, '_', 00H, 'X', 00H, '_', 00H, 'X', 00H, ' ', 00H, '('
	DB	00H, '%', 00H, 'd', 00H, '.', 00H, '%', 00H, 'd', 00H, ')', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1EK@HDEICNAJ@?$AAP?$AAM?$AAC?$AA_?$AAF?$AAr?$AAo?$AAm?$AAB?$AAy?$AAt?$AAe?$AAA?$AAr?$AAr@
CONST	SEGMENT
??_C@_1EK@HDEICNAJ@?$AAP?$AAM?$AAC?$AA_?$AAF?$AAr?$AAo?$AAm?$AAB?$AAy?$AAt?$AAe?$AAA?$AAr?$AAr@ DB 'P'
	DB	00H, 'M', 00H, 'C', 00H, '_', 00H, 'F', 00H, 'r', 00H, 'o', 00H
	DB	'm', 00H, 'B', 00H, 'y', 00H, 't', 00H, 'e', 00H, 'A', 00H, 'r'
	DB	00H, 'r', 00H, 'a', 00H, 'y', 00H, 'n0', 0a9H, '_0^', 0b3H, '0'
	DB	0fcH, '0', 0c9H, '0L0', 01fH, 'g', 085H, '_', 01aH, 090H, 08aH
	DB	'0g0o0j0D0(', 00H, '%', 00H, 'd', 00H, ')', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1FM@KKPEGHPO@?$AAG?$AAr?$AAe?$AAa?$AAt?$AAe?$AAs?$AAt?$AAC?$AAo?$AAm?$AAm?$AAo?$AAn?$AAD@
CONST	SEGMENT
??_C@_1FM@KKPEGHPO@?$AAG?$AAr?$AAe?$AAa?$AAt?$AAe?$AAs?$AAt?$AAC?$AAo?$AAm?$AAm?$AAo?$AAn?$AAD@ DB 'G'
	DB	00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 's', 00H
	DB	't', 00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'o', 00H, 'n'
	DB	00H, 'D', 00H, 'i', 00H, 'v', 00H, 'i', 00H, 's', 00H, 'o', 00H
	DB	'r', 00H, '_', 00H, 'X', 00H, '_', 00H, 'U', 00H, 'X', 00H, 'n'
	DB	'0', 0a9H, '_0^', 0b3H, '0', 0fcH, '0', 0c9H, '0L0', 01fH, 'g', 085H
	DB	'_', 01aH, 090H, 08aH, '0g0o0j0D0(', 00H, '%', 00H, 'd', 00H, ')'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1EG@LLHOJFEG@?$AAG?$AAr?$AAe?$AAa?$AAt?$AAe?$AAs?$AAt?$AAC?$AAo?$AAm?$AAm?$AAo?$AAn?$AAD@
CONST	SEGMENT
??_C@_1EG@LLHOJFEG@?$AAG?$AAr?$AAe?$AAa?$AAt?$AAe?$AAs?$AAt?$AAC?$AAo?$AAm?$AAm?$AAo?$AAn?$AAD@ DB 'G'
	DB	00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 's', 00H
	DB	't', 00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'o', 00H, 'n'
	DB	00H, 'D', 00H, 'i', 00H, 'v', 00H, 'i', 00H, 's', 00H, 'o', 00H
	DB	'r', 00H, '_', 00H, 'X', 00H, '_', 00H, 'U', 00H, 'X', 00H, ' '
	DB	00H, '(', 00H, '%', 00H, 'd', 00H, '.', 00H, '%', 00H, 'd', 00H
	DB	')', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1FK@CAMBNOBM@?$AAG?$AAr?$AAe?$AAa?$AAt?$AAe?$AAs?$AAt?$AAC?$AAo?$AAm?$AAm?$AAo?$AAn?$AAD@
CONST	SEGMENT
??_C@_1FK@CAMBNOBM@?$AAG?$AAr?$AAe?$AAa?$AAt?$AAe?$AAs?$AAt?$AAC?$AAo?$AAm?$AAm?$AAo?$AAn?$AAD@ DB 'G'
	DB	00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 's', 00H
	DB	't', 00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'o', 00H, 'n'
	DB	00H, 'D', 00H, 'i', 00H, 'v', 00H, 'i', 00H, 's', 00H, 'o', 00H
	DB	'r', 00H, '_', 00H, 'X', 00H, '_', 00H, 'L', 00H, 'n0', 0a9H, '_'
	DB	'0^', 0b3H, '0', 0fcH, '0', 0c9H, '0L0', 01fH, 'g', 085H, '_', 01aH
	DB	090H, 08aH, '0g0o0j0D0(', 00H, '%', 00H, 'd', 00H, ')', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1EE@CMEEAMCB@?$AAG?$AAr?$AAe?$AAa?$AAt?$AAe?$AAs?$AAt?$AAC?$AAo?$AAm?$AAm?$AAo?$AAn?$AAD@
CONST	SEGMENT
??_C@_1EE@CMEEAMCB@?$AAG?$AAr?$AAe?$AAa?$AAt?$AAe?$AAs?$AAt?$AAC?$AAo?$AAm?$AAm?$AAo?$AAn?$AAD@ DB 'G'
	DB	00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 's', 00H
	DB	't', 00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'o', 00H, 'n'
	DB	00H, 'D', 00H, 'i', 00H, 'v', 00H, 'i', 00H, 's', 00H, 'o', 00H
	DB	'r', 00H, '_', 00H, 'X', 00H, '_', 00H, 'L', 00H, ' ', 00H, '('
	DB	00H, '%', 00H, 'd', 00H, '.', 00H, '%', 00H, 'd', 00H, ')', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1FK@GIINEDIJ@?$AAG?$AAr?$AAe?$AAa?$AAt?$AAe?$AAs?$AAt?$AAC?$AAo?$AAm?$AAm?$AAo?$AAn?$AAD@
CONST	SEGMENT
??_C@_1FK@GIINEDIJ@?$AAG?$AAr?$AAe?$AAa?$AAt?$AAe?$AAs?$AAt?$AAC?$AAo?$AAm?$AAm?$AAo?$AAn?$AAD@ DB 'G'
	DB	00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 's', 00H
	DB	't', 00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'o', 00H, 'n'
	DB	00H, 'D', 00H, 'i', 00H, 'v', 00H, 'i', 00H, 's', 00H, 'o', 00H
	DB	'r', 00H, '_', 00H, 'X', 00H, '_', 00H, 'I', 00H, 'n0', 0a9H, '_'
	DB	'0^', 0b3H, '0', 0fcH, '0', 0c9H, '0L0', 01fH, 'g', 085H, '_', 01aH
	DB	090H, 08aH, '0g0o0j0D0(', 00H, '%', 00H, 'd', 00H, ')', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1EE@HMONMDO@?$AAG?$AAr?$AAe?$AAa?$AAt?$AAe?$AAs?$AAt?$AAC?$AAo?$AAm?$AAm?$AAo?$AAn?$AAD@
CONST	SEGMENT
??_C@_1EE@HMONMDO@?$AAG?$AAr?$AAe?$AAa?$AAt?$AAe?$AAs?$AAt?$AAC?$AAo?$AAm?$AAm?$AAo?$AAn?$AAD@ DB 'G'
	DB	00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 's', 00H
	DB	't', 00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'o', 00H, 'n'
	DB	00H, 'D', 00H, 'i', 00H, 'v', 00H, 'i', 00H, 's', 00H, 'o', 00H
	DB	'r', 00H, '_', 00H, 'X', 00H, '_', 00H, 'I', 00H, ' ', 00H, '('
	DB	00H, '%', 00H, 'd', 00H, '.', 00H, '%', 00H, 'd', 00H, ')', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1FM@CNBBCJNO@?$AAG?$AAr?$AAe?$AAa?$AAt?$AAe?$AAs?$AAt?$AAC?$AAo?$AAm?$AAm?$AAo?$AAn?$AAD@
CONST	SEGMENT
??_C@_1FM@CNBBCJNO@?$AAG?$AAr?$AAe?$AAa?$AAt?$AAe?$AAs?$AAt?$AAC?$AAo?$AAm?$AAm?$AAo?$AAn?$AAD@ DB 'G'
	DB	00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 's', 00H
	DB	't', 00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'o', 00H, 'n'
	DB	00H, 'D', 00H, 'i', 00H, 'v', 00H, 'i', 00H, 's', 00H, 'o', 00H
	DB	'r', 00H, '_', 00H, 'U', 00H, 'X', 00H, '_', 00H, 'X', 00H, 'n'
	DB	'0', 0a9H, '_0^', 0b3H, '0', 0fcH, '0', 0c9H, '0L0', 01fH, 'g', 085H
	DB	'_', 01aH, 090H, 08aH, '0g0o0j0D0(', 00H, '%', 00H, 'd', 00H, ')'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1EG@IFNFFAEE@?$AAG?$AAr?$AAe?$AAa?$AAt?$AAe?$AAs?$AAt?$AAC?$AAo?$AAm?$AAm?$AAo?$AAn?$AAD@
CONST	SEGMENT
??_C@_1EG@IFNFFAEE@?$AAG?$AAr?$AAe?$AAa?$AAt?$AAe?$AAs?$AAt?$AAC?$AAo?$AAm?$AAm?$AAo?$AAn?$AAD@ DB 'G'
	DB	00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 's', 00H
	DB	't', 00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'o', 00H, 'n'
	DB	00H, 'D', 00H, 'i', 00H, 'v', 00H, 'i', 00H, 's', 00H, 'o', 00H
	DB	'r', 00H, '_', 00H, 'U', 00H, 'X', 00H, '_', 00H, 'X', 00H, ' '
	DB	00H, '(', 00H, '%', 00H, 'd', 00H, '.', 00H, '%', 00H, 'd', 00H
	DB	')', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1FK@GPIIGGDA@?$AAG?$AAr?$AAe?$AAa?$AAt?$AAe?$AAs?$AAt?$AAC?$AAo?$AAm?$AAm?$AAo?$AAn?$AAD@
CONST	SEGMENT
??_C@_1FK@GPIIGGDA@?$AAG?$AAr?$AAe?$AAa?$AAt?$AAe?$AAs?$AAt?$AAC?$AAo?$AAm?$AAm?$AAo?$AAn?$AAD@ DB 'G'
	DB	00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 's', 00H
	DB	't', 00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'o', 00H, 'n'
	DB	00H, 'D', 00H, 'i', 00H, 'v', 00H, 'i', 00H, 's', 00H, 'o', 00H
	DB	'r', 00H, '_', 00H, 'L', 00H, '_', 00H, 'X', 00H, 'n0', 0a9H, '_'
	DB	'0^', 0b3H, '0', 0fcH, '0', 0c9H, '0L0', 01fH, 'g', 085H, '_', 01aH
	DB	090H, 08aH, '0g0o0j0D0(', 00H, '%', 00H, 'd', 00H, ')', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1EE@JEACKNDP@?$AAG?$AAr?$AAe?$AAa?$AAt?$AAe?$AAs?$AAt?$AAC?$AAo?$AAm?$AAm?$AAo?$AAn?$AAD@
CONST	SEGMENT
??_C@_1EE@JEACKNDP@?$AAG?$AAr?$AAe?$AAa?$AAt?$AAe?$AAs?$AAt?$AAC?$AAo?$AAm?$AAm?$AAo?$AAn?$AAD@ DB 'G'
	DB	00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 's', 00H
	DB	't', 00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'o', 00H, 'n'
	DB	00H, 'D', 00H, 'i', 00H, 'v', 00H, 'i', 00H, 's', 00H, 'o', 00H
	DB	'r', 00H, '_', 00H, 'L', 00H, '_', 00H, 'X', 00H, ' ', 00H, '('
	DB	00H, '%', 00H, 'd', 00H, '.', 00H, '%', 00H, 'd', 00H, ')', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1BK@CBDJCOBM@?$PP?G?$PP?$PM?$PP?$LP?$AAn?$PP?$IF?$PP?$LJ?$AAL?$AA?$AA?$PP?t?$AAW?$AAj?$AAD@
CONST	SEGMENT
??_C@_1BK@CBDJCOBM@?$PP?G?$PP?$PM?$PP?$LP?$AAn?$PP?$IF?$PP?$LJ?$AAL?$AA?$AA?$PP?t?$AAW?$AAj?$AAD@ DB 0c7H
	DB	'0', 0fcH, '0', 0bfH, '0n0', 085H, 'Q', 0b9H, '[L0', 00H, 'N', 0f4H
	DB	081H, 'W0j0D0', 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1DO@DOHJEMND@?$AAT?$AAo?$AAB?$AAy?$AAt?$AAe?$AAA?$AAr?$AAr?$AAa?$AAy?$AAn?$PP?$KJ?$AA0?$PP?$LD@
CONST	SEGMENT
??_C@_1DO@DOHJEMND@?$AAT?$AAo?$AAB?$AAy?$AAt?$AAe?$AAA?$AAr?$AAr?$AAa?$AAy?$AAn?$PP?$KJ?$AA0?$PP?$LD@ DB 'T'
	DB	00H, 'o', 00H, 'B', 00H, 'y', 00H, 't', 00H, 'e', 00H, 'A', 00H
	DB	'r', 00H, 'r', 00H, 'a', 00H, 'y', 00H, 'n0', 0a9H, '_0^', 0b3H
	DB	'0', 0fcH, '0', 0c9H, '0L0', 01fH, 'g', 085H, '_', 01aH, 090H, 08aH
	DB	'0g0o0j0D0(', 00H, '%', 00H, 'd', 00H, ')', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1FK@DEBGJFKO@?$AAG?$AAr?$AAe?$AAa?$AAt?$AAe?$AAs?$AAt?$AAC?$AAo?$AAm?$AAm?$AAo?$AAn?$AAD@
CONST	SEGMENT
??_C@_1FK@DEBGJFKO@?$AAG?$AAr?$AAe?$AAa?$AAt?$AAe?$AAs?$AAt?$AAC?$AAo?$AAm?$AAm?$AAo?$AAn?$AAD@ DB 'G'
	DB	00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 's', 00H
	DB	't', 00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'o', 00H, 'n'
	DB	00H, 'D', 00H, 'i', 00H, 'v', 00H, 'i', 00H, 's', 00H, 'o', 00H
	DB	'r', 00H, '_', 00H, 'I', 00H, '_', 00H, 'X', 00H, 'n0', 0a9H, '_'
	DB	'0^', 0b3H, '0', 0fcH, '0', 0c9H, '0L0', 01fH, 'g', 085H, '_', 01aH
	DB	090H, 08aH, '0g0o0j0D0(', 00H, '%', 00H, 'd', 00H, ')', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1EE@HMCBFGEH@?$AAG?$AAr?$AAe?$AAa?$AAt?$AAe?$AAs?$AAt?$AAC?$AAo?$AAm?$AAm?$AAo?$AAn?$AAD@
CONST	SEGMENT
??_C@_1EE@HMCBFGEH@?$AAG?$AAr?$AAe?$AAa?$AAt?$AAe?$AAs?$AAt?$AAC?$AAo?$AAm?$AAm?$AAo?$AAn?$AAD@ DB 'G'
	DB	00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 's', 00H
	DB	't', 00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'o', 00H, 'n'
	DB	00H, 'D', 00H, 'i', 00H, 'v', 00H, 'i', 00H, 's', 00H, 'o', 00H
	DB	'r', 00H, '_', 00H, 'I', 00H, '_', 00H, 'X', 00H, ' ', 00H, '('
	DB	00H, '%', 00H, 'd', 00H, '.', 00H, '%', 00H, 'd', 00H, ')', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1EC@NPMCAPKO@?$AAF?$AAr?$AAo?$AAm?$AAB?$AAy?$AAt?$AAe?$AAA?$AAr?$AAr?$AAa?$AAy?$AAn?$PP?$KJ@
CONST	SEGMENT
??_C@_1EC@NPMCAPKO@?$AAF?$AAr?$AAo?$AAm?$AAB?$AAy?$AAt?$AAe?$AAA?$AAr?$AAr?$AAa?$AAy?$AAn?$PP?$KJ@ DB 'F'
	DB	00H, 'r', 00H, 'o', 00H, 'm', 00H, 'B', 00H, 'y', 00H, 't', 00H
	DB	'e', 00H, 'A', 00H, 'r', 00H, 'r', 00H, 'a', 00H, 'y', 00H, 'n'
	DB	'0', 0a9H, '_0^', 0b3H, '0', 0fcH, '0', 0c9H, '0L0', 01fH, 'g', 085H
	DB	'_', 01aH, 090H, 08aH, '0g0o0j0D0(', 00H, '%', 00H, 'd', 00H, ')'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
; Function compile flags: /Odt
;	COMDAT __JustMyCode_Default
_TEXT	SEGMENT
__JustMyCode_Default PROC				; COMDAT
	push	ebp
	mov	ebp, esp
	pop	ebp
	ret	0
__JustMyCode_Default ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.sint\palmtree.math.core.sint\pmc_sint_debug.h
;	COMDAT __EQUALS_MEMORY
_TEXT	SEGMENT
_buffer1$ = 8						; size = 4
_count1$ = 12						; size = 4
_buffer2$ = 16						; size = 4
_count2$ = 20						; size = 4
__EQUALS_MEMORY PROC					; COMDAT

; 140  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __059414E1_pmc_sint_debug@h
	call	@__CheckForDebuggerJustMyCode@4

; 141  :     if (count1 != count2)

	mov	eax, DWORD PTR _count1$[ebp]
	cmp	eax, DWORD PTR _count2$[ebp]
	je	SHORT $LN2@EQUALS_MEM

; 142  :         return (-1);

	or	eax, -1
	jmp	SHORT $LN1@EQUALS_MEM
$LN2@EQUALS_MEM:

; 143  :     while (count1 > 0)

	cmp	DWORD PTR _count1$[ebp], 0
	jbe	SHORT $LN3@EQUALS_MEM

; 144  :     {
; 145  :         if (*buffer1 != *buffer2)

	mov	eax, DWORD PTR _buffer1$[ebp]
	movzx	ecx, BYTE PTR [eax]
	mov	edx, DWORD PTR _buffer2$[ebp]
	movzx	eax, BYTE PTR [edx]
	cmp	ecx, eax
	je	SHORT $LN5@EQUALS_MEM

; 146  :             return (-1);

	or	eax, -1
	jmp	SHORT $LN1@EQUALS_MEM
$LN5@EQUALS_MEM:

; 147  :         ++buffer1;

	mov	eax, DWORD PTR _buffer1$[ebp]
	add	eax, 1
	mov	DWORD PTR _buffer1$[ebp], eax

; 148  :         ++buffer2;

	mov	eax, DWORD PTR _buffer2$[ebp]
	add	eax, 1
	mov	DWORD PTR _buffer2$[ebp], eax

; 149  :         --count1;

	mov	eax, DWORD PTR _count1$[ebp]
	sub	eax, 1
	mov	DWORD PTR _count1$[ebp], eax

; 150  :     }

	jmp	SHORT $LN2@EQUALS_MEM
$LN3@EQUALS_MEM:

; 151  :     return (0);

	xor	eax, eax
$LN1@EQUALS_MEM:

; 152  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__EQUALS_MEMORY ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.sint\palmtree.math.core.sint\test_op_greatestcommondivisor.c
;	COMDAT _TEST_GreatestCommonDivisor_X_X
_TEXT	SEGMENT
tv177 = -560						; size = 4
tv162 = -560						; size = 4
tv142 = -560						; size = 4
tv92 = -560						; size = 4
tv74 = -560						; size = 4
_w_result$ = -360					; size = 4
_v_result$ = -348					; size = 4
_u_result$ = -336					; size = 4
_result$ = -324						; size = 4
_actual_z_buf_size$ = -312				; size = 4
_actual_z_buf$ = -300					; size = 256
_w$ = -36						; size = 4
_v$ = -24						; size = 4
_u$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_env$ = 8						; size = 4
_ep$ = 12						; size = 4
_no$ = 16						; size = 4
_u_buf$ = 20						; size = 4
_u_buf_size$ = 24					; size = 4
_v_buf$ = 28						; size = 4
_v_buf_size$ = 32					; size = 4
_desired_status$ = 36					; size = 4
_desired_w_buf$ = 40					; size = 4
_desired_w_buf_size$ = 44				; size = 4
_TEST_GreatestCommonDivisor_X_X PROC			; COMDAT

; 173  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 560				; 00000230H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-560]
	mov	ecx, 140				; 0000008cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	ecx, OFFSET __8C95CAB4_test_op_greatestcommondivisor@c
	call	@__CheckForDebuggerJustMyCode@4

; 174  :     PMC_HANDLE_SINT u;
; 175  :     PMC_HANDLE_SINT v;
; 176  :     PMC_HANDLE_UINT w;
; 177  :     unsigned char actual_z_buf[256];
; 178  :     size_t actual_z_buf_size;
; 179  :     PMC_STATUS_CODE result;
; 180  :     PMC_STATUS_CODE u_result;
; 181  :     PMC_STATUS_CODE v_result;
; 182  :     PMC_STATUS_CODE w_result;
; 183  :     TEST_Assert(env, FormatTestLabel(L"GreatestCommonDivisor_X_X (%d.%d)", no, 1), (u_result = ep->FromByteArray(u_buf, u_buf_size, &u)) == PMC_STATUS_OK, FormatTestMesssage(L"PMC_FromByteArrayの復帰コードが期待通りではない(%d)", u_result));

	mov	esi, esp
	lea	eax, DWORD PTR _u$[ebp]
	push	eax
	mov	ecx, DWORD PTR _u_buf_size$[ebp]
	push	ecx
	mov	edx, DWORD PTR _u_buf$[ebp]
	push	edx
	mov	eax, DWORD PTR _ep$[ebp]
	mov	ecx, DWORD PTR [eax+304]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _u_result$[ebp], eax
	cmp	DWORD PTR _u_result$[ebp], 0
	jne	SHORT $LN7@TEST_Great
	mov	DWORD PTR tv74[ebp], 1
	jmp	SHORT $LN8@TEST_Great
$LN7@TEST_Great:
	mov	DWORD PTR tv74[ebp], 0
$LN8@TEST_Great:
	mov	edx, DWORD PTR _u_result$[ebp]
	push	edx
	push	OFFSET ??_C@_1EK@HDEICNAJ@?$AAP?$AAM?$AAC?$AA_?$AAF?$AAr?$AAo?$AAm?$AAB?$AAy?$AAt?$AAe?$AAA?$AAr?$AAr@
	call	_FormatTestMesssage
	add	esp, 8
	push	eax
	mov	eax, DWORD PTR tv74[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _no$[ebp]
	push	ecx
	push	OFFSET ??_C@_1EE@ICGPEMFN@?$AAG?$AAr?$AAe?$AAa?$AAt?$AAe?$AAs?$AAt?$AAC?$AAo?$AAm?$AAm?$AAo?$AAn?$AAD@
	call	_FormatTestLabel
	add	esp, 12					; 0000000cH
	push	eax
	mov	edx, DWORD PTR _env$[ebp]
	push	edx
	call	_TEST_Assert
	add	esp, 16					; 00000010H

; 184  :     TEST_Assert(env, FormatTestLabel(L"GreatestCommonDivisor_X_X (%d.%d)", no, 2), (v_result = ep->FromByteArray(v_buf, v_buf_size, &v)) == PMC_STATUS_OK, FormatTestMesssage(L"FromByteArrayの復帰コードが期待通りではない(%d)", v_result));

	mov	esi, esp
	lea	eax, DWORD PTR _v$[ebp]
	push	eax
	mov	ecx, DWORD PTR _v_buf_size$[ebp]
	push	ecx
	mov	edx, DWORD PTR _v_buf$[ebp]
	push	edx
	mov	eax, DWORD PTR _ep$[ebp]
	mov	ecx, DWORD PTR [eax+304]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _v_result$[ebp], eax
	cmp	DWORD PTR _v_result$[ebp], 0
	jne	SHORT $LN9@TEST_Great
	mov	DWORD PTR tv92[ebp], 1
	jmp	SHORT $LN10@TEST_Great
$LN9@TEST_Great:
	mov	DWORD PTR tv92[ebp], 0
$LN10@TEST_Great:
	mov	edx, DWORD PTR _v_result$[ebp]
	push	edx
	push	OFFSET ??_C@_1EC@NPMCAPKO@?$AAF?$AAr?$AAo?$AAm?$AAB?$AAy?$AAt?$AAe?$AAA?$AAr?$AAr?$AAa?$AAy?$AAn?$PP?$KJ@
	call	_FormatTestMesssage
	add	esp, 8
	push	eax
	mov	eax, DWORD PTR tv92[ebp]
	push	eax
	push	2
	mov	ecx, DWORD PTR _no$[ebp]
	push	ecx
	push	OFFSET ??_C@_1EE@ICGPEMFN@?$AAG?$AAr?$AAe?$AAa?$AAt?$AAe?$AAs?$AAt?$AAC?$AAo?$AAm?$AAm?$AAo?$AAn?$AAD@
	call	_FormatTestLabel
	add	esp, 12					; 0000000cH
	push	eax
	mov	edx, DWORD PTR _env$[ebp]
	push	edx
	call	_TEST_Assert
	add	esp, 16					; 00000010H

; 185  :     TEST_Assert(env, FormatTestLabel(L"GreatestCommonDivisor_X_X (%d.%d)", no, 3), (w_result = ep->GreatestCommonDivisor_X_X(u, v, &w)) == desired_status, FormatTestMesssage(L"GreatestCommonDivisor_X_Xの復帰コードが期待通りではない(%d)", w_result));

	mov	esi, esp
	lea	eax, DWORD PTR _w$[ebp]
	push	eax
	mov	ecx, DWORD PTR _v$[ebp]
	push	ecx
	mov	edx, DWORD PTR _u$[ebp]
	push	edx
	mov	eax, DWORD PTR _ep$[ebp]
	mov	ecx, DWORD PTR [eax+524]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _w_result$[ebp], eax
	mov	edx, DWORD PTR _w_result$[ebp]
	cmp	edx, DWORD PTR _desired_status$[ebp]
	jne	SHORT $LN11@TEST_Great
	mov	DWORD PTR tv142[ebp], 1
	jmp	SHORT $LN12@TEST_Great
$LN11@TEST_Great:
	mov	DWORD PTR tv142[ebp], 0
$LN12@TEST_Great:
	mov	eax, DWORD PTR _w_result$[ebp]
	push	eax
	push	OFFSET ??_C@_1FK@NKICKOAJ@?$AAG?$AAr?$AAe?$AAa?$AAt?$AAe?$AAs?$AAt?$AAC?$AAo?$AAm?$AAm?$AAo?$AAn?$AAD@
	call	_FormatTestMesssage
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR tv142[ebp]
	push	ecx
	push	3
	mov	edx, DWORD PTR _no$[ebp]
	push	edx
	push	OFFSET ??_C@_1EE@ICGPEMFN@?$AAG?$AAr?$AAe?$AAa?$AAt?$AAe?$AAs?$AAt?$AAC?$AAo?$AAm?$AAm?$AAo?$AAn?$AAD@
	call	_FormatTestLabel
	add	esp, 12					; 0000000cH
	push	eax
	mov	eax, DWORD PTR _env$[ebp]
	push	eax
	call	_TEST_Assert
	add	esp, 16					; 00000010H

; 186  :     if (desired_status == PMC_STATUS_OK)

	cmp	DWORD PTR _desired_status$[ebp], 0
	jne	$LN2@TEST_Great

; 187  :     {
; 188  :         TEST_Assert(env, FormatTestLabel(L"GreatestCommonDivisor_X_X (%d.%d)", no, 4), (result = ep->UINT_ENTRY_POINTS.ToByteArray(w, actual_z_buf, sizeof(actual_z_buf), &actual_z_buf_size)) == PMC_STATUS_OK, FormatTestMesssage(L"ToByteArrayの復帰コードが期待通りではない(%d)", result));

	mov	esi, esp
	lea	eax, DWORD PTR _actual_z_buf_size$[ebp]
	push	eax
	push	256					; 00000100H
	lea	ecx, DWORD PTR _actual_z_buf$[ebp]
	push	ecx
	mov	edx, DWORD PTR _w$[ebp]
	push	edx
	mov	eax, DWORD PTR _ep$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _result$[ebp], eax
	cmp	DWORD PTR _result$[ebp], 0
	jne	SHORT $LN13@TEST_Great
	mov	DWORD PTR tv162[ebp], 1
	jmp	SHORT $LN14@TEST_Great
$LN13@TEST_Great:
	mov	DWORD PTR tv162[ebp], 0
$LN14@TEST_Great:
	mov	edx, DWORD PTR _result$[ebp]
	push	edx
	push	OFFSET ??_C@_1DO@DOHJEMND@?$AAT?$AAo?$AAB?$AAy?$AAt?$AAe?$AAA?$AAr?$AAr?$AAa?$AAy?$AAn?$PP?$KJ?$AA0?$PP?$LD@
	call	_FormatTestMesssage
	add	esp, 8
	push	eax
	mov	eax, DWORD PTR tv162[ebp]
	push	eax
	push	4
	mov	ecx, DWORD PTR _no$[ebp]
	push	ecx
	push	OFFSET ??_C@_1EE@ICGPEMFN@?$AAG?$AAr?$AAe?$AAa?$AAt?$AAe?$AAs?$AAt?$AAC?$AAo?$AAm?$AAm?$AAo?$AAn?$AAD@
	call	_FormatTestLabel
	add	esp, 12					; 0000000cH
	push	eax
	mov	edx, DWORD PTR _env$[ebp]
	push	edx
	call	_TEST_Assert
	add	esp, 16					; 00000010H

; 189  :         TEST_Assert(env, FormatTestLabel(L"GreatestCommonDivisor_X_X (%d.%d)", no, 5), _EQUALS_MEMORY(actual_z_buf, actual_z_buf_size, desired_w_buf, desired_w_buf_size) == 0, L"データの内容が一致しない");

	mov	eax, DWORD PTR _desired_w_buf_size$[ebp]
	push	eax
	mov	ecx, DWORD PTR _desired_w_buf$[ebp]
	push	ecx
	mov	edx, DWORD PTR _actual_z_buf_size$[ebp]
	push	edx
	lea	eax, DWORD PTR _actual_z_buf$[ebp]
	push	eax
	call	__EQUALS_MEMORY
	add	esp, 16					; 00000010H
	test	eax, eax
	jne	SHORT $LN15@TEST_Great
	mov	DWORD PTR tv177[ebp], 1
	jmp	SHORT $LN16@TEST_Great
$LN15@TEST_Great:
	mov	DWORD PTR tv177[ebp], 0
$LN16@TEST_Great:
	push	OFFSET ??_C@_1BK@CBDJCOBM@?$PP?G?$PP?$PM?$PP?$LP?$AAn?$PP?$IF?$PP?$LJ?$AAL?$AA?$AA?$PP?t?$AAW?$AAj?$AAD@
	mov	ecx, DWORD PTR tv177[ebp]
	push	ecx
	push	5
	mov	edx, DWORD PTR _no$[ebp]
	push	edx
	push	OFFSET ??_C@_1EE@ICGPEMFN@?$AAG?$AAr?$AAe?$AAa?$AAt?$AAe?$AAs?$AAt?$AAC?$AAo?$AAm?$AAm?$AAo?$AAn?$AAD@
	call	_FormatTestLabel
	add	esp, 12					; 0000000cH
	push	eax
	mov	eax, DWORD PTR _env$[ebp]
	push	eax
	call	_TEST_Assert
	add	esp, 16					; 00000010H
$LN2@TEST_Great:

; 190  :     }
; 191  :     if (w_result == PMC_STATUS_OK)

	cmp	DWORD PTR _w_result$[ebp], 0
	jne	SHORT $LN3@TEST_Great

; 192  :         ep->UINT_ENTRY_POINTS.Dispose(w);

	mov	esi, esp
	mov	eax, DWORD PTR _w$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ep$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@TEST_Great:

; 193  :     if (v_result == PMC_STATUS_OK)

	cmp	DWORD PTR _v_result$[ebp], 0
	jne	SHORT $LN4@TEST_Great

; 194  :         ep->Dispose(v);

	mov	esi, esp
	mov	eax, DWORD PTR _v$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ep$[ebp]
	mov	edx, DWORD PTR [ecx+296]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN4@TEST_Great:

; 195  :     if (u_result == PMC_STATUS_OK)

	cmp	DWORD PTR _u_result$[ebp], 0
	jne	SHORT $LN1@TEST_Great

; 196  :         ep->Dispose(u);

	mov	esi, esp
	mov	eax, DWORD PTR _u$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ep$[ebp]
	mov	edx, DWORD PTR [ecx+296]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@TEST_Great:

; 197  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN23@TEST_Great
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 560				; 00000230H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN23@TEST_Great:
	DD	5
	DD	$LN22@TEST_Great
$LN22@TEST_Great:
	DD	-12					; fffffff4H
	DD	4
	DD	$LN17@TEST_Great
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN18@TEST_Great
	DD	-36					; ffffffdcH
	DD	4
	DD	$LN19@TEST_Great
	DD	-300					; fffffed4H
	DD	256					; 00000100H
	DD	$LN20@TEST_Great
	DD	-312					; fffffec8H
	DD	4
	DD	$LN21@TEST_Great
$LN21@TEST_Great:
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	95					; 0000005fH
	DB	122					; 0000007aH
	DB	95					; 0000005fH
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	95					; 0000005fH
	DB	115					; 00000073H
	DB	105					; 00000069H
	DB	122					; 0000007aH
	DB	101					; 00000065H
	DB	0
$LN20@TEST_Great:
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	95					; 0000005fH
	DB	122					; 0000007aH
	DB	95					; 0000005fH
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
$LN19@TEST_Great:
	DB	119					; 00000077H
	DB	0
$LN18@TEST_Great:
	DB	118					; 00000076H
	DB	0
$LN17@TEST_Great:
	DB	117					; 00000075H
	DB	0
_TEST_GreatestCommonDivisor_X_X ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.sint\palmtree.math.core.sint\test_op_greatestcommondivisor.c
;	COMDAT _TEST_GreatestCommonDivisor_X_UX
_TEXT	SEGMENT
tv177 = -560						; size = 4
tv162 = -560						; size = 4
tv142 = -560						; size = 4
tv92 = -560						; size = 4
tv74 = -560						; size = 4
_w_result$ = -360					; size = 4
_v_result$ = -348					; size = 4
_u_result$ = -336					; size = 4
_result$ = -324						; size = 4
_actual_z_buf_size$ = -312				; size = 4
_actual_z_buf$ = -300					; size = 256
_w$ = -36						; size = 4
_v$ = -24						; size = 4
_u$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_env$ = 8						; size = 4
_ep$ = 12						; size = 4
_no$ = 16						; size = 4
_u_buf$ = 20						; size = 4
_u_buf_size$ = 24					; size = 4
_v_buf$ = 28						; size = 4
_v_buf_size$ = 32					; size = 4
_desired_status$ = 36					; size = 4
_desired_w_buf$ = 40					; size = 4
_desired_w_buf_size$ = 44				; size = 4
_TEST_GreatestCommonDivisor_X_UX PROC			; COMDAT

; 147  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 560				; 00000230H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-560]
	mov	ecx, 140				; 0000008cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	ecx, OFFSET __8C95CAB4_test_op_greatestcommondivisor@c
	call	@__CheckForDebuggerJustMyCode@4

; 148  :     PMC_HANDLE_SINT u;
; 149  :     PMC_HANDLE_UINT v;
; 150  :     PMC_HANDLE_UINT w;
; 151  :     unsigned char actual_z_buf[256];
; 152  :     size_t actual_z_buf_size;
; 153  :     PMC_STATUS_CODE result;
; 154  :     PMC_STATUS_CODE u_result;
; 155  :     PMC_STATUS_CODE v_result;
; 156  :     PMC_STATUS_CODE w_result;
; 157  :     TEST_Assert(env, FormatTestLabel(L"GreatestCommonDivisor_X_UX (%d.%d)", no, 1), (u_result = ep->FromByteArray(u_buf, u_buf_size, &u)) == PMC_STATUS_OK, FormatTestMesssage(L"FromByteArrayの復帰コードが期待通りではない(%d)", u_result));

	mov	esi, esp
	lea	eax, DWORD PTR _u$[ebp]
	push	eax
	mov	ecx, DWORD PTR _u_buf_size$[ebp]
	push	ecx
	mov	edx, DWORD PTR _u_buf$[ebp]
	push	edx
	mov	eax, DWORD PTR _ep$[ebp]
	mov	ecx, DWORD PTR [eax+304]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _u_result$[ebp], eax
	cmp	DWORD PTR _u_result$[ebp], 0
	jne	SHORT $LN7@TEST_Great
	mov	DWORD PTR tv74[ebp], 1
	jmp	SHORT $LN8@TEST_Great
$LN7@TEST_Great:
	mov	DWORD PTR tv74[ebp], 0
$LN8@TEST_Great:
	mov	edx, DWORD PTR _u_result$[ebp]
	push	edx
	push	OFFSET ??_C@_1EC@NPMCAPKO@?$AAF?$AAr?$AAo?$AAm?$AAB?$AAy?$AAt?$AAe?$AAA?$AAr?$AAr?$AAa?$AAy?$AAn?$PP?$KJ@
	call	_FormatTestMesssage
	add	esp, 8
	push	eax
	mov	eax, DWORD PTR tv74[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _no$[ebp]
	push	ecx
	push	OFFSET ??_C@_1EG@LLHOJFEG@?$AAG?$AAr?$AAe?$AAa?$AAt?$AAe?$AAs?$AAt?$AAC?$AAo?$AAm?$AAm?$AAo?$AAn?$AAD@
	call	_FormatTestLabel
	add	esp, 12					; 0000000cH
	push	eax
	mov	edx, DWORD PTR _env$[ebp]
	push	edx
	call	_TEST_Assert
	add	esp, 16					; 00000010H

; 158  :     TEST_Assert(env, FormatTestLabel(L"GreatestCommonDivisor_X_UX (%d.%d)", no, 2), (v_result = ep->UINT_ENTRY_POINTS.FromByteArray(v_buf, v_buf_size, &v)) == PMC_STATUS_OK, FormatTestMesssage(L"FromByteArrayの復帰コードが期待通りではない(%d)", v_result));

	mov	esi, esp
	lea	eax, DWORD PTR _v$[ebp]
	push	eax
	mov	ecx, DWORD PTR _v_buf_size$[ebp]
	push	ecx
	mov	edx, DWORD PTR _v_buf$[ebp]
	push	edx
	mov	eax, DWORD PTR _ep$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _v_result$[ebp], eax
	cmp	DWORD PTR _v_result$[ebp], 0
	jne	SHORT $LN9@TEST_Great
	mov	DWORD PTR tv92[ebp], 1
	jmp	SHORT $LN10@TEST_Great
$LN9@TEST_Great:
	mov	DWORD PTR tv92[ebp], 0
$LN10@TEST_Great:
	mov	edx, DWORD PTR _v_result$[ebp]
	push	edx
	push	OFFSET ??_C@_1EC@NPMCAPKO@?$AAF?$AAr?$AAo?$AAm?$AAB?$AAy?$AAt?$AAe?$AAA?$AAr?$AAr?$AAa?$AAy?$AAn?$PP?$KJ@
	call	_FormatTestMesssage
	add	esp, 8
	push	eax
	mov	eax, DWORD PTR tv92[ebp]
	push	eax
	push	2
	mov	ecx, DWORD PTR _no$[ebp]
	push	ecx
	push	OFFSET ??_C@_1EG@LLHOJFEG@?$AAG?$AAr?$AAe?$AAa?$AAt?$AAe?$AAs?$AAt?$AAC?$AAo?$AAm?$AAm?$AAo?$AAn?$AAD@
	call	_FormatTestLabel
	add	esp, 12					; 0000000cH
	push	eax
	mov	edx, DWORD PTR _env$[ebp]
	push	edx
	call	_TEST_Assert
	add	esp, 16					; 00000010H

; 159  :     TEST_Assert(env, FormatTestLabel(L"GreatestCommonDivisor_X_UX (%d.%d)", no, 3), (w_result = ep->GreatestCommonDivisor_X_UX(u, v, &w)) == desired_status, FormatTestMesssage(L"GreatestCommonDivisor_X_UXの復帰コードが期待通りではない(%d)", w_result));

	mov	esi, esp
	lea	eax, DWORD PTR _w$[ebp]
	push	eax
	mov	ecx, DWORD PTR _v$[ebp]
	push	ecx
	mov	edx, DWORD PTR _u$[ebp]
	push	edx
	mov	eax, DWORD PTR _ep$[ebp]
	mov	ecx, DWORD PTR [eax+520]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _w_result$[ebp], eax
	mov	edx, DWORD PTR _w_result$[ebp]
	cmp	edx, DWORD PTR _desired_status$[ebp]
	jne	SHORT $LN11@TEST_Great
	mov	DWORD PTR tv142[ebp], 1
	jmp	SHORT $LN12@TEST_Great
$LN11@TEST_Great:
	mov	DWORD PTR tv142[ebp], 0
$LN12@TEST_Great:
	mov	eax, DWORD PTR _w_result$[ebp]
	push	eax
	push	OFFSET ??_C@_1FM@KKPEGHPO@?$AAG?$AAr?$AAe?$AAa?$AAt?$AAe?$AAs?$AAt?$AAC?$AAo?$AAm?$AAm?$AAo?$AAn?$AAD@
	call	_FormatTestMesssage
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR tv142[ebp]
	push	ecx
	push	3
	mov	edx, DWORD PTR _no$[ebp]
	push	edx
	push	OFFSET ??_C@_1EG@LLHOJFEG@?$AAG?$AAr?$AAe?$AAa?$AAt?$AAe?$AAs?$AAt?$AAC?$AAo?$AAm?$AAm?$AAo?$AAn?$AAD@
	call	_FormatTestLabel
	add	esp, 12					; 0000000cH
	push	eax
	mov	eax, DWORD PTR _env$[ebp]
	push	eax
	call	_TEST_Assert
	add	esp, 16					; 00000010H

; 160  :     if (desired_status == PMC_STATUS_OK)

	cmp	DWORD PTR _desired_status$[ebp], 0
	jne	$LN2@TEST_Great

; 161  :     {
; 162  :         TEST_Assert(env, FormatTestLabel(L"GreatestCommonDivisor_X_UX (%d.%d)", no, 4), (result = ep->UINT_ENTRY_POINTS.ToByteArray(w, actual_z_buf, sizeof(actual_z_buf), &actual_z_buf_size)) == PMC_STATUS_OK, FormatTestMesssage(L"ToByteArrayの復帰コードが期待通りではない(%d)", result));

	mov	esi, esp
	lea	eax, DWORD PTR _actual_z_buf_size$[ebp]
	push	eax
	push	256					; 00000100H
	lea	ecx, DWORD PTR _actual_z_buf$[ebp]
	push	ecx
	mov	edx, DWORD PTR _w$[ebp]
	push	edx
	mov	eax, DWORD PTR _ep$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _result$[ebp], eax
	cmp	DWORD PTR _result$[ebp], 0
	jne	SHORT $LN13@TEST_Great
	mov	DWORD PTR tv162[ebp], 1
	jmp	SHORT $LN14@TEST_Great
$LN13@TEST_Great:
	mov	DWORD PTR tv162[ebp], 0
$LN14@TEST_Great:
	mov	edx, DWORD PTR _result$[ebp]
	push	edx
	push	OFFSET ??_C@_1DO@DOHJEMND@?$AAT?$AAo?$AAB?$AAy?$AAt?$AAe?$AAA?$AAr?$AAr?$AAa?$AAy?$AAn?$PP?$KJ?$AA0?$PP?$LD@
	call	_FormatTestMesssage
	add	esp, 8
	push	eax
	mov	eax, DWORD PTR tv162[ebp]
	push	eax
	push	4
	mov	ecx, DWORD PTR _no$[ebp]
	push	ecx
	push	OFFSET ??_C@_1EG@LLHOJFEG@?$AAG?$AAr?$AAe?$AAa?$AAt?$AAe?$AAs?$AAt?$AAC?$AAo?$AAm?$AAm?$AAo?$AAn?$AAD@
	call	_FormatTestLabel
	add	esp, 12					; 0000000cH
	push	eax
	mov	edx, DWORD PTR _env$[ebp]
	push	edx
	call	_TEST_Assert
	add	esp, 16					; 00000010H

; 163  :         TEST_Assert(env, FormatTestLabel(L"GreatestCommonDivisor_X_UX (%d.%d)", no, 5), _EQUALS_MEMORY(actual_z_buf, actual_z_buf_size, desired_w_buf, desired_w_buf_size) == 0, L"データの内容が一致しない");

	mov	eax, DWORD PTR _desired_w_buf_size$[ebp]
	push	eax
	mov	ecx, DWORD PTR _desired_w_buf$[ebp]
	push	ecx
	mov	edx, DWORD PTR _actual_z_buf_size$[ebp]
	push	edx
	lea	eax, DWORD PTR _actual_z_buf$[ebp]
	push	eax
	call	__EQUALS_MEMORY
	add	esp, 16					; 00000010H
	test	eax, eax
	jne	SHORT $LN15@TEST_Great
	mov	DWORD PTR tv177[ebp], 1
	jmp	SHORT $LN16@TEST_Great
$LN15@TEST_Great:
	mov	DWORD PTR tv177[ebp], 0
$LN16@TEST_Great:
	push	OFFSET ??_C@_1BK@CBDJCOBM@?$PP?G?$PP?$PM?$PP?$LP?$AAn?$PP?$IF?$PP?$LJ?$AAL?$AA?$AA?$PP?t?$AAW?$AAj?$AAD@
	mov	ecx, DWORD PTR tv177[ebp]
	push	ecx
	push	5
	mov	edx, DWORD PTR _no$[ebp]
	push	edx
	push	OFFSET ??_C@_1EG@LLHOJFEG@?$AAG?$AAr?$AAe?$AAa?$AAt?$AAe?$AAs?$AAt?$AAC?$AAo?$AAm?$AAm?$AAo?$AAn?$AAD@
	call	_FormatTestLabel
	add	esp, 12					; 0000000cH
	push	eax
	mov	eax, DWORD PTR _env$[ebp]
	push	eax
	call	_TEST_Assert
	add	esp, 16					; 00000010H
$LN2@TEST_Great:

; 164  :     }
; 165  :     if (w_result == PMC_STATUS_OK)

	cmp	DWORD PTR _w_result$[ebp], 0
	jne	SHORT $LN3@TEST_Great

; 166  :         ep->UINT_ENTRY_POINTS.Dispose(w);

	mov	esi, esp
	mov	eax, DWORD PTR _w$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ep$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@TEST_Great:

; 167  :     if (v_result == PMC_STATUS_OK)

	cmp	DWORD PTR _v_result$[ebp], 0
	jne	SHORT $LN4@TEST_Great

; 168  :         ep->UINT_ENTRY_POINTS.Dispose(v);

	mov	esi, esp
	mov	eax, DWORD PTR _v$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ep$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN4@TEST_Great:

; 169  :     if (u_result == PMC_STATUS_OK)

	cmp	DWORD PTR _u_result$[ebp], 0
	jne	SHORT $LN1@TEST_Great

; 170  :         ep->Dispose(u);

	mov	esi, esp
	mov	eax, DWORD PTR _u$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ep$[ebp]
	mov	edx, DWORD PTR [ecx+296]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@TEST_Great:

; 171  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN23@TEST_Great
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 560				; 00000230H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN23@TEST_Great:
	DD	5
	DD	$LN22@TEST_Great
$LN22@TEST_Great:
	DD	-12					; fffffff4H
	DD	4
	DD	$LN17@TEST_Great
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN18@TEST_Great
	DD	-36					; ffffffdcH
	DD	4
	DD	$LN19@TEST_Great
	DD	-300					; fffffed4H
	DD	256					; 00000100H
	DD	$LN20@TEST_Great
	DD	-312					; fffffec8H
	DD	4
	DD	$LN21@TEST_Great
$LN21@TEST_Great:
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	95					; 0000005fH
	DB	122					; 0000007aH
	DB	95					; 0000005fH
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	95					; 0000005fH
	DB	115					; 00000073H
	DB	105					; 00000069H
	DB	122					; 0000007aH
	DB	101					; 00000065H
	DB	0
$LN20@TEST_Great:
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	95					; 0000005fH
	DB	122					; 0000007aH
	DB	95					; 0000005fH
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
$LN19@TEST_Great:
	DB	119					; 00000077H
	DB	0
$LN18@TEST_Great:
	DB	118					; 00000076H
	DB	0
$LN17@TEST_Great:
	DB	117					; 00000075H
	DB	0
_TEST_GreatestCommonDivisor_X_UX ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.sint\palmtree.math.core.sint\test_op_greatestcommondivisor.c
;	COMDAT _TEST_GreatestCommonDivisor_X_L
_TEXT	SEGMENT
tv159 = -536						; size = 4
tv144 = -536						; size = 4
tv92 = -536						; size = 4
tv74 = -536						; size = 4
_w_result$ = -336					; size = 4
_u_result$ = -324					; size = 4
_result$ = -312						; size = 4
_actual_w_buf_size$ = -300				; size = 4
_actual_w_buf$ = -288					; size = 256
_w$ = -24						; size = 4
_u$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_env$ = 8						; size = 4
_ep$ = 12						; size = 4
_no$ = 16						; size = 4
_u_buf$ = 20						; size = 4
_u_buf_size$ = 24					; size = 4
_v$ = 28						; size = 8
_desired_status$ = 36					; size = 4
_desired_w_buf$ = 40					; size = 4
_desired_w_buf_size$ = 44				; size = 4
_TEST_GreatestCommonDivisor_X_L PROC			; COMDAT

; 125  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 536				; 00000218H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-536]
	mov	ecx, 134				; 00000086H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	ecx, OFFSET __8C95CAB4_test_op_greatestcommondivisor@c
	call	@__CheckForDebuggerJustMyCode@4

; 126  :     PMC_HANDLE_SINT u;
; 127  :     PMC_HANDLE_UINT w;
; 128  :     unsigned char actual_w_buf[256];
; 129  :     size_t actual_w_buf_size;
; 130  :     PMC_STATUS_CODE result;
; 131  :     PMC_STATUS_CODE u_result;
; 132  :     PMC_STATUS_CODE w_result;
; 133  :     TEST_Assert(env, FormatTestLabel(L"GreatestCommonDivisor_X_L (%d.%d)", no, 1), (u_result = ep->FromByteArray(u_buf, u_buf_size, &u)) == PMC_STATUS_OK, FormatTestMesssage(L"FromByteArrayの復帰コードが期待通りではない(%d)", u_result));

	mov	esi, esp
	lea	eax, DWORD PTR _u$[ebp]
	push	eax
	mov	ecx, DWORD PTR _u_buf_size$[ebp]
	push	ecx
	mov	edx, DWORD PTR _u_buf$[ebp]
	push	edx
	mov	eax, DWORD PTR _ep$[ebp]
	mov	ecx, DWORD PTR [eax+304]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _u_result$[ebp], eax
	cmp	DWORD PTR _u_result$[ebp], 0
	jne	SHORT $LN6@TEST_Great
	mov	DWORD PTR tv74[ebp], 1
	jmp	SHORT $LN7@TEST_Great
$LN6@TEST_Great:
	mov	DWORD PTR tv74[ebp], 0
$LN7@TEST_Great:
	mov	edx, DWORD PTR _u_result$[ebp]
	push	edx
	push	OFFSET ??_C@_1EC@NPMCAPKO@?$AAF?$AAr?$AAo?$AAm?$AAB?$AAy?$AAt?$AAe?$AAA?$AAr?$AAr?$AAa?$AAy?$AAn?$PP?$KJ@
	call	_FormatTestMesssage
	add	esp, 8
	push	eax
	mov	eax, DWORD PTR tv74[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _no$[ebp]
	push	ecx
	push	OFFSET ??_C@_1EE@CMEEAMCB@?$AAG?$AAr?$AAe?$AAa?$AAt?$AAe?$AAs?$AAt?$AAC?$AAo?$AAm?$AAm?$AAo?$AAn?$AAD@
	call	_FormatTestLabel
	add	esp, 12					; 0000000cH
	push	eax
	mov	edx, DWORD PTR _env$[ebp]
	push	edx
	call	_TEST_Assert
	add	esp, 16					; 00000010H

; 134  :     TEST_Assert(env, FormatTestLabel(L"GreatestCommonDivisor_X_L (%d.%d)", no, 2), (w_result = ep->GreatestCommonDivisor_X_L(u, v, &w)) == desired_status, FormatTestMesssage(L"GreatestCommonDivisor_X_Lの復帰コードが期待通りではない(%d)", w_result));

	mov	esi, esp
	lea	eax, DWORD PTR _w$[ebp]
	push	eax
	mov	ecx, DWORD PTR _v$[ebp+4]
	push	ecx
	mov	edx, DWORD PTR _v$[ebp]
	push	edx
	mov	eax, DWORD PTR _u$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ep$[ebp]
	mov	edx, DWORD PTR [ecx+516]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _w_result$[ebp], eax
	mov	eax, DWORD PTR _w_result$[ebp]
	cmp	eax, DWORD PTR _desired_status$[ebp]
	jne	SHORT $LN8@TEST_Great
	mov	DWORD PTR tv92[ebp], 1
	jmp	SHORT $LN9@TEST_Great
$LN8@TEST_Great:
	mov	DWORD PTR tv92[ebp], 0
$LN9@TEST_Great:
	mov	ecx, DWORD PTR _w_result$[ebp]
	push	ecx
	push	OFFSET ??_C@_1FK@CAMBNOBM@?$AAG?$AAr?$AAe?$AAa?$AAt?$AAe?$AAs?$AAt?$AAC?$AAo?$AAm?$AAm?$AAo?$AAn?$AAD@
	call	_FormatTestMesssage
	add	esp, 8
	push	eax
	mov	edx, DWORD PTR tv92[ebp]
	push	edx
	push	2
	mov	eax, DWORD PTR _no$[ebp]
	push	eax
	push	OFFSET ??_C@_1EE@CMEEAMCB@?$AAG?$AAr?$AAe?$AAa?$AAt?$AAe?$AAs?$AAt?$AAC?$AAo?$AAm?$AAm?$AAo?$AAn?$AAD@
	call	_FormatTestLabel
	add	esp, 12					; 0000000cH
	push	eax
	mov	ecx, DWORD PTR _env$[ebp]
	push	ecx
	call	_TEST_Assert
	add	esp, 16					; 00000010H

; 135  :     if (desired_status == PMC_STATUS_OK)

	cmp	DWORD PTR _desired_status$[ebp], 0
	jne	$LN2@TEST_Great

; 136  :     {
; 137  :         TEST_Assert(env, FormatTestLabel(L"GreatestCommonDivisor_X_L (%d.%d)", no, 3), (result = ep->UINT_ENTRY_POINTS.ToByteArray(w, actual_w_buf, sizeof(actual_w_buf), &actual_w_buf_size)) == PMC_STATUS_OK, FormatTestMesssage(L"ToByteArrayの復帰コードが期待通りではない(%d)", result));

	mov	esi, esp
	lea	eax, DWORD PTR _actual_w_buf_size$[ebp]
	push	eax
	push	256					; 00000100H
	lea	ecx, DWORD PTR _actual_w_buf$[ebp]
	push	ecx
	mov	edx, DWORD PTR _w$[ebp]
	push	edx
	mov	eax, DWORD PTR _ep$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _result$[ebp], eax
	cmp	DWORD PTR _result$[ebp], 0
	jne	SHORT $LN10@TEST_Great
	mov	DWORD PTR tv144[ebp], 1
	jmp	SHORT $LN11@TEST_Great
$LN10@TEST_Great:
	mov	DWORD PTR tv144[ebp], 0
$LN11@TEST_Great:
	mov	edx, DWORD PTR _result$[ebp]
	push	edx
	push	OFFSET ??_C@_1DO@DOHJEMND@?$AAT?$AAo?$AAB?$AAy?$AAt?$AAe?$AAA?$AAr?$AAr?$AAa?$AAy?$AAn?$PP?$KJ?$AA0?$PP?$LD@
	call	_FormatTestMesssage
	add	esp, 8
	push	eax
	mov	eax, DWORD PTR tv144[ebp]
	push	eax
	push	3
	mov	ecx, DWORD PTR _no$[ebp]
	push	ecx
	push	OFFSET ??_C@_1EE@CMEEAMCB@?$AAG?$AAr?$AAe?$AAa?$AAt?$AAe?$AAs?$AAt?$AAC?$AAo?$AAm?$AAm?$AAo?$AAn?$AAD@
	call	_FormatTestLabel
	add	esp, 12					; 0000000cH
	push	eax
	mov	edx, DWORD PTR _env$[ebp]
	push	edx
	call	_TEST_Assert
	add	esp, 16					; 00000010H

; 138  :         TEST_Assert(env, FormatTestLabel(L"GreatestCommonDivisor_X_L (%d.%d)", no, 4), _EQUALS_MEMORY(actual_w_buf, actual_w_buf_size, desired_w_buf, desired_w_buf_size) == 0, L"データの内容が一致しない");

	mov	eax, DWORD PTR _desired_w_buf_size$[ebp]
	push	eax
	mov	ecx, DWORD PTR _desired_w_buf$[ebp]
	push	ecx
	mov	edx, DWORD PTR _actual_w_buf_size$[ebp]
	push	edx
	lea	eax, DWORD PTR _actual_w_buf$[ebp]
	push	eax
	call	__EQUALS_MEMORY
	add	esp, 16					; 00000010H
	test	eax, eax
	jne	SHORT $LN12@TEST_Great
	mov	DWORD PTR tv159[ebp], 1
	jmp	SHORT $LN13@TEST_Great
$LN12@TEST_Great:
	mov	DWORD PTR tv159[ebp], 0
$LN13@TEST_Great:
	push	OFFSET ??_C@_1BK@CBDJCOBM@?$PP?G?$PP?$PM?$PP?$LP?$AAn?$PP?$IF?$PP?$LJ?$AAL?$AA?$AA?$PP?t?$AAW?$AAj?$AAD@
	mov	ecx, DWORD PTR tv159[ebp]
	push	ecx
	push	4
	mov	edx, DWORD PTR _no$[ebp]
	push	edx
	push	OFFSET ??_C@_1EE@CMEEAMCB@?$AAG?$AAr?$AAe?$AAa?$AAt?$AAe?$AAs?$AAt?$AAC?$AAo?$AAm?$AAm?$AAo?$AAn?$AAD@
	call	_FormatTestLabel
	add	esp, 12					; 0000000cH
	push	eax
	mov	eax, DWORD PTR _env$[ebp]
	push	eax
	call	_TEST_Assert
	add	esp, 16					; 00000010H
$LN2@TEST_Great:

; 139  :     }
; 140  :     if (w_result == PMC_STATUS_OK)

	cmp	DWORD PTR _w_result$[ebp], 0
	jne	SHORT $LN3@TEST_Great

; 141  :         ep->UINT_ENTRY_POINTS.Dispose(w);

	mov	esi, esp
	mov	eax, DWORD PTR _w$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ep$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@TEST_Great:

; 142  :     if (u_result == PMC_STATUS_OK)

	cmp	DWORD PTR _u_result$[ebp], 0
	jne	SHORT $LN1@TEST_Great

; 143  :         ep->Dispose(u);

	mov	esi, esp
	mov	eax, DWORD PTR _u$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ep$[ebp]
	mov	edx, DWORD PTR [ecx+296]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@TEST_Great:

; 144  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN19@TEST_Great
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 536				; 00000218H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN19@TEST_Great:
	DD	4
	DD	$LN18@TEST_Great
$LN18@TEST_Great:
	DD	-12					; fffffff4H
	DD	4
	DD	$LN14@TEST_Great
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN15@TEST_Great
	DD	-288					; fffffee0H
	DD	256					; 00000100H
	DD	$LN16@TEST_Great
	DD	-300					; fffffed4H
	DD	4
	DD	$LN17@TEST_Great
$LN17@TEST_Great:
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	95					; 0000005fH
	DB	119					; 00000077H
	DB	95					; 0000005fH
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	95					; 0000005fH
	DB	115					; 00000073H
	DB	105					; 00000069H
	DB	122					; 0000007aH
	DB	101					; 00000065H
	DB	0
$LN16@TEST_Great:
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	95					; 0000005fH
	DB	119					; 00000077H
	DB	95					; 0000005fH
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
$LN15@TEST_Great:
	DB	119					; 00000077H
	DB	0
$LN14@TEST_Great:
	DB	117					; 00000075H
	DB	0
_TEST_GreatestCommonDivisor_X_L ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.sint\palmtree.math.core.sint\test_op_greatestcommondivisor.c
;	COMDAT _TEST_GreatestCommonDivisor_X_I
_TEXT	SEGMENT
tv159 = -536						; size = 4
tv144 = -536						; size = 4
tv92 = -536						; size = 4
tv74 = -536						; size = 4
_w_result$ = -336					; size = 4
_u_result$ = -324					; size = 4
_result$ = -312						; size = 4
_actual_w_buf_size$ = -300				; size = 4
_actual_w_buf$ = -288					; size = 256
_w$ = -24						; size = 4
_u$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_env$ = 8						; size = 4
_ep$ = 12						; size = 4
_no$ = 16						; size = 4
_u_buf$ = 20						; size = 4
_u_buf_size$ = 24					; size = 4
_v$ = 28						; size = 4
_desired_status$ = 32					; size = 4
_desired_w_buf$ = 36					; size = 4
_desired_w_buf_size$ = 40				; size = 4
_TEST_GreatestCommonDivisor_X_I PROC			; COMDAT

; 103  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 536				; 00000218H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-536]
	mov	ecx, 134				; 00000086H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	ecx, OFFSET __8C95CAB4_test_op_greatestcommondivisor@c
	call	@__CheckForDebuggerJustMyCode@4

; 104  :     PMC_HANDLE_SINT u;
; 105  :     PMC_HANDLE_UINT w;
; 106  :     unsigned char actual_w_buf[256];
; 107  :     size_t actual_w_buf_size;
; 108  :     PMC_STATUS_CODE result;
; 109  :     PMC_STATUS_CODE u_result;
; 110  :     PMC_STATUS_CODE w_result;
; 111  :     TEST_Assert(env, FormatTestLabel(L"GreatestCommonDivisor_X_I (%d.%d)", no, 1), (u_result = ep->FromByteArray(u_buf, u_buf_size, &u)) == PMC_STATUS_OK, FormatTestMesssage(L"FromByteArrayの復帰コードが期待通りではない(%d)", u_result));

	mov	esi, esp
	lea	eax, DWORD PTR _u$[ebp]
	push	eax
	mov	ecx, DWORD PTR _u_buf_size$[ebp]
	push	ecx
	mov	edx, DWORD PTR _u_buf$[ebp]
	push	edx
	mov	eax, DWORD PTR _ep$[ebp]
	mov	ecx, DWORD PTR [eax+304]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _u_result$[ebp], eax
	cmp	DWORD PTR _u_result$[ebp], 0
	jne	SHORT $LN6@TEST_Great
	mov	DWORD PTR tv74[ebp], 1
	jmp	SHORT $LN7@TEST_Great
$LN6@TEST_Great:
	mov	DWORD PTR tv74[ebp], 0
$LN7@TEST_Great:
	mov	edx, DWORD PTR _u_result$[ebp]
	push	edx
	push	OFFSET ??_C@_1EC@NPMCAPKO@?$AAF?$AAr?$AAo?$AAm?$AAB?$AAy?$AAt?$AAe?$AAA?$AAr?$AAr?$AAa?$AAy?$AAn?$PP?$KJ@
	call	_FormatTestMesssage
	add	esp, 8
	push	eax
	mov	eax, DWORD PTR tv74[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _no$[ebp]
	push	ecx
	push	OFFSET ??_C@_1EE@HMONMDO@?$AAG?$AAr?$AAe?$AAa?$AAt?$AAe?$AAs?$AAt?$AAC?$AAo?$AAm?$AAm?$AAo?$AAn?$AAD@
	call	_FormatTestLabel
	add	esp, 12					; 0000000cH
	push	eax
	mov	edx, DWORD PTR _env$[ebp]
	push	edx
	call	_TEST_Assert
	add	esp, 16					; 00000010H

; 112  :     TEST_Assert(env, FormatTestLabel(L"GreatestCommonDivisor_X_I (%d.%d)", no, 2), (w_result = ep->GreatestCommonDivisor_X_I(u, v, &w)) == desired_status, FormatTestMesssage(L"GreatestCommonDivisor_X_Iの復帰コードが期待通りではない(%d)", w_result));

	mov	esi, esp
	lea	eax, DWORD PTR _w$[ebp]
	push	eax
	mov	ecx, DWORD PTR _v$[ebp]
	push	ecx
	mov	edx, DWORD PTR _u$[ebp]
	push	edx
	mov	eax, DWORD PTR _ep$[ebp]
	mov	ecx, DWORD PTR [eax+512]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _w_result$[ebp], eax
	mov	edx, DWORD PTR _w_result$[ebp]
	cmp	edx, DWORD PTR _desired_status$[ebp]
	jne	SHORT $LN8@TEST_Great
	mov	DWORD PTR tv92[ebp], 1
	jmp	SHORT $LN9@TEST_Great
$LN8@TEST_Great:
	mov	DWORD PTR tv92[ebp], 0
$LN9@TEST_Great:
	mov	eax, DWORD PTR _w_result$[ebp]
	push	eax
	push	OFFSET ??_C@_1FK@GIINEDIJ@?$AAG?$AAr?$AAe?$AAa?$AAt?$AAe?$AAs?$AAt?$AAC?$AAo?$AAm?$AAm?$AAo?$AAn?$AAD@
	call	_FormatTestMesssage
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR tv92[ebp]
	push	ecx
	push	2
	mov	edx, DWORD PTR _no$[ebp]
	push	edx
	push	OFFSET ??_C@_1EE@HMONMDO@?$AAG?$AAr?$AAe?$AAa?$AAt?$AAe?$AAs?$AAt?$AAC?$AAo?$AAm?$AAm?$AAo?$AAn?$AAD@
	call	_FormatTestLabel
	add	esp, 12					; 0000000cH
	push	eax
	mov	eax, DWORD PTR _env$[ebp]
	push	eax
	call	_TEST_Assert
	add	esp, 16					; 00000010H

; 113  :     if (desired_status == PMC_STATUS_OK)

	cmp	DWORD PTR _desired_status$[ebp], 0
	jne	$LN2@TEST_Great

; 114  :     {
; 115  :         TEST_Assert(env, FormatTestLabel(L"GreatestCommonDivisor_X_I (%d.%d)", no, 3), (result = ep->UINT_ENTRY_POINTS.ToByteArray(w, actual_w_buf, sizeof(actual_w_buf), &actual_w_buf_size)) == PMC_STATUS_OK, FormatTestMesssage(L"ToByteArrayの復帰コードが期待通りではない(%d)", result));

	mov	esi, esp
	lea	eax, DWORD PTR _actual_w_buf_size$[ebp]
	push	eax
	push	256					; 00000100H
	lea	ecx, DWORD PTR _actual_w_buf$[ebp]
	push	ecx
	mov	edx, DWORD PTR _w$[ebp]
	push	edx
	mov	eax, DWORD PTR _ep$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _result$[ebp], eax
	cmp	DWORD PTR _result$[ebp], 0
	jne	SHORT $LN10@TEST_Great
	mov	DWORD PTR tv144[ebp], 1
	jmp	SHORT $LN11@TEST_Great
$LN10@TEST_Great:
	mov	DWORD PTR tv144[ebp], 0
$LN11@TEST_Great:
	mov	edx, DWORD PTR _result$[ebp]
	push	edx
	push	OFFSET ??_C@_1DO@DOHJEMND@?$AAT?$AAo?$AAB?$AAy?$AAt?$AAe?$AAA?$AAr?$AAr?$AAa?$AAy?$AAn?$PP?$KJ?$AA0?$PP?$LD@
	call	_FormatTestMesssage
	add	esp, 8
	push	eax
	mov	eax, DWORD PTR tv144[ebp]
	push	eax
	push	3
	mov	ecx, DWORD PTR _no$[ebp]
	push	ecx
	push	OFFSET ??_C@_1EE@HMONMDO@?$AAG?$AAr?$AAe?$AAa?$AAt?$AAe?$AAs?$AAt?$AAC?$AAo?$AAm?$AAm?$AAo?$AAn?$AAD@
	call	_FormatTestLabel
	add	esp, 12					; 0000000cH
	push	eax
	mov	edx, DWORD PTR _env$[ebp]
	push	edx
	call	_TEST_Assert
	add	esp, 16					; 00000010H

; 116  :         TEST_Assert(env, FormatTestLabel(L"GreatestCommonDivisor_X_I (%d.%d)", no, 4), _EQUALS_MEMORY(actual_w_buf, actual_w_buf_size, desired_w_buf, desired_w_buf_size) == 0, L"データの内容が一致しない");

	mov	eax, DWORD PTR _desired_w_buf_size$[ebp]
	push	eax
	mov	ecx, DWORD PTR _desired_w_buf$[ebp]
	push	ecx
	mov	edx, DWORD PTR _actual_w_buf_size$[ebp]
	push	edx
	lea	eax, DWORD PTR _actual_w_buf$[ebp]
	push	eax
	call	__EQUALS_MEMORY
	add	esp, 16					; 00000010H
	test	eax, eax
	jne	SHORT $LN12@TEST_Great
	mov	DWORD PTR tv159[ebp], 1
	jmp	SHORT $LN13@TEST_Great
$LN12@TEST_Great:
	mov	DWORD PTR tv159[ebp], 0
$LN13@TEST_Great:
	push	OFFSET ??_C@_1BK@CBDJCOBM@?$PP?G?$PP?$PM?$PP?$LP?$AAn?$PP?$IF?$PP?$LJ?$AAL?$AA?$AA?$PP?t?$AAW?$AAj?$AAD@
	mov	ecx, DWORD PTR tv159[ebp]
	push	ecx
	push	4
	mov	edx, DWORD PTR _no$[ebp]
	push	edx
	push	OFFSET ??_C@_1EE@HMONMDO@?$AAG?$AAr?$AAe?$AAa?$AAt?$AAe?$AAs?$AAt?$AAC?$AAo?$AAm?$AAm?$AAo?$AAn?$AAD@
	call	_FormatTestLabel
	add	esp, 12					; 0000000cH
	push	eax
	mov	eax, DWORD PTR _env$[ebp]
	push	eax
	call	_TEST_Assert
	add	esp, 16					; 00000010H
$LN2@TEST_Great:

; 117  :     }
; 118  :     if (w_result == PMC_STATUS_OK)

	cmp	DWORD PTR _w_result$[ebp], 0
	jne	SHORT $LN3@TEST_Great

; 119  :         ep->UINT_ENTRY_POINTS.Dispose(w);

	mov	esi, esp
	mov	eax, DWORD PTR _w$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ep$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@TEST_Great:

; 120  :     if (u_result == PMC_STATUS_OK)

	cmp	DWORD PTR _u_result$[ebp], 0
	jne	SHORT $LN1@TEST_Great

; 121  :         ep->Dispose(u);

	mov	esi, esp
	mov	eax, DWORD PTR _u$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ep$[ebp]
	mov	edx, DWORD PTR [ecx+296]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@TEST_Great:

; 122  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN19@TEST_Great
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 536				; 00000218H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN19@TEST_Great:
	DD	4
	DD	$LN18@TEST_Great
$LN18@TEST_Great:
	DD	-12					; fffffff4H
	DD	4
	DD	$LN14@TEST_Great
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN15@TEST_Great
	DD	-288					; fffffee0H
	DD	256					; 00000100H
	DD	$LN16@TEST_Great
	DD	-300					; fffffed4H
	DD	4
	DD	$LN17@TEST_Great
$LN17@TEST_Great:
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	95					; 0000005fH
	DB	119					; 00000077H
	DB	95					; 0000005fH
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	95					; 0000005fH
	DB	115					; 00000073H
	DB	105					; 00000069H
	DB	122					; 0000007aH
	DB	101					; 00000065H
	DB	0
$LN16@TEST_Great:
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	95					; 0000005fH
	DB	119					; 00000077H
	DB	95					; 0000005fH
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
$LN15@TEST_Great:
	DB	119					; 00000077H
	DB	0
$LN14@TEST_Great:
	DB	117					; 00000075H
	DB	0
_TEST_GreatestCommonDivisor_X_I ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.sint\palmtree.math.core.sint\test_op_greatestcommondivisor.c
;	COMDAT _TEST_GreatestCommonDivisor_UX_X
_TEXT	SEGMENT
tv177 = -560						; size = 4
tv162 = -560						; size = 4
tv142 = -560						; size = 4
tv92 = -560						; size = 4
tv74 = -560						; size = 4
_w_result$ = -360					; size = 4
_v_result$ = -348					; size = 4
_u_result$ = -336					; size = 4
_result$ = -324						; size = 4
_actual_w_buf_size$ = -312				; size = 4
_actual_w_buf$ = -300					; size = 256
_w$ = -36						; size = 4
_v$ = -24						; size = 4
_u$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_env$ = 8						; size = 4
_ep$ = 12						; size = 4
_no$ = 16						; size = 4
_u_buf$ = 20						; size = 4
_u_buf_size$ = 24					; size = 4
_v_buf$ = 28						; size = 4
_v_buf_size$ = 32					; size = 4
_desired_status$ = 36					; size = 4
_desired_w_buf$ = 40					; size = 4
_desired_w_buf_size$ = 44				; size = 4
_TEST_GreatestCommonDivisor_UX_X PROC			; COMDAT

; 76   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 560				; 00000230H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-560]
	mov	ecx, 140				; 0000008cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	ecx, OFFSET __8C95CAB4_test_op_greatestcommondivisor@c
	call	@__CheckForDebuggerJustMyCode@4

; 77   :     PMC_HANDLE_UINT u;
; 78   :     PMC_HANDLE_SINT v;
; 79   :     PMC_HANDLE_UINT w;
; 80   :     unsigned char actual_w_buf[256];
; 81   :     size_t actual_w_buf_size;
; 82   :     PMC_STATUS_CODE result;
; 83   :     PMC_STATUS_CODE u_result;
; 84   :     PMC_STATUS_CODE v_result;
; 85   :     PMC_STATUS_CODE w_result;
; 86   :     TEST_Assert(env, FormatTestLabel(L"GreatestCommonDivisor_UX_X (%d.%d)", no, 1), (u_result = ep->UINT_ENTRY_POINTS.FromByteArray(u_buf, u_buf_size, &u)) == PMC_STATUS_OK, FormatTestMesssage(L"FromByteArrayの復帰コードが期待通りではない(%d)", u_result));

	mov	esi, esp
	lea	eax, DWORD PTR _u$[ebp]
	push	eax
	mov	ecx, DWORD PTR _u_buf_size$[ebp]
	push	ecx
	mov	edx, DWORD PTR _u_buf$[ebp]
	push	edx
	mov	eax, DWORD PTR _ep$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _u_result$[ebp], eax
	cmp	DWORD PTR _u_result$[ebp], 0
	jne	SHORT $LN7@TEST_Great
	mov	DWORD PTR tv74[ebp], 1
	jmp	SHORT $LN8@TEST_Great
$LN7@TEST_Great:
	mov	DWORD PTR tv74[ebp], 0
$LN8@TEST_Great:
	mov	edx, DWORD PTR _u_result$[ebp]
	push	edx
	push	OFFSET ??_C@_1EC@NPMCAPKO@?$AAF?$AAr?$AAo?$AAm?$AAB?$AAy?$AAt?$AAe?$AAA?$AAr?$AAr?$AAa?$AAy?$AAn?$PP?$KJ@
	call	_FormatTestMesssage
	add	esp, 8
	push	eax
	mov	eax, DWORD PTR tv74[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _no$[ebp]
	push	ecx
	push	OFFSET ??_C@_1EG@IFNFFAEE@?$AAG?$AAr?$AAe?$AAa?$AAt?$AAe?$AAs?$AAt?$AAC?$AAo?$AAm?$AAm?$AAo?$AAn?$AAD@
	call	_FormatTestLabel
	add	esp, 12					; 0000000cH
	push	eax
	mov	edx, DWORD PTR _env$[ebp]
	push	edx
	call	_TEST_Assert
	add	esp, 16					; 00000010H

; 87   :     TEST_Assert(env, FormatTestLabel(L"GreatestCommonDivisor_UX_X (%d.%d)", no, 2), (v_result = ep->FromByteArray(v_buf, v_buf_size, &v)) == PMC_STATUS_OK, FormatTestMesssage(L"FromByteArrayの復帰コードが期待通りではない(%d)", v_result));

	mov	esi, esp
	lea	eax, DWORD PTR _v$[ebp]
	push	eax
	mov	ecx, DWORD PTR _v_buf_size$[ebp]
	push	ecx
	mov	edx, DWORD PTR _v_buf$[ebp]
	push	edx
	mov	eax, DWORD PTR _ep$[ebp]
	mov	ecx, DWORD PTR [eax+304]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _v_result$[ebp], eax
	cmp	DWORD PTR _v_result$[ebp], 0
	jne	SHORT $LN9@TEST_Great
	mov	DWORD PTR tv92[ebp], 1
	jmp	SHORT $LN10@TEST_Great
$LN9@TEST_Great:
	mov	DWORD PTR tv92[ebp], 0
$LN10@TEST_Great:
	mov	edx, DWORD PTR _v_result$[ebp]
	push	edx
	push	OFFSET ??_C@_1EC@NPMCAPKO@?$AAF?$AAr?$AAo?$AAm?$AAB?$AAy?$AAt?$AAe?$AAA?$AAr?$AAr?$AAa?$AAy?$AAn?$PP?$KJ@
	call	_FormatTestMesssage
	add	esp, 8
	push	eax
	mov	eax, DWORD PTR tv92[ebp]
	push	eax
	push	2
	mov	ecx, DWORD PTR _no$[ebp]
	push	ecx
	push	OFFSET ??_C@_1EG@IFNFFAEE@?$AAG?$AAr?$AAe?$AAa?$AAt?$AAe?$AAs?$AAt?$AAC?$AAo?$AAm?$AAm?$AAo?$AAn?$AAD@
	call	_FormatTestLabel
	add	esp, 12					; 0000000cH
	push	eax
	mov	edx, DWORD PTR _env$[ebp]
	push	edx
	call	_TEST_Assert
	add	esp, 16					; 00000010H

; 88   :     TEST_Assert(env, FormatTestLabel(L"GreatestCommonDivisor_UX_X (%d.%d)", no, 3), (w_result = ep->GreatestCommonDivisor_UX_X(u, v, &w)) == desired_status, FormatTestMesssage(L"GreatestCommonDivisor_UX_Xの復帰コードが期待通りではない(%d)", w_result));

	mov	esi, esp
	lea	eax, DWORD PTR _w$[ebp]
	push	eax
	mov	ecx, DWORD PTR _v$[ebp]
	push	ecx
	mov	edx, DWORD PTR _u$[ebp]
	push	edx
	mov	eax, DWORD PTR _ep$[ebp]
	mov	ecx, DWORD PTR [eax+508]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _w_result$[ebp], eax
	mov	edx, DWORD PTR _w_result$[ebp]
	cmp	edx, DWORD PTR _desired_status$[ebp]
	jne	SHORT $LN11@TEST_Great
	mov	DWORD PTR tv142[ebp], 1
	jmp	SHORT $LN12@TEST_Great
$LN11@TEST_Great:
	mov	DWORD PTR tv142[ebp], 0
$LN12@TEST_Great:
	mov	eax, DWORD PTR _w_result$[ebp]
	push	eax
	push	OFFSET ??_C@_1FM@CNBBCJNO@?$AAG?$AAr?$AAe?$AAa?$AAt?$AAe?$AAs?$AAt?$AAC?$AAo?$AAm?$AAm?$AAo?$AAn?$AAD@
	call	_FormatTestMesssage
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR tv142[ebp]
	push	ecx
	push	3
	mov	edx, DWORD PTR _no$[ebp]
	push	edx
	push	OFFSET ??_C@_1EG@IFNFFAEE@?$AAG?$AAr?$AAe?$AAa?$AAt?$AAe?$AAs?$AAt?$AAC?$AAo?$AAm?$AAm?$AAo?$AAn?$AAD@
	call	_FormatTestLabel
	add	esp, 12					; 0000000cH
	push	eax
	mov	eax, DWORD PTR _env$[ebp]
	push	eax
	call	_TEST_Assert
	add	esp, 16					; 00000010H

; 89   :     if (desired_status == PMC_STATUS_OK)

	cmp	DWORD PTR _desired_status$[ebp], 0
	jne	$LN2@TEST_Great

; 90   :     {
; 91   :         TEST_Assert(env, FormatTestLabel(L"GreatestCommonDivisor_UX_X (%d.%d)", no, 4), (result = ep->UINT_ENTRY_POINTS.ToByteArray(w, actual_w_buf, sizeof(actual_w_buf), &actual_w_buf_size)) == PMC_STATUS_OK, FormatTestMesssage(L"ToByteArrayの復帰コードが期待通りではない(%d)", result));

	mov	esi, esp
	lea	eax, DWORD PTR _actual_w_buf_size$[ebp]
	push	eax
	push	256					; 00000100H
	lea	ecx, DWORD PTR _actual_w_buf$[ebp]
	push	ecx
	mov	edx, DWORD PTR _w$[ebp]
	push	edx
	mov	eax, DWORD PTR _ep$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _result$[ebp], eax
	cmp	DWORD PTR _result$[ebp], 0
	jne	SHORT $LN13@TEST_Great
	mov	DWORD PTR tv162[ebp], 1
	jmp	SHORT $LN14@TEST_Great
$LN13@TEST_Great:
	mov	DWORD PTR tv162[ebp], 0
$LN14@TEST_Great:
	mov	edx, DWORD PTR _result$[ebp]
	push	edx
	push	OFFSET ??_C@_1DO@DOHJEMND@?$AAT?$AAo?$AAB?$AAy?$AAt?$AAe?$AAA?$AAr?$AAr?$AAa?$AAy?$AAn?$PP?$KJ?$AA0?$PP?$LD@
	call	_FormatTestMesssage
	add	esp, 8
	push	eax
	mov	eax, DWORD PTR tv162[ebp]
	push	eax
	push	4
	mov	ecx, DWORD PTR _no$[ebp]
	push	ecx
	push	OFFSET ??_C@_1EG@IFNFFAEE@?$AAG?$AAr?$AAe?$AAa?$AAt?$AAe?$AAs?$AAt?$AAC?$AAo?$AAm?$AAm?$AAo?$AAn?$AAD@
	call	_FormatTestLabel
	add	esp, 12					; 0000000cH
	push	eax
	mov	edx, DWORD PTR _env$[ebp]
	push	edx
	call	_TEST_Assert
	add	esp, 16					; 00000010H

; 92   :         TEST_Assert(env, FormatTestLabel(L"GreatestCommonDivisor_UX_X (%d.%d)", no, 5), _EQUALS_MEMORY(actual_w_buf, actual_w_buf_size, desired_w_buf, desired_w_buf_size) == 0, L"データの内容が一致しない");

	mov	eax, DWORD PTR _desired_w_buf_size$[ebp]
	push	eax
	mov	ecx, DWORD PTR _desired_w_buf$[ebp]
	push	ecx
	mov	edx, DWORD PTR _actual_w_buf_size$[ebp]
	push	edx
	lea	eax, DWORD PTR _actual_w_buf$[ebp]
	push	eax
	call	__EQUALS_MEMORY
	add	esp, 16					; 00000010H
	test	eax, eax
	jne	SHORT $LN15@TEST_Great
	mov	DWORD PTR tv177[ebp], 1
	jmp	SHORT $LN16@TEST_Great
$LN15@TEST_Great:
	mov	DWORD PTR tv177[ebp], 0
$LN16@TEST_Great:
	push	OFFSET ??_C@_1BK@CBDJCOBM@?$PP?G?$PP?$PM?$PP?$LP?$AAn?$PP?$IF?$PP?$LJ?$AAL?$AA?$AA?$PP?t?$AAW?$AAj?$AAD@
	mov	ecx, DWORD PTR tv177[ebp]
	push	ecx
	push	5
	mov	edx, DWORD PTR _no$[ebp]
	push	edx
	push	OFFSET ??_C@_1EG@IFNFFAEE@?$AAG?$AAr?$AAe?$AAa?$AAt?$AAe?$AAs?$AAt?$AAC?$AAo?$AAm?$AAm?$AAo?$AAn?$AAD@
	call	_FormatTestLabel
	add	esp, 12					; 0000000cH
	push	eax
	mov	eax, DWORD PTR _env$[ebp]
	push	eax
	call	_TEST_Assert
	add	esp, 16					; 00000010H
$LN2@TEST_Great:

; 93   :     }
; 94   :     if (w_result == PMC_STATUS_OK)

	cmp	DWORD PTR _w_result$[ebp], 0
	jne	SHORT $LN3@TEST_Great

; 95   :         ep->UINT_ENTRY_POINTS.Dispose(w);

	mov	esi, esp
	mov	eax, DWORD PTR _w$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ep$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@TEST_Great:

; 96   :     if (v_result == PMC_STATUS_OK)

	cmp	DWORD PTR _v_result$[ebp], 0
	jne	SHORT $LN4@TEST_Great

; 97   :         ep->Dispose(v);

	mov	esi, esp
	mov	eax, DWORD PTR _v$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ep$[ebp]
	mov	edx, DWORD PTR [ecx+296]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN4@TEST_Great:

; 98   :     if (u_result == PMC_STATUS_OK)

	cmp	DWORD PTR _u_result$[ebp], 0
	jne	SHORT $LN1@TEST_Great

; 99   :         ep->UINT_ENTRY_POINTS.Dispose(u);

	mov	esi, esp
	mov	eax, DWORD PTR _u$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ep$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@TEST_Great:

; 100  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN23@TEST_Great
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 560				; 00000230H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN23@TEST_Great:
	DD	5
	DD	$LN22@TEST_Great
$LN22@TEST_Great:
	DD	-12					; fffffff4H
	DD	4
	DD	$LN17@TEST_Great
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN18@TEST_Great
	DD	-36					; ffffffdcH
	DD	4
	DD	$LN19@TEST_Great
	DD	-300					; fffffed4H
	DD	256					; 00000100H
	DD	$LN20@TEST_Great
	DD	-312					; fffffec8H
	DD	4
	DD	$LN21@TEST_Great
$LN21@TEST_Great:
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	95					; 0000005fH
	DB	119					; 00000077H
	DB	95					; 0000005fH
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	95					; 0000005fH
	DB	115					; 00000073H
	DB	105					; 00000069H
	DB	122					; 0000007aH
	DB	101					; 00000065H
	DB	0
$LN20@TEST_Great:
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	95					; 0000005fH
	DB	119					; 00000077H
	DB	95					; 0000005fH
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
$LN19@TEST_Great:
	DB	119					; 00000077H
	DB	0
$LN18@TEST_Great:
	DB	118					; 00000076H
	DB	0
$LN17@TEST_Great:
	DB	117					; 00000075H
	DB	0
_TEST_GreatestCommonDivisor_UX_X ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.sint\palmtree.math.core.sint\test_op_greatestcommondivisor.c
;	COMDAT _TEST_GreatestCommonDivisor_L_X
_TEXT	SEGMENT
tv159 = -536						; size = 4
tv144 = -536						; size = 4
tv92 = -536						; size = 4
tv74 = -536						; size = 4
_w_result$ = -336					; size = 4
_v_result$ = -324					; size = 4
_result$ = -312						; size = 4
_actual_w_buf_size$ = -300				; size = 4
_actual_w_buf$ = -288					; size = 256
_w$ = -24						; size = 4
_v$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_env$ = 8						; size = 4
_ep$ = 12						; size = 4
_no$ = 16						; size = 4
_u$ = 20						; size = 8
_v_buf$ = 28						; size = 4
_v_buf_size$ = 32					; size = 4
_desired_status$ = 36					; size = 4
_desired_w_buf$ = 40					; size = 4
_desired_w_buf_size$ = 44				; size = 4
_TEST_GreatestCommonDivisor_L_X PROC			; COMDAT

; 54   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 536				; 00000218H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-536]
	mov	ecx, 134				; 00000086H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	ecx, OFFSET __8C95CAB4_test_op_greatestcommondivisor@c
	call	@__CheckForDebuggerJustMyCode@4

; 55   :     PMC_HANDLE_SINT v;
; 56   :     PMC_HANDLE_UINT w;
; 57   :     unsigned char actual_w_buf[256];
; 58   :     size_t actual_w_buf_size;
; 59   :     PMC_STATUS_CODE result;
; 60   :     PMC_STATUS_CODE v_result;
; 61   :     PMC_STATUS_CODE w_result;
; 62   :     TEST_Assert(env, FormatTestLabel(L"GreatestCommonDivisor_L_X (%d.%d)", no, 1), (v_result = ep->FromByteArray(v_buf, v_buf_size, &v)) == PMC_STATUS_OK, FormatTestMesssage(L"FromByteArrayの復帰コードが期待通りではない(%d)", v_result));

	mov	esi, esp
	lea	eax, DWORD PTR _v$[ebp]
	push	eax
	mov	ecx, DWORD PTR _v_buf_size$[ebp]
	push	ecx
	mov	edx, DWORD PTR _v_buf$[ebp]
	push	edx
	mov	eax, DWORD PTR _ep$[ebp]
	mov	ecx, DWORD PTR [eax+304]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _v_result$[ebp], eax
	cmp	DWORD PTR _v_result$[ebp], 0
	jne	SHORT $LN6@TEST_Great
	mov	DWORD PTR tv74[ebp], 1
	jmp	SHORT $LN7@TEST_Great
$LN6@TEST_Great:
	mov	DWORD PTR tv74[ebp], 0
$LN7@TEST_Great:
	mov	edx, DWORD PTR _v_result$[ebp]
	push	edx
	push	OFFSET ??_C@_1EC@NPMCAPKO@?$AAF?$AAr?$AAo?$AAm?$AAB?$AAy?$AAt?$AAe?$AAA?$AAr?$AAr?$AAa?$AAy?$AAn?$PP?$KJ@
	call	_FormatTestMesssage
	add	esp, 8
	push	eax
	mov	eax, DWORD PTR tv74[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _no$[ebp]
	push	ecx
	push	OFFSET ??_C@_1EE@JEACKNDP@?$AAG?$AAr?$AAe?$AAa?$AAt?$AAe?$AAs?$AAt?$AAC?$AAo?$AAm?$AAm?$AAo?$AAn?$AAD@
	call	_FormatTestLabel
	add	esp, 12					; 0000000cH
	push	eax
	mov	edx, DWORD PTR _env$[ebp]
	push	edx
	call	_TEST_Assert
	add	esp, 16					; 00000010H

; 63   :     TEST_Assert(env, FormatTestLabel(L"GreatestCommonDivisor_L_X (%d.%d)", no, 2), (w_result = ep->GreatestCommonDivisor_L_X(u, v, &w)) == desired_status, FormatTestMesssage(L"GreatestCommonDivisor_L_Xの復帰コードが期待通りではない(%d)", w_result));

	mov	esi, esp
	lea	eax, DWORD PTR _w$[ebp]
	push	eax
	mov	ecx, DWORD PTR _v$[ebp]
	push	ecx
	mov	edx, DWORD PTR _u$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _u$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ep$[ebp]
	mov	edx, DWORD PTR [ecx+504]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _w_result$[ebp], eax
	mov	eax, DWORD PTR _w_result$[ebp]
	cmp	eax, DWORD PTR _desired_status$[ebp]
	jne	SHORT $LN8@TEST_Great
	mov	DWORD PTR tv92[ebp], 1
	jmp	SHORT $LN9@TEST_Great
$LN8@TEST_Great:
	mov	DWORD PTR tv92[ebp], 0
$LN9@TEST_Great:
	mov	ecx, DWORD PTR _w_result$[ebp]
	push	ecx
	push	OFFSET ??_C@_1FK@GPIIGGDA@?$AAG?$AAr?$AAe?$AAa?$AAt?$AAe?$AAs?$AAt?$AAC?$AAo?$AAm?$AAm?$AAo?$AAn?$AAD@
	call	_FormatTestMesssage
	add	esp, 8
	push	eax
	mov	edx, DWORD PTR tv92[ebp]
	push	edx
	push	2
	mov	eax, DWORD PTR _no$[ebp]
	push	eax
	push	OFFSET ??_C@_1EE@JEACKNDP@?$AAG?$AAr?$AAe?$AAa?$AAt?$AAe?$AAs?$AAt?$AAC?$AAo?$AAm?$AAm?$AAo?$AAn?$AAD@
	call	_FormatTestLabel
	add	esp, 12					; 0000000cH
	push	eax
	mov	ecx, DWORD PTR _env$[ebp]
	push	ecx
	call	_TEST_Assert
	add	esp, 16					; 00000010H

; 64   :     if (desired_status == PMC_STATUS_OK)

	cmp	DWORD PTR _desired_status$[ebp], 0
	jne	$LN2@TEST_Great

; 65   :     {
; 66   :         TEST_Assert(env, FormatTestLabel(L"GreatestCommonDivisor_L_X (%d.%d)", no, 3), (result = ep->UINT_ENTRY_POINTS.ToByteArray(w, actual_w_buf, sizeof(actual_w_buf), &actual_w_buf_size)) == PMC_STATUS_OK, FormatTestMesssage(L"ToByteArrayの復帰コードが期待通りではない(%d)", result));

	mov	esi, esp
	lea	eax, DWORD PTR _actual_w_buf_size$[ebp]
	push	eax
	push	256					; 00000100H
	lea	ecx, DWORD PTR _actual_w_buf$[ebp]
	push	ecx
	mov	edx, DWORD PTR _w$[ebp]
	push	edx
	mov	eax, DWORD PTR _ep$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _result$[ebp], eax
	cmp	DWORD PTR _result$[ebp], 0
	jne	SHORT $LN10@TEST_Great
	mov	DWORD PTR tv144[ebp], 1
	jmp	SHORT $LN11@TEST_Great
$LN10@TEST_Great:
	mov	DWORD PTR tv144[ebp], 0
$LN11@TEST_Great:
	mov	edx, DWORD PTR _result$[ebp]
	push	edx
	push	OFFSET ??_C@_1DO@DOHJEMND@?$AAT?$AAo?$AAB?$AAy?$AAt?$AAe?$AAA?$AAr?$AAr?$AAa?$AAy?$AAn?$PP?$KJ?$AA0?$PP?$LD@
	call	_FormatTestMesssage
	add	esp, 8
	push	eax
	mov	eax, DWORD PTR tv144[ebp]
	push	eax
	push	3
	mov	ecx, DWORD PTR _no$[ebp]
	push	ecx
	push	OFFSET ??_C@_1EE@JEACKNDP@?$AAG?$AAr?$AAe?$AAa?$AAt?$AAe?$AAs?$AAt?$AAC?$AAo?$AAm?$AAm?$AAo?$AAn?$AAD@
	call	_FormatTestLabel
	add	esp, 12					; 0000000cH
	push	eax
	mov	edx, DWORD PTR _env$[ebp]
	push	edx
	call	_TEST_Assert
	add	esp, 16					; 00000010H

; 67   :         TEST_Assert(env, FormatTestLabel(L"GreatestCommonDivisor_L_X (%d.%d)", no, 4), _EQUALS_MEMORY(actual_w_buf, actual_w_buf_size, desired_w_buf, desired_w_buf_size) == 0, L"データの内容が一致しない");

	mov	eax, DWORD PTR _desired_w_buf_size$[ebp]
	push	eax
	mov	ecx, DWORD PTR _desired_w_buf$[ebp]
	push	ecx
	mov	edx, DWORD PTR _actual_w_buf_size$[ebp]
	push	edx
	lea	eax, DWORD PTR _actual_w_buf$[ebp]
	push	eax
	call	__EQUALS_MEMORY
	add	esp, 16					; 00000010H
	test	eax, eax
	jne	SHORT $LN12@TEST_Great
	mov	DWORD PTR tv159[ebp], 1
	jmp	SHORT $LN13@TEST_Great
$LN12@TEST_Great:
	mov	DWORD PTR tv159[ebp], 0
$LN13@TEST_Great:
	push	OFFSET ??_C@_1BK@CBDJCOBM@?$PP?G?$PP?$PM?$PP?$LP?$AAn?$PP?$IF?$PP?$LJ?$AAL?$AA?$AA?$PP?t?$AAW?$AAj?$AAD@
	mov	ecx, DWORD PTR tv159[ebp]
	push	ecx
	push	4
	mov	edx, DWORD PTR _no$[ebp]
	push	edx
	push	OFFSET ??_C@_1EE@JEACKNDP@?$AAG?$AAr?$AAe?$AAa?$AAt?$AAe?$AAs?$AAt?$AAC?$AAo?$AAm?$AAm?$AAo?$AAn?$AAD@
	call	_FormatTestLabel
	add	esp, 12					; 0000000cH
	push	eax
	mov	eax, DWORD PTR _env$[ebp]
	push	eax
	call	_TEST_Assert
	add	esp, 16					; 00000010H
$LN2@TEST_Great:

; 68   :     }
; 69   :     if (w_result == PMC_STATUS_OK)

	cmp	DWORD PTR _w_result$[ebp], 0
	jne	SHORT $LN3@TEST_Great

; 70   :         ep->UINT_ENTRY_POINTS.Dispose(w);

	mov	esi, esp
	mov	eax, DWORD PTR _w$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ep$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@TEST_Great:

; 71   :     if (v_result == PMC_STATUS_OK)

	cmp	DWORD PTR _v_result$[ebp], 0
	jne	SHORT $LN1@TEST_Great

; 72   :         ep->Dispose(v);

	mov	esi, esp
	mov	eax, DWORD PTR _v$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ep$[ebp]
	mov	edx, DWORD PTR [ecx+296]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@TEST_Great:

; 73   : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN19@TEST_Great
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 536				; 00000218H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN19@TEST_Great:
	DD	4
	DD	$LN18@TEST_Great
$LN18@TEST_Great:
	DD	-12					; fffffff4H
	DD	4
	DD	$LN14@TEST_Great
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN15@TEST_Great
	DD	-288					; fffffee0H
	DD	256					; 00000100H
	DD	$LN16@TEST_Great
	DD	-300					; fffffed4H
	DD	4
	DD	$LN17@TEST_Great
$LN17@TEST_Great:
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	95					; 0000005fH
	DB	119					; 00000077H
	DB	95					; 0000005fH
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	95					; 0000005fH
	DB	115					; 00000073H
	DB	105					; 00000069H
	DB	122					; 0000007aH
	DB	101					; 00000065H
	DB	0
$LN16@TEST_Great:
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	95					; 0000005fH
	DB	119					; 00000077H
	DB	95					; 0000005fH
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
$LN15@TEST_Great:
	DB	119					; 00000077H
	DB	0
$LN14@TEST_Great:
	DB	118					; 00000076H
	DB	0
_TEST_GreatestCommonDivisor_L_X ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.sint\palmtree.math.core.sint\test_op_greatestcommondivisor.c
;	COMDAT _TEST_GreatestCommonDivisor_I_X
_TEXT	SEGMENT
tv159 = -536						; size = 4
tv144 = -536						; size = 4
tv92 = -536						; size = 4
tv74 = -536						; size = 4
_w_result$ = -336					; size = 4
_v_result$ = -324					; size = 4
_result$ = -312						; size = 4
_actual_w_buf_size$ = -300				; size = 4
_actual_w_buf$ = -288					; size = 256
_w$ = -24						; size = 4
_v$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_env$ = 8						; size = 4
_ep$ = 12						; size = 4
_no$ = 16						; size = 4
_u$ = 20						; size = 4
_v_buf$ = 24						; size = 4
_v_buf_size$ = 28					; size = 4
_desired_status$ = 32					; size = 4
_desired_w_buf$ = 36					; size = 4
_desired_w_buf_size$ = 40				; size = 4
_TEST_GreatestCommonDivisor_I_X PROC			; COMDAT

; 32   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 536				; 00000218H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-536]
	mov	ecx, 134				; 00000086H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	ecx, OFFSET __8C95CAB4_test_op_greatestcommondivisor@c
	call	@__CheckForDebuggerJustMyCode@4

; 33   :     PMC_HANDLE_SINT v;
; 34   :     PMC_HANDLE_UINT w;
; 35   :     unsigned char actual_w_buf[256];
; 36   :     size_t actual_w_buf_size;
; 37   :     PMC_STATUS_CODE result;
; 38   :     PMC_STATUS_CODE v_result;
; 39   :     PMC_STATUS_CODE w_result;
; 40   :     TEST_Assert(env, FormatTestLabel(L"GreatestCommonDivisor_I_X (%d.%d)", no, 1), (v_result = ep->FromByteArray(v_buf, v_buf_size, &v)) == PMC_STATUS_OK, FormatTestMesssage(L"FromByteArrayの復帰コードが期待通りではない(%d)", v_result));

	mov	esi, esp
	lea	eax, DWORD PTR _v$[ebp]
	push	eax
	mov	ecx, DWORD PTR _v_buf_size$[ebp]
	push	ecx
	mov	edx, DWORD PTR _v_buf$[ebp]
	push	edx
	mov	eax, DWORD PTR _ep$[ebp]
	mov	ecx, DWORD PTR [eax+304]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _v_result$[ebp], eax
	cmp	DWORD PTR _v_result$[ebp], 0
	jne	SHORT $LN6@TEST_Great
	mov	DWORD PTR tv74[ebp], 1
	jmp	SHORT $LN7@TEST_Great
$LN6@TEST_Great:
	mov	DWORD PTR tv74[ebp], 0
$LN7@TEST_Great:
	mov	edx, DWORD PTR _v_result$[ebp]
	push	edx
	push	OFFSET ??_C@_1EC@NPMCAPKO@?$AAF?$AAr?$AAo?$AAm?$AAB?$AAy?$AAt?$AAe?$AAA?$AAr?$AAr?$AAa?$AAy?$AAn?$PP?$KJ@
	call	_FormatTestMesssage
	add	esp, 8
	push	eax
	mov	eax, DWORD PTR tv74[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _no$[ebp]
	push	ecx
	push	OFFSET ??_C@_1EE@HMCBFGEH@?$AAG?$AAr?$AAe?$AAa?$AAt?$AAe?$AAs?$AAt?$AAC?$AAo?$AAm?$AAm?$AAo?$AAn?$AAD@
	call	_FormatTestLabel
	add	esp, 12					; 0000000cH
	push	eax
	mov	edx, DWORD PTR _env$[ebp]
	push	edx
	call	_TEST_Assert
	add	esp, 16					; 00000010H

; 41   :     TEST_Assert(env, FormatTestLabel(L"GreatestCommonDivisor_I_X (%d.%d)", no, 2), (w_result = ep->GreatestCommonDivisor_I_X(u, v, &w)) == desired_status, FormatTestMesssage(L"GreatestCommonDivisor_I_Xの復帰コードが期待通りではない(%d)", w_result));

	mov	esi, esp
	lea	eax, DWORD PTR _w$[ebp]
	push	eax
	mov	ecx, DWORD PTR _v$[ebp]
	push	ecx
	mov	edx, DWORD PTR _u$[ebp]
	push	edx
	mov	eax, DWORD PTR _ep$[ebp]
	mov	ecx, DWORD PTR [eax+500]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _w_result$[ebp], eax
	mov	edx, DWORD PTR _w_result$[ebp]
	cmp	edx, DWORD PTR _desired_status$[ebp]
	jne	SHORT $LN8@TEST_Great
	mov	DWORD PTR tv92[ebp], 1
	jmp	SHORT $LN9@TEST_Great
$LN8@TEST_Great:
	mov	DWORD PTR tv92[ebp], 0
$LN9@TEST_Great:
	mov	eax, DWORD PTR _w_result$[ebp]
	push	eax
	push	OFFSET ??_C@_1FK@DEBGJFKO@?$AAG?$AAr?$AAe?$AAa?$AAt?$AAe?$AAs?$AAt?$AAC?$AAo?$AAm?$AAm?$AAo?$AAn?$AAD@
	call	_FormatTestMesssage
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR tv92[ebp]
	push	ecx
	push	2
	mov	edx, DWORD PTR _no$[ebp]
	push	edx
	push	OFFSET ??_C@_1EE@HMCBFGEH@?$AAG?$AAr?$AAe?$AAa?$AAt?$AAe?$AAs?$AAt?$AAC?$AAo?$AAm?$AAm?$AAo?$AAn?$AAD@
	call	_FormatTestLabel
	add	esp, 12					; 0000000cH
	push	eax
	mov	eax, DWORD PTR _env$[ebp]
	push	eax
	call	_TEST_Assert
	add	esp, 16					; 00000010H

; 42   :     if (desired_status == PMC_STATUS_OK)

	cmp	DWORD PTR _desired_status$[ebp], 0
	jne	$LN2@TEST_Great

; 43   :     {
; 44   :         TEST_Assert(env, FormatTestLabel(L"GreatestCommonDivisor_I_X (%d.%d)", no, 3), (result = ep->UINT_ENTRY_POINTS.ToByteArray(w, actual_w_buf, sizeof(actual_w_buf), &actual_w_buf_size)) == PMC_STATUS_OK, FormatTestMesssage(L"ToByteArrayの復帰コードが期待通りではない(%d)", result));

	mov	esi, esp
	lea	eax, DWORD PTR _actual_w_buf_size$[ebp]
	push	eax
	push	256					; 00000100H
	lea	ecx, DWORD PTR _actual_w_buf$[ebp]
	push	ecx
	mov	edx, DWORD PTR _w$[ebp]
	push	edx
	mov	eax, DWORD PTR _ep$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _result$[ebp], eax
	cmp	DWORD PTR _result$[ebp], 0
	jne	SHORT $LN10@TEST_Great
	mov	DWORD PTR tv144[ebp], 1
	jmp	SHORT $LN11@TEST_Great
$LN10@TEST_Great:
	mov	DWORD PTR tv144[ebp], 0
$LN11@TEST_Great:
	mov	edx, DWORD PTR _result$[ebp]
	push	edx
	push	OFFSET ??_C@_1DO@DOHJEMND@?$AAT?$AAo?$AAB?$AAy?$AAt?$AAe?$AAA?$AAr?$AAr?$AAa?$AAy?$AAn?$PP?$KJ?$AA0?$PP?$LD@
	call	_FormatTestMesssage
	add	esp, 8
	push	eax
	mov	eax, DWORD PTR tv144[ebp]
	push	eax
	push	3
	mov	ecx, DWORD PTR _no$[ebp]
	push	ecx
	push	OFFSET ??_C@_1EE@HMCBFGEH@?$AAG?$AAr?$AAe?$AAa?$AAt?$AAe?$AAs?$AAt?$AAC?$AAo?$AAm?$AAm?$AAo?$AAn?$AAD@
	call	_FormatTestLabel
	add	esp, 12					; 0000000cH
	push	eax
	mov	edx, DWORD PTR _env$[ebp]
	push	edx
	call	_TEST_Assert
	add	esp, 16					; 00000010H

; 45   :         TEST_Assert(env, FormatTestLabel(L"GreatestCommonDivisor_I_X (%d.%d)", no, 4), _EQUALS_MEMORY(actual_w_buf, actual_w_buf_size, desired_w_buf, desired_w_buf_size) == 0, L"データの内容が一致しない");

	mov	eax, DWORD PTR _desired_w_buf_size$[ebp]
	push	eax
	mov	ecx, DWORD PTR _desired_w_buf$[ebp]
	push	ecx
	mov	edx, DWORD PTR _actual_w_buf_size$[ebp]
	push	edx
	lea	eax, DWORD PTR _actual_w_buf$[ebp]
	push	eax
	call	__EQUALS_MEMORY
	add	esp, 16					; 00000010H
	test	eax, eax
	jne	SHORT $LN12@TEST_Great
	mov	DWORD PTR tv159[ebp], 1
	jmp	SHORT $LN13@TEST_Great
$LN12@TEST_Great:
	mov	DWORD PTR tv159[ebp], 0
$LN13@TEST_Great:
	push	OFFSET ??_C@_1BK@CBDJCOBM@?$PP?G?$PP?$PM?$PP?$LP?$AAn?$PP?$IF?$PP?$LJ?$AAL?$AA?$AA?$PP?t?$AAW?$AAj?$AAD@
	mov	ecx, DWORD PTR tv159[ebp]
	push	ecx
	push	4
	mov	edx, DWORD PTR _no$[ebp]
	push	edx
	push	OFFSET ??_C@_1EE@HMCBFGEH@?$AAG?$AAr?$AAe?$AAa?$AAt?$AAe?$AAs?$AAt?$AAC?$AAo?$AAm?$AAm?$AAo?$AAn?$AAD@
	call	_FormatTestLabel
	add	esp, 12					; 0000000cH
	push	eax
	mov	eax, DWORD PTR _env$[ebp]
	push	eax
	call	_TEST_Assert
	add	esp, 16					; 00000010H
$LN2@TEST_Great:

; 46   :     }
; 47   :     if (w_result == PMC_STATUS_OK)

	cmp	DWORD PTR _w_result$[ebp], 0
	jne	SHORT $LN3@TEST_Great

; 48   :         ep->UINT_ENTRY_POINTS.Dispose(w);

	mov	esi, esp
	mov	eax, DWORD PTR _w$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ep$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@TEST_Great:

; 49   :     if (v_result == PMC_STATUS_OK)

	cmp	DWORD PTR _v_result$[ebp], 0
	jne	SHORT $LN1@TEST_Great

; 50   :         ep->Dispose(v);

	mov	esi, esp
	mov	eax, DWORD PTR _v$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ep$[ebp]
	mov	edx, DWORD PTR [ecx+296]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@TEST_Great:

; 51   : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN19@TEST_Great
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 536				; 00000218H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN19@TEST_Great:
	DD	4
	DD	$LN18@TEST_Great
$LN18@TEST_Great:
	DD	-12					; fffffff4H
	DD	4
	DD	$LN14@TEST_Great
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN15@TEST_Great
	DD	-288					; fffffee0H
	DD	256					; 00000100H
	DD	$LN16@TEST_Great
	DD	-300					; fffffed4H
	DD	4
	DD	$LN17@TEST_Great
$LN17@TEST_Great:
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	95					; 0000005fH
	DB	119					; 00000077H
	DB	95					; 0000005fH
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	95					; 0000005fH
	DB	115					; 00000073H
	DB	105					; 00000069H
	DB	122					; 0000007aH
	DB	101					; 00000065H
	DB	0
$LN16@TEST_Great:
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	95					; 0000005fH
	DB	119					; 00000077H
	DB	95					; 0000005fH
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
$LN15@TEST_Great:
	DB	119					; 00000077H
	DB	0
$LN14@TEST_Great:
	DB	118					; 00000076H
	DB	0
_TEST_GreatestCommonDivisor_I_X ENDP
_TEXT	ENDS
END
