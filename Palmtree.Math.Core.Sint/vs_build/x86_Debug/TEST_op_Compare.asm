; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27026.1 

	TITLE	Z:\Sources\Lunor\Repos\rougemeilland\Palmtree.Math.Core.Sint\Palmtree.Math.Core.Sint\TEST_op_Compare.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

_DATA	SEGMENT
COMM	_uint_number_zero:DWORD
COMM	_uint_number_one:DWORD
_DATA	ENDS
msvcjmc	SEGMENT
__7B7A869E_ctype@h DB 01H
__457DD326_basetsd@h DB 01H
__4384A2D9_corecrt_memcpy_s@h DB 01H
__4E51A221_corecrt_wstring@h DB 01H
__2140C079_string@h DB 01H
__1887E595_winnt@h DB 01H
__9FC7C64B_processthreadsapi@h DB 01H
__FA470AEC_memoryapi@h DB 01H
__F37DAFF1_winerror@h DB 01H
__7A450CCC_winbase@h DB 01H
__B4B40122_winioctl@h DB 01H
__86261D59_stralign@h DB 01H
__059414E1_pmc_sint_debug@h DB 01H
__88878CCC_test_op_compare@c DB 01H
msvcjmc	ENDS
PUBLIC	_TEST_Compare_I_X
PUBLIC	_TEST_Compare_L_X
PUBLIC	_TEST_Compare_UX_X
PUBLIC	_TEST_Compare_X_I
PUBLIC	_TEST_Compare_X_L
PUBLIC	_TEST_Compare_X_UX
PUBLIC	_TEST_Compare_X_X
PUBLIC	__JustMyCode_Default
PUBLIC	??_C@_1EC@NPMCAPKO@?$AAF?$AAr?$AAo?$AAm?$AAB?$AAy?$AAt?$AAe?$AAA?$AAr?$AAr?$AAa?$AAy?$AAn?$PP?$KJ@ ; `string'
PUBLIC	??_C@_1CI@HLFNBHGN@?$AAC?$AAo?$AAm?$AAp?$AAa?$AAr?$AAe?$AA_?$AAI?$AA_?$AAX?$AA?5?$AA?$CI?$AA?$CF?$AAd@ ; `string'
PUBLIC	??_C@_1DO@BGGLMLBK@?$AAC?$AAo?$AAm?$AAp?$AAa?$AAr?$AAe?$AA_?$AAI?$AA_?$AAX?$AAn?$PP?$KJ?$AA0?$PP?$LD@ ; `string'
PUBLIC	??_C@_1BK@CBDJCOBM@?$PP?G?$PP?$PM?$PP?$LP?$AAn?$PP?$IF?$PP?$LJ?$AAL?$AA?$AA?$PP?t?$AAW?$AAj?$AAD@ ; `string'
PUBLIC	??_C@_1CI@JDHOOMBF@?$AAC?$AAo?$AAm?$AAp?$AAa?$AAr?$AAe?$AA_?$AAL?$AA_?$AAX?$AA?5?$AA?$CI?$AA?$CF?$AAd@ ; `string'
PUBLIC	??_C@_1DO@ENPFDIIE@?$AAC?$AAo?$AAm?$AAp?$AAa?$AAr?$AAe?$AA_?$AAL?$AA_?$AAX?$AAn?$PP?$KJ?$AA0?$PP?$LD@ ; `string'
PUBLIC	??_C@_1CK@OLGFOKBG@?$AAC?$AAo?$AAm?$AAp?$AAa?$AAr?$AAe?$AA_?$AAU?$AAX?$AA_?$AAX?$AA?5?$AA?$CI?$AA?$CF@ ; `string'
PUBLIC	??_C@_1EA@CBGLBMOM@?$AAC?$AAo?$AAm?$AAp?$AAa?$AAr?$AAe?$AA_?$AAU?$AAX?$AA_?$AAX?$AAn?$PP?$KJ?$AA0@ ; `string'
PUBLIC	??_C@_1CI@LCJNBE@?$AAC?$AAo?$AAm?$AAp?$AAa?$AAr?$AAe?$AA_?$AAX?$AA_?$AAI?$AA?5?$AA?$CI?$AA?$CF?$AAd@ ; `string'
PUBLIC	??_C@_1DO@EKPABNDN@?$AAC?$AAo?$AAm?$AAp?$AAa?$AAr?$AAe?$AA_?$AAX?$AA_?$AAI?$AAn?$PP?$KJ?$AA0?$PP?$LD@ ; `string'
PUBLIC	??_C@_1CI@CLDIENAL@?$AAC?$AAo?$AAm?$AAp?$AAa?$AAr?$AAe?$AA_?$AAX?$AA_?$AAL?$AA?5?$AA?$CI?$AA?$CF?$AAd@ ; `string'
PUBLIC	??_C@_1DO@CLMIAKI@?$AAC?$AAo?$AAm?$AAp?$AAa?$AAr?$AAe?$AA_?$AAX?$AA_?$AAL?$AAn?$PP?$KJ?$AA0?$PP?$LD@ ; `string'
PUBLIC	??_C@_1CK@NFMOCPBE@?$AAC?$AAo?$AAm?$AAp?$AAa?$AAr?$AAe?$AA_?$AAX?$AA_?$AAU?$AAX?$AA?5?$AA?$CI?$AA?$CF@ ; `string'
PUBLIC	??_C@_1EA@KGIOFCMM@?$AAC?$AAo?$AAm?$AAp?$AAa?$AAr?$AAe?$AA_?$AAX?$AA_?$AAU?$AAX?$AAn?$PP?$KJ?$AA0@ ; `string'
PUBLIC	??_C@_1CI@IFBDANHH@?$AAC?$AAo?$AAm?$AAp?$AAa?$AAr?$AAe?$AA_?$AAX?$AA_?$AAX?$AA?5?$AA?$CI?$AA?$CF?$AAd@ ; `string'
PUBLIC	??_C@_1DO@PIPPPALN@?$AAC?$AAo?$AAm?$AAp?$AAa?$AAr?$AAe?$AA_?$AAX?$AA_?$AAX?$AAn?$PP?$KJ?$AA0?$PP?$LD@ ; `string'
EXTRN	_TEST_Assert:PROC
EXTRN	_FormatTestLabel:PROC
EXTRN	_FormatTestMesssage:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	@__CheckForDebuggerJustMyCode@4:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	___security_cookie:DWORD
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_C@_1DO@PIPPPALN@?$AAC?$AAo?$AAm?$AAp?$AAa?$AAr?$AAe?$AA_?$AAX?$AA_?$AAX?$AAn?$PP?$KJ?$AA0?$PP?$LD@
CONST	SEGMENT
??_C@_1DO@PIPPPALN@?$AAC?$AAo?$AAm?$AAp?$AAa?$AAr?$AAe?$AA_?$AAX?$AA_?$AAX?$AAn?$PP?$KJ?$AA0?$PP?$LD@ DB 'C'
	DB	00H, 'o', 00H, 'm', 00H, 'p', 00H, 'a', 00H, 'r', 00H, 'e', 00H
	DB	'_', 00H, 'X', 00H, '_', 00H, 'X', 00H, 'n0', 0a9H, '_0^', 0b3H
	DB	'0', 0fcH, '0', 0c9H, '0L0', 01fH, 'g', 085H, '_', 01aH, 090H, 08aH
	DB	'0g0o0j0D0(', 00H, '%', 00H, 'd', 00H, ')', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CI@IFBDANHH@?$AAC?$AAo?$AAm?$AAp?$AAa?$AAr?$AAe?$AA_?$AAX?$AA_?$AAX?$AA?5?$AA?$CI?$AA?$CF?$AAd@
CONST	SEGMENT
??_C@_1CI@IFBDANHH@?$AAC?$AAo?$AAm?$AAp?$AAa?$AAr?$AAe?$AA_?$AAX?$AA_?$AAX?$AA?5?$AA?$CI?$AA?$CF?$AAd@ DB 'C'
	DB	00H, 'o', 00H, 'm', 00H, 'p', 00H, 'a', 00H, 'r', 00H, 'e', 00H
	DB	'_', 00H, 'X', 00H, '_', 00H, 'X', 00H, ' ', 00H, '(', 00H, '%'
	DB	00H, 'd', 00H, '.', 00H, '%', 00H, 'd', 00H, ')', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1EA@KGIOFCMM@?$AAC?$AAo?$AAm?$AAp?$AAa?$AAr?$AAe?$AA_?$AAX?$AA_?$AAU?$AAX?$AAn?$PP?$KJ?$AA0@
CONST	SEGMENT
??_C@_1EA@KGIOFCMM@?$AAC?$AAo?$AAm?$AAp?$AAa?$AAr?$AAe?$AA_?$AAX?$AA_?$AAU?$AAX?$AAn?$PP?$KJ?$AA0@ DB 'C'
	DB	00H, 'o', 00H, 'm', 00H, 'p', 00H, 'a', 00H, 'r', 00H, 'e', 00H
	DB	'_', 00H, 'X', 00H, '_', 00H, 'U', 00H, 'X', 00H, 'n0', 0a9H, '_'
	DB	'0^', 0b3H, '0', 0fcH, '0', 0c9H, '0L0', 01fH, 'g', 085H, '_', 01aH
	DB	090H, 08aH, '0g0o0j0D0(', 00H, '%', 00H, 'd', 00H, ')', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1CK@NFMOCPBE@?$AAC?$AAo?$AAm?$AAp?$AAa?$AAr?$AAe?$AA_?$AAX?$AA_?$AAU?$AAX?$AA?5?$AA?$CI?$AA?$CF@
CONST	SEGMENT
??_C@_1CK@NFMOCPBE@?$AAC?$AAo?$AAm?$AAp?$AAa?$AAr?$AAe?$AA_?$AAX?$AA_?$AAU?$AAX?$AA?5?$AA?$CI?$AA?$CF@ DB 'C'
	DB	00H, 'o', 00H, 'm', 00H, 'p', 00H, 'a', 00H, 'r', 00H, 'e', 00H
	DB	'_', 00H, 'X', 00H, '_', 00H, 'U', 00H, 'X', 00H, ' ', 00H, '('
	DB	00H, '%', 00H, 'd', 00H, '.', 00H, '%', 00H, 'd', 00H, ')', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1DO@CLMIAKI@?$AAC?$AAo?$AAm?$AAp?$AAa?$AAr?$AAe?$AA_?$AAX?$AA_?$AAL?$AAn?$PP?$KJ?$AA0?$PP?$LD@
CONST	SEGMENT
??_C@_1DO@CLMIAKI@?$AAC?$AAo?$AAm?$AAp?$AAa?$AAr?$AAe?$AA_?$AAX?$AA_?$AAL?$AAn?$PP?$KJ?$AA0?$PP?$LD@ DB 'C'
	DB	00H, 'o', 00H, 'm', 00H, 'p', 00H, 'a', 00H, 'r', 00H, 'e', 00H
	DB	'_', 00H, 'X', 00H, '_', 00H, 'L', 00H, 'n0', 0a9H, '_0^', 0b3H
	DB	'0', 0fcH, '0', 0c9H, '0L0', 01fH, 'g', 085H, '_', 01aH, 090H, 08aH
	DB	'0g0o0j0D0(', 00H, '%', 00H, 'd', 00H, ')', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CI@CLDIENAL@?$AAC?$AAo?$AAm?$AAp?$AAa?$AAr?$AAe?$AA_?$AAX?$AA_?$AAL?$AA?5?$AA?$CI?$AA?$CF?$AAd@
CONST	SEGMENT
??_C@_1CI@CLDIENAL@?$AAC?$AAo?$AAm?$AAp?$AAa?$AAr?$AAe?$AA_?$AAX?$AA_?$AAL?$AA?5?$AA?$CI?$AA?$CF?$AAd@ DB 'C'
	DB	00H, 'o', 00H, 'm', 00H, 'p', 00H, 'a', 00H, 'r', 00H, 'e', 00H
	DB	'_', 00H, 'X', 00H, '_', 00H, 'L', 00H, ' ', 00H, '(', 00H, '%'
	DB	00H, 'd', 00H, '.', 00H, '%', 00H, 'd', 00H, ')', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1DO@EKPABNDN@?$AAC?$AAo?$AAm?$AAp?$AAa?$AAr?$AAe?$AA_?$AAX?$AA_?$AAI?$AAn?$PP?$KJ?$AA0?$PP?$LD@
CONST	SEGMENT
??_C@_1DO@EKPABNDN@?$AAC?$AAo?$AAm?$AAp?$AAa?$AAr?$AAe?$AA_?$AAX?$AA_?$AAI?$AAn?$PP?$KJ?$AA0?$PP?$LD@ DB 'C'
	DB	00H, 'o', 00H, 'm', 00H, 'p', 00H, 'a', 00H, 'r', 00H, 'e', 00H
	DB	'_', 00H, 'X', 00H, '_', 00H, 'I', 00H, 'n0', 0a9H, '_0^', 0b3H
	DB	'0', 0fcH, '0', 0c9H, '0L0', 01fH, 'g', 085H, '_', 01aH, 090H, 08aH
	DB	'0g0o0j0D0(', 00H, '%', 00H, 'd', 00H, ')', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CI@LCJNBE@?$AAC?$AAo?$AAm?$AAp?$AAa?$AAr?$AAe?$AA_?$AAX?$AA_?$AAI?$AA?5?$AA?$CI?$AA?$CF?$AAd@
CONST	SEGMENT
??_C@_1CI@LCJNBE@?$AAC?$AAo?$AAm?$AAp?$AAa?$AAr?$AAe?$AA_?$AAX?$AA_?$AAI?$AA?5?$AA?$CI?$AA?$CF?$AAd@ DB 'C'
	DB	00H, 'o', 00H, 'm', 00H, 'p', 00H, 'a', 00H, 'r', 00H, 'e', 00H
	DB	'_', 00H, 'X', 00H, '_', 00H, 'I', 00H, ' ', 00H, '(', 00H, '%'
	DB	00H, 'd', 00H, '.', 00H, '%', 00H, 'd', 00H, ')', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1EA@CBGLBMOM@?$AAC?$AAo?$AAm?$AAp?$AAa?$AAr?$AAe?$AA_?$AAU?$AAX?$AA_?$AAX?$AAn?$PP?$KJ?$AA0@
CONST	SEGMENT
??_C@_1EA@CBGLBMOM@?$AAC?$AAo?$AAm?$AAp?$AAa?$AAr?$AAe?$AA_?$AAU?$AAX?$AA_?$AAX?$AAn?$PP?$KJ?$AA0@ DB 'C'
	DB	00H, 'o', 00H, 'm', 00H, 'p', 00H, 'a', 00H, 'r', 00H, 'e', 00H
	DB	'_', 00H, 'U', 00H, 'X', 00H, '_', 00H, 'X', 00H, 'n0', 0a9H, '_'
	DB	'0^', 0b3H, '0', 0fcH, '0', 0c9H, '0L0', 01fH, 'g', 085H, '_', 01aH
	DB	090H, 08aH, '0g0o0j0D0(', 00H, '%', 00H, 'd', 00H, ')', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1CK@OLGFOKBG@?$AAC?$AAo?$AAm?$AAp?$AAa?$AAr?$AAe?$AA_?$AAU?$AAX?$AA_?$AAX?$AA?5?$AA?$CI?$AA?$CF@
CONST	SEGMENT
??_C@_1CK@OLGFOKBG@?$AAC?$AAo?$AAm?$AAp?$AAa?$AAr?$AAe?$AA_?$AAU?$AAX?$AA_?$AAX?$AA?5?$AA?$CI?$AA?$CF@ DB 'C'
	DB	00H, 'o', 00H, 'm', 00H, 'p', 00H, 'a', 00H, 'r', 00H, 'e', 00H
	DB	'_', 00H, 'U', 00H, 'X', 00H, '_', 00H, 'X', 00H, ' ', 00H, '('
	DB	00H, '%', 00H, 'd', 00H, '.', 00H, '%', 00H, 'd', 00H, ')', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1DO@ENPFDIIE@?$AAC?$AAo?$AAm?$AAp?$AAa?$AAr?$AAe?$AA_?$AAL?$AA_?$AAX?$AAn?$PP?$KJ?$AA0?$PP?$LD@
CONST	SEGMENT
??_C@_1DO@ENPFDIIE@?$AAC?$AAo?$AAm?$AAp?$AAa?$AAr?$AAe?$AA_?$AAL?$AA_?$AAX?$AAn?$PP?$KJ?$AA0?$PP?$LD@ DB 'C'
	DB	00H, 'o', 00H, 'm', 00H, 'p', 00H, 'a', 00H, 'r', 00H, 'e', 00H
	DB	'_', 00H, 'L', 00H, '_', 00H, 'X', 00H, 'n0', 0a9H, '_0^', 0b3H
	DB	'0', 0fcH, '0', 0c9H, '0L0', 01fH, 'g', 085H, '_', 01aH, 090H, 08aH
	DB	'0g0o0j0D0(', 00H, '%', 00H, 'd', 00H, ')', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CI@JDHOOMBF@?$AAC?$AAo?$AAm?$AAp?$AAa?$AAr?$AAe?$AA_?$AAL?$AA_?$AAX?$AA?5?$AA?$CI?$AA?$CF?$AAd@
CONST	SEGMENT
??_C@_1CI@JDHOOMBF@?$AAC?$AAo?$AAm?$AAp?$AAa?$AAr?$AAe?$AA_?$AAL?$AA_?$AAX?$AA?5?$AA?$CI?$AA?$CF?$AAd@ DB 'C'
	DB	00H, 'o', 00H, 'm', 00H, 'p', 00H, 'a', 00H, 'r', 00H, 'e', 00H
	DB	'_', 00H, 'L', 00H, '_', 00H, 'X', 00H, ' ', 00H, '(', 00H, '%'
	DB	00H, 'd', 00H, '.', 00H, '%', 00H, 'd', 00H, ')', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BK@CBDJCOBM@?$PP?G?$PP?$PM?$PP?$LP?$AAn?$PP?$IF?$PP?$LJ?$AAL?$AA?$AA?$PP?t?$AAW?$AAj?$AAD@
CONST	SEGMENT
??_C@_1BK@CBDJCOBM@?$PP?G?$PP?$PM?$PP?$LP?$AAn?$PP?$IF?$PP?$LJ?$AAL?$AA?$AA?$PP?t?$AAW?$AAj?$AAD@ DB 0c7H
	DB	'0', 0fcH, '0', 0bfH, '0n0', 085H, 'Q', 0b9H, '[L0', 00H, 'N', 0f4H
	DB	081H, 'W0j0D0', 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1DO@BGGLMLBK@?$AAC?$AAo?$AAm?$AAp?$AAa?$AAr?$AAe?$AA_?$AAI?$AA_?$AAX?$AAn?$PP?$KJ?$AA0?$PP?$LD@
CONST	SEGMENT
??_C@_1DO@BGGLMLBK@?$AAC?$AAo?$AAm?$AAp?$AAa?$AAr?$AAe?$AA_?$AAI?$AA_?$AAX?$AAn?$PP?$KJ?$AA0?$PP?$LD@ DB 'C'
	DB	00H, 'o', 00H, 'm', 00H, 'p', 00H, 'a', 00H, 'r', 00H, 'e', 00H
	DB	'_', 00H, 'I', 00H, '_', 00H, 'X', 00H, 'n0', 0a9H, '_0^', 0b3H
	DB	'0', 0fcH, '0', 0c9H, '0L0', 01fH, 'g', 085H, '_', 01aH, 090H, 08aH
	DB	'0g0o0j0D0(', 00H, '%', 00H, 'd', 00H, ')', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CI@HLFNBHGN@?$AAC?$AAo?$AAm?$AAp?$AAa?$AAr?$AAe?$AA_?$AAI?$AA_?$AAX?$AA?5?$AA?$CI?$AA?$CF?$AAd@
CONST	SEGMENT
??_C@_1CI@HLFNBHGN@?$AAC?$AAo?$AAm?$AAp?$AAa?$AAr?$AAe?$AA_?$AAI?$AA_?$AAX?$AA?5?$AA?$CI?$AA?$CF?$AAd@ DB 'C'
	DB	00H, 'o', 00H, 'm', 00H, 'p', 00H, 'a', 00H, 'r', 00H, 'e', 00H
	DB	'_', 00H, 'I', 00H, '_', 00H, 'X', 00H, ' ', 00H, '(', 00H, '%'
	DB	00H, 'd', 00H, '.', 00H, '%', 00H, 'd', 00H, ')', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1EC@NPMCAPKO@?$AAF?$AAr?$AAo?$AAm?$AAB?$AAy?$AAt?$AAe?$AAA?$AAr?$AAr?$AAa?$AAy?$AAn?$PP?$KJ@
CONST	SEGMENT
??_C@_1EC@NPMCAPKO@?$AAF?$AAr?$AAo?$AAm?$AAB?$AAy?$AAt?$AAe?$AAA?$AAr?$AAr?$AAa?$AAy?$AAn?$PP?$KJ@ DB 'F'
	DB	00H, 'r', 00H, 'o', 00H, 'm', 00H, 'B', 00H, 'y', 00H, 't', 00H
	DB	'e', 00H, 'A', 00H, 'r', 00H, 'r', 00H, 'a', 00H, 'y', 00H, 'n'
	DB	'0', 0a9H, '_0^', 0b3H, '0', 0fcH, '0', 0c9H, '0L0', 01fH, 'g', 085H
	DB	'_', 01aH, 090H, 08aH, '0g0o0j0D0(', 00H, '%', 00H, 'd', 00H, ')'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
; Function compile flags: /Odt
;	COMDAT __JustMyCode_Default
_TEXT	SEGMENT
__JustMyCode_Default PROC				; COMDAT
	push	ebp
	mov	ebp, esp
	pop	ebp
	ret	0
__JustMyCode_Default ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.sint\palmtree.math.core.sint\test_op_compare.c
;	COMDAT _TEST_Compare_X_X
_TEXT	SEGMENT
tv152 = -272						; size = 4
tv142 = -272						; size = 4
tv92 = -272						; size = 4
tv74 = -272						; size = 4
_v_result$ = -72					; size = 4
_u_result$ = -60					; size = 4
_result$ = -48						; size = 4
_actual_w$ = -36					; size = 4
_v$ = -24						; size = 4
_u$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_env$ = 8						; size = 4
_ep$ = 12						; size = 4
_no$ = 16						; size = 4
_u_buf$ = 20						; size = 4
_u_buf_size$ = 24					; size = 4
_v_buf$ = 28						; size = 4
_v_buf_size$ = 32					; size = 4
_desired_w$ = 36					; size = 4
_TEST_Compare_X_X PROC					; COMDAT

; 121  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 272				; 00000110H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-272]
	mov	ecx, 68					; 00000044H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	ecx, OFFSET __88878CCC_test_op_compare@c
	call	@__CheckForDebuggerJustMyCode@4

; 122  :     PMC_HANDLE_SINT u;
; 123  :     PMC_HANDLE_SINT v;
; 124  :     __int32 actual_w;
; 125  :     PMC_STATUS_CODE result;
; 126  :     PMC_STATUS_CODE u_result;
; 127  :     PMC_STATUS_CODE v_result;
; 128  :     TEST_Assert(env, FormatTestLabel(L"Compare_X_X (%d.%d)", no, 1), (u_result = ep->FromByteArray(u_buf, u_buf_size, &u)) == PMC_STATUS_OK, FormatTestMesssage(L"FromByteArrayの復帰コードが期待通りではない(%d)", u_result));

	mov	esi, esp
	lea	eax, DWORD PTR _u$[ebp]
	push	eax
	mov	ecx, DWORD PTR _u_buf_size$[ebp]
	push	ecx
	mov	edx, DWORD PTR _u_buf$[ebp]
	push	edx
	mov	eax, DWORD PTR _ep$[ebp]
	mov	ecx, DWORD PTR [eax+300]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _u_result$[ebp], eax
	cmp	DWORD PTR _u_result$[ebp], 0
	jne	SHORT $LN5@TEST_Compa
	mov	DWORD PTR tv74[ebp], 1
	jmp	SHORT $LN6@TEST_Compa
$LN5@TEST_Compa:
	mov	DWORD PTR tv74[ebp], 0
$LN6@TEST_Compa:
	mov	edx, DWORD PTR _u_result$[ebp]
	push	edx
	push	OFFSET ??_C@_1EC@NPMCAPKO@?$AAF?$AAr?$AAo?$AAm?$AAB?$AAy?$AAt?$AAe?$AAA?$AAr?$AAr?$AAa?$AAy?$AAn?$PP?$KJ@
	call	_FormatTestMesssage
	add	esp, 8
	push	eax
	mov	eax, DWORD PTR tv74[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _no$[ebp]
	push	ecx
	push	OFFSET ??_C@_1CI@IFBDANHH@?$AAC?$AAo?$AAm?$AAp?$AAa?$AAr?$AAe?$AA_?$AAX?$AA_?$AAX?$AA?5?$AA?$CI?$AA?$CF?$AAd@
	call	_FormatTestLabel
	add	esp, 12					; 0000000cH
	push	eax
	mov	edx, DWORD PTR _env$[ebp]
	push	edx
	call	_TEST_Assert
	add	esp, 16					; 00000010H

; 129  :     TEST_Assert(env, FormatTestLabel(L"Compare_X_X (%d.%d)", no, 2), (v_result = ep->FromByteArray(v_buf, v_buf_size, &v)) == PMC_STATUS_OK, FormatTestMesssage(L"FromByteArrayの復帰コードが期待通りではない(%d)", v_result));

	mov	esi, esp
	lea	eax, DWORD PTR _v$[ebp]
	push	eax
	mov	ecx, DWORD PTR _v_buf_size$[ebp]
	push	ecx
	mov	edx, DWORD PTR _v_buf$[ebp]
	push	edx
	mov	eax, DWORD PTR _ep$[ebp]
	mov	ecx, DWORD PTR [eax+300]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _v_result$[ebp], eax
	cmp	DWORD PTR _v_result$[ebp], 0
	jne	SHORT $LN7@TEST_Compa
	mov	DWORD PTR tv92[ebp], 1
	jmp	SHORT $LN8@TEST_Compa
$LN7@TEST_Compa:
	mov	DWORD PTR tv92[ebp], 0
$LN8@TEST_Compa:
	mov	edx, DWORD PTR _v_result$[ebp]
	push	edx
	push	OFFSET ??_C@_1EC@NPMCAPKO@?$AAF?$AAr?$AAo?$AAm?$AAB?$AAy?$AAt?$AAe?$AAA?$AAr?$AAr?$AAa?$AAy?$AAn?$PP?$KJ@
	call	_FormatTestMesssage
	add	esp, 8
	push	eax
	mov	eax, DWORD PTR tv92[ebp]
	push	eax
	push	2
	mov	ecx, DWORD PTR _no$[ebp]
	push	ecx
	push	OFFSET ??_C@_1CI@IFBDANHH@?$AAC?$AAo?$AAm?$AAp?$AAa?$AAr?$AAe?$AA_?$AAX?$AA_?$AAX?$AA?5?$AA?$CI?$AA?$CF?$AAd@
	call	_FormatTestLabel
	add	esp, 12					; 0000000cH
	push	eax
	mov	edx, DWORD PTR _env$[ebp]
	push	edx
	call	_TEST_Assert
	add	esp, 16					; 00000010H

; 130  :     TEST_Assert(env, FormatTestLabel(L"Compare_X_X (%d.%d)", no, 3), (result = ep->Compare_X_X(u, v, &actual_w)) == PMC_STATUS_OK, FormatTestMesssage(L"Compare_X_Xの復帰コードが期待通りではない(%d)", result));

	mov	esi, esp
	lea	eax, DWORD PTR _actual_w$[ebp]
	push	eax
	mov	ecx, DWORD PTR _v$[ebp]
	push	ecx
	mov	edx, DWORD PTR _u$[ebp]
	push	edx
	mov	eax, DWORD PTR _ep$[ebp]
	mov	ecx, DWORD PTR [eax+464]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _result$[ebp], eax
	cmp	DWORD PTR _result$[ebp], 0
	jne	SHORT $LN9@TEST_Compa
	mov	DWORD PTR tv142[ebp], 1
	jmp	SHORT $LN10@TEST_Compa
$LN9@TEST_Compa:
	mov	DWORD PTR tv142[ebp], 0
$LN10@TEST_Compa:
	mov	edx, DWORD PTR _result$[ebp]
	push	edx
	push	OFFSET ??_C@_1DO@PIPPPALN@?$AAC?$AAo?$AAm?$AAp?$AAa?$AAr?$AAe?$AA_?$AAX?$AA_?$AAX?$AAn?$PP?$KJ?$AA0?$PP?$LD@
	call	_FormatTestMesssage
	add	esp, 8
	push	eax
	mov	eax, DWORD PTR tv142[ebp]
	push	eax
	push	3
	mov	ecx, DWORD PTR _no$[ebp]
	push	ecx
	push	OFFSET ??_C@_1CI@IFBDANHH@?$AAC?$AAo?$AAm?$AAp?$AAa?$AAr?$AAe?$AA_?$AAX?$AA_?$AAX?$AA?5?$AA?$CI?$AA?$CF?$AAd@
	call	_FormatTestLabel
	add	esp, 12					; 0000000cH
	push	eax
	mov	edx, DWORD PTR _env$[ebp]
	push	edx
	call	_TEST_Assert
	add	esp, 16					; 00000010H

; 131  :     TEST_Assert(env, FormatTestLabel(L"Compare_X_X (%d.%d)", no, 4), actual_w == desired_w, L"データの内容が一致しない");

	mov	eax, DWORD PTR _actual_w$[ebp]
	cmp	eax, DWORD PTR _desired_w$[ebp]
	jne	SHORT $LN11@TEST_Compa
	mov	DWORD PTR tv152[ebp], 1
	jmp	SHORT $LN12@TEST_Compa
$LN11@TEST_Compa:
	mov	DWORD PTR tv152[ebp], 0
$LN12@TEST_Compa:
	push	OFFSET ??_C@_1BK@CBDJCOBM@?$PP?G?$PP?$PM?$PP?$LP?$AAn?$PP?$IF?$PP?$LJ?$AAL?$AA?$AA?$PP?t?$AAW?$AAj?$AAD@
	mov	ecx, DWORD PTR tv152[ebp]
	push	ecx
	push	4
	mov	edx, DWORD PTR _no$[ebp]
	push	edx
	push	OFFSET ??_C@_1CI@IFBDANHH@?$AAC?$AAo?$AAm?$AAp?$AAa?$AAr?$AAe?$AA_?$AAX?$AA_?$AAX?$AA?5?$AA?$CI?$AA?$CF?$AAd@
	call	_FormatTestLabel
	add	esp, 12					; 0000000cH
	push	eax
	mov	eax, DWORD PTR _env$[ebp]
	push	eax
	call	_TEST_Assert
	add	esp, 16					; 00000010H

; 132  :     if (v_result == PMC_STATUS_OK)

	cmp	DWORD PTR _v_result$[ebp], 0
	jne	SHORT $LN2@TEST_Compa

; 133  :         ep->Dispose(v);

	mov	esi, esp
	mov	eax, DWORD PTR _v$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ep$[ebp]
	mov	edx, DWORD PTR [ecx+292]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@TEST_Compa:

; 134  :     if (u_result == PMC_STATUS_OK)

	cmp	DWORD PTR _u_result$[ebp], 0
	jne	SHORT $LN1@TEST_Compa

; 135  :         ep->Dispose(u);

	mov	esi, esp
	mov	eax, DWORD PTR _u$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ep$[ebp]
	mov	edx, DWORD PTR [ecx+292]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@TEST_Compa:

; 136  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN17@TEST_Compa
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 272				; 00000110H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN17@TEST_Compa:
	DD	3
	DD	$LN16@TEST_Compa
$LN16@TEST_Compa:
	DD	-12					; fffffff4H
	DD	4
	DD	$LN13@TEST_Compa
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN14@TEST_Compa
	DD	-36					; ffffffdcH
	DD	4
	DD	$LN15@TEST_Compa
$LN15@TEST_Compa:
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	95					; 0000005fH
	DB	119					; 00000077H
	DB	0
$LN14@TEST_Compa:
	DB	118					; 00000076H
	DB	0
$LN13@TEST_Compa:
	DB	117					; 00000075H
	DB	0
_TEST_Compare_X_X ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.sint\palmtree.math.core.sint\test_op_compare.c
;	COMDAT _TEST_Compare_X_UX
_TEXT	SEGMENT
tv152 = -272						; size = 4
tv142 = -272						; size = 4
tv92 = -272						; size = 4
tv74 = -272						; size = 4
_v_result$ = -72					; size = 4
_u_result$ = -60					; size = 4
_result$ = -48						; size = 4
_actual_w$ = -36					; size = 4
_v$ = -24						; size = 4
_u$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_env$ = 8						; size = 4
_ep$ = 12						; size = 4
_no$ = 16						; size = 4
_u_buf$ = 20						; size = 4
_u_buf_size$ = 24					; size = 4
_v_buf$ = 28						; size = 4
_v_buf_size$ = 32					; size = 4
_desired_w$ = 36					; size = 4
_TEST_Compare_X_UX PROC					; COMDAT

; 103  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 272				; 00000110H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-272]
	mov	ecx, 68					; 00000044H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	ecx, OFFSET __88878CCC_test_op_compare@c
	call	@__CheckForDebuggerJustMyCode@4

; 104  :     PMC_HANDLE_SINT u;
; 105  :     PMC_HANDLE_UINT v;
; 106  :     __int32 actual_w;
; 107  :     PMC_STATUS_CODE result;
; 108  :     PMC_STATUS_CODE u_result;
; 109  :     PMC_STATUS_CODE v_result;
; 110  :     TEST_Assert(env, FormatTestLabel(L"Compare_X_UX (%d.%d)", no, 1), (u_result = ep->FromByteArray(u_buf, u_buf_size, &u)) == PMC_STATUS_OK, FormatTestMesssage(L"FromByteArrayの復帰コードが期待通りではない(%d)", u_result));

	mov	esi, esp
	lea	eax, DWORD PTR _u$[ebp]
	push	eax
	mov	ecx, DWORD PTR _u_buf_size$[ebp]
	push	ecx
	mov	edx, DWORD PTR _u_buf$[ebp]
	push	edx
	mov	eax, DWORD PTR _ep$[ebp]
	mov	ecx, DWORD PTR [eax+300]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _u_result$[ebp], eax
	cmp	DWORD PTR _u_result$[ebp], 0
	jne	SHORT $LN5@TEST_Compa
	mov	DWORD PTR tv74[ebp], 1
	jmp	SHORT $LN6@TEST_Compa
$LN5@TEST_Compa:
	mov	DWORD PTR tv74[ebp], 0
$LN6@TEST_Compa:
	mov	edx, DWORD PTR _u_result$[ebp]
	push	edx
	push	OFFSET ??_C@_1EC@NPMCAPKO@?$AAF?$AAr?$AAo?$AAm?$AAB?$AAy?$AAt?$AAe?$AAA?$AAr?$AAr?$AAa?$AAy?$AAn?$PP?$KJ@
	call	_FormatTestMesssage
	add	esp, 8
	push	eax
	mov	eax, DWORD PTR tv74[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _no$[ebp]
	push	ecx
	push	OFFSET ??_C@_1CK@NFMOCPBE@?$AAC?$AAo?$AAm?$AAp?$AAa?$AAr?$AAe?$AA_?$AAX?$AA_?$AAU?$AAX?$AA?5?$AA?$CI?$AA?$CF@
	call	_FormatTestLabel
	add	esp, 12					; 0000000cH
	push	eax
	mov	edx, DWORD PTR _env$[ebp]
	push	edx
	call	_TEST_Assert
	add	esp, 16					; 00000010H

; 111  :     TEST_Assert(env, FormatTestLabel(L"Compare_X_UX (%d.%d)", no, 2), (v_result = ep->UINT_ENTRY_POINTS.FromByteArray(v_buf, v_buf_size, &v)) == PMC_STATUS_OK, FormatTestMesssage(L"FromByteArrayの復帰コードが期待通りではない(%d)", v_result));

	mov	esi, esp
	lea	eax, DWORD PTR _v$[ebp]
	push	eax
	mov	ecx, DWORD PTR _v_buf_size$[ebp]
	push	ecx
	mov	edx, DWORD PTR _v_buf$[ebp]
	push	edx
	mov	eax, DWORD PTR _ep$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _v_result$[ebp], eax
	cmp	DWORD PTR _v_result$[ebp], 0
	jne	SHORT $LN7@TEST_Compa
	mov	DWORD PTR tv92[ebp], 1
	jmp	SHORT $LN8@TEST_Compa
$LN7@TEST_Compa:
	mov	DWORD PTR tv92[ebp], 0
$LN8@TEST_Compa:
	mov	edx, DWORD PTR _v_result$[ebp]
	push	edx
	push	OFFSET ??_C@_1EC@NPMCAPKO@?$AAF?$AAr?$AAo?$AAm?$AAB?$AAy?$AAt?$AAe?$AAA?$AAr?$AAr?$AAa?$AAy?$AAn?$PP?$KJ@
	call	_FormatTestMesssage
	add	esp, 8
	push	eax
	mov	eax, DWORD PTR tv92[ebp]
	push	eax
	push	2
	mov	ecx, DWORD PTR _no$[ebp]
	push	ecx
	push	OFFSET ??_C@_1CK@NFMOCPBE@?$AAC?$AAo?$AAm?$AAp?$AAa?$AAr?$AAe?$AA_?$AAX?$AA_?$AAU?$AAX?$AA?5?$AA?$CI?$AA?$CF@
	call	_FormatTestLabel
	add	esp, 12					; 0000000cH
	push	eax
	mov	edx, DWORD PTR _env$[ebp]
	push	edx
	call	_TEST_Assert
	add	esp, 16					; 00000010H

; 112  :     TEST_Assert(env, FormatTestLabel(L"Compare_X_UX (%d.%d)", no, 3), (result = ep->Compare_X_UX(u, v, &actual_w)) == PMC_STATUS_OK, FormatTestMesssage(L"Compare_X_UXの復帰コードが期待通りではない(%d)", result));

	mov	esi, esp
	lea	eax, DWORD PTR _actual_w$[ebp]
	push	eax
	mov	ecx, DWORD PTR _v$[ebp]
	push	ecx
	mov	edx, DWORD PTR _u$[ebp]
	push	edx
	mov	eax, DWORD PTR _ep$[ebp]
	mov	ecx, DWORD PTR [eax+460]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _result$[ebp], eax
	cmp	DWORD PTR _result$[ebp], 0
	jne	SHORT $LN9@TEST_Compa
	mov	DWORD PTR tv142[ebp], 1
	jmp	SHORT $LN10@TEST_Compa
$LN9@TEST_Compa:
	mov	DWORD PTR tv142[ebp], 0
$LN10@TEST_Compa:
	mov	edx, DWORD PTR _result$[ebp]
	push	edx
	push	OFFSET ??_C@_1EA@KGIOFCMM@?$AAC?$AAo?$AAm?$AAp?$AAa?$AAr?$AAe?$AA_?$AAX?$AA_?$AAU?$AAX?$AAn?$PP?$KJ?$AA0@
	call	_FormatTestMesssage
	add	esp, 8
	push	eax
	mov	eax, DWORD PTR tv142[ebp]
	push	eax
	push	3
	mov	ecx, DWORD PTR _no$[ebp]
	push	ecx
	push	OFFSET ??_C@_1CK@NFMOCPBE@?$AAC?$AAo?$AAm?$AAp?$AAa?$AAr?$AAe?$AA_?$AAX?$AA_?$AAU?$AAX?$AA?5?$AA?$CI?$AA?$CF@
	call	_FormatTestLabel
	add	esp, 12					; 0000000cH
	push	eax
	mov	edx, DWORD PTR _env$[ebp]
	push	edx
	call	_TEST_Assert
	add	esp, 16					; 00000010H

; 113  :     TEST_Assert(env, FormatTestLabel(L"Compare_X_UX (%d.%d)", no, 4), actual_w == desired_w, L"データの内容が一致しない");

	mov	eax, DWORD PTR _actual_w$[ebp]
	cmp	eax, DWORD PTR _desired_w$[ebp]
	jne	SHORT $LN11@TEST_Compa
	mov	DWORD PTR tv152[ebp], 1
	jmp	SHORT $LN12@TEST_Compa
$LN11@TEST_Compa:
	mov	DWORD PTR tv152[ebp], 0
$LN12@TEST_Compa:
	push	OFFSET ??_C@_1BK@CBDJCOBM@?$PP?G?$PP?$PM?$PP?$LP?$AAn?$PP?$IF?$PP?$LJ?$AAL?$AA?$AA?$PP?t?$AAW?$AAj?$AAD@
	mov	ecx, DWORD PTR tv152[ebp]
	push	ecx
	push	4
	mov	edx, DWORD PTR _no$[ebp]
	push	edx
	push	OFFSET ??_C@_1CK@NFMOCPBE@?$AAC?$AAo?$AAm?$AAp?$AAa?$AAr?$AAe?$AA_?$AAX?$AA_?$AAU?$AAX?$AA?5?$AA?$CI?$AA?$CF@
	call	_FormatTestLabel
	add	esp, 12					; 0000000cH
	push	eax
	mov	eax, DWORD PTR _env$[ebp]
	push	eax
	call	_TEST_Assert
	add	esp, 16					; 00000010H

; 114  :     if (v_result == PMC_STATUS_OK)

	cmp	DWORD PTR _v_result$[ebp], 0
	jne	SHORT $LN2@TEST_Compa

; 115  :         ep->UINT_ENTRY_POINTS.Dispose(v);

	mov	esi, esp
	mov	eax, DWORD PTR _v$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ep$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@TEST_Compa:

; 116  :     if (u_result == PMC_STATUS_OK)

	cmp	DWORD PTR _u_result$[ebp], 0
	jne	SHORT $LN1@TEST_Compa

; 117  :         ep->Dispose(u);

	mov	esi, esp
	mov	eax, DWORD PTR _u$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ep$[ebp]
	mov	edx, DWORD PTR [ecx+292]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@TEST_Compa:

; 118  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN17@TEST_Compa
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 272				; 00000110H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN17@TEST_Compa:
	DD	3
	DD	$LN16@TEST_Compa
$LN16@TEST_Compa:
	DD	-12					; fffffff4H
	DD	4
	DD	$LN13@TEST_Compa
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN14@TEST_Compa
	DD	-36					; ffffffdcH
	DD	4
	DD	$LN15@TEST_Compa
$LN15@TEST_Compa:
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	95					; 0000005fH
	DB	119					; 00000077H
	DB	0
$LN14@TEST_Compa:
	DB	118					; 00000076H
	DB	0
$LN13@TEST_Compa:
	DB	117					; 00000075H
	DB	0
_TEST_Compare_X_UX ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.sint\palmtree.math.core.sint\test_op_compare.c
;	COMDAT _TEST_Compare_X_L
_TEXT	SEGMENT
tv134 = -248						; size = 4
tv92 = -248						; size = 4
tv74 = -248						; size = 4
_u_result$ = -48					; size = 4
_result$ = -36						; size = 4
_actual_w$ = -24					; size = 4
_u$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_env$ = 8						; size = 4
_ep$ = 12						; size = 4
_no$ = 16						; size = 4
_u_buf$ = 20						; size = 4
_u_buf_size$ = 24					; size = 4
_v$ = 28						; size = 8
_desired_w$ = 36					; size = 4
_TEST_Compare_X_L PROC					; COMDAT

; 90   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 248				; 000000f8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-248]
	mov	ecx, 62					; 0000003eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	ecx, OFFSET __88878CCC_test_op_compare@c
	call	@__CheckForDebuggerJustMyCode@4

; 91   :     PMC_HANDLE_SINT u;
; 92   :     __int32 actual_w;
; 93   :     PMC_STATUS_CODE result;
; 94   :     PMC_STATUS_CODE u_result;
; 95   :     TEST_Assert(env, FormatTestLabel(L"Compare_X_L (%d.%d)", no, 1), (u_result = ep->FromByteArray(u_buf, u_buf_size, &u)) == PMC_STATUS_OK, FormatTestMesssage(L"FromByteArrayの復帰コードが期待通りではない(%d)", u_result));

	mov	esi, esp
	lea	eax, DWORD PTR _u$[ebp]
	push	eax
	mov	ecx, DWORD PTR _u_buf_size$[ebp]
	push	ecx
	mov	edx, DWORD PTR _u_buf$[ebp]
	push	edx
	mov	eax, DWORD PTR _ep$[ebp]
	mov	ecx, DWORD PTR [eax+300]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _u_result$[ebp], eax
	cmp	DWORD PTR _u_result$[ebp], 0
	jne	SHORT $LN4@TEST_Compa
	mov	DWORD PTR tv74[ebp], 1
	jmp	SHORT $LN5@TEST_Compa
$LN4@TEST_Compa:
	mov	DWORD PTR tv74[ebp], 0
$LN5@TEST_Compa:
	mov	edx, DWORD PTR _u_result$[ebp]
	push	edx
	push	OFFSET ??_C@_1EC@NPMCAPKO@?$AAF?$AAr?$AAo?$AAm?$AAB?$AAy?$AAt?$AAe?$AAA?$AAr?$AAr?$AAa?$AAy?$AAn?$PP?$KJ@
	call	_FormatTestMesssage
	add	esp, 8
	push	eax
	mov	eax, DWORD PTR tv74[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _no$[ebp]
	push	ecx
	push	OFFSET ??_C@_1CI@CLDIENAL@?$AAC?$AAo?$AAm?$AAp?$AAa?$AAr?$AAe?$AA_?$AAX?$AA_?$AAL?$AA?5?$AA?$CI?$AA?$CF?$AAd@
	call	_FormatTestLabel
	add	esp, 12					; 0000000cH
	push	eax
	mov	edx, DWORD PTR _env$[ebp]
	push	edx
	call	_TEST_Assert
	add	esp, 16					; 00000010H

; 96   :     TEST_Assert(env, FormatTestLabel(L"Compare_X_L (%d.%d)", no, 2), (result = ep->Compare_X_L(u, v, &actual_w)) == PMC_STATUS_OK, FormatTestMesssage(L"Compare_X_Lの復帰コードが期待通りではない(%d)", result));

	mov	esi, esp
	lea	eax, DWORD PTR _actual_w$[ebp]
	push	eax
	mov	ecx, DWORD PTR _v$[ebp+4]
	push	ecx
	mov	edx, DWORD PTR _v$[ebp]
	push	edx
	mov	eax, DWORD PTR _u$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ep$[ebp]
	mov	edx, DWORD PTR [ecx+456]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _result$[ebp], eax
	cmp	DWORD PTR _result$[ebp], 0
	jne	SHORT $LN6@TEST_Compa
	mov	DWORD PTR tv92[ebp], 1
	jmp	SHORT $LN7@TEST_Compa
$LN6@TEST_Compa:
	mov	DWORD PTR tv92[ebp], 0
$LN7@TEST_Compa:
	mov	eax, DWORD PTR _result$[ebp]
	push	eax
	push	OFFSET ??_C@_1DO@CLMIAKI@?$AAC?$AAo?$AAm?$AAp?$AAa?$AAr?$AAe?$AA_?$AAX?$AA_?$AAL?$AAn?$PP?$KJ?$AA0?$PP?$LD@
	call	_FormatTestMesssage
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR tv92[ebp]
	push	ecx
	push	2
	mov	edx, DWORD PTR _no$[ebp]
	push	edx
	push	OFFSET ??_C@_1CI@CLDIENAL@?$AAC?$AAo?$AAm?$AAp?$AAa?$AAr?$AAe?$AA_?$AAX?$AA_?$AAL?$AA?5?$AA?$CI?$AA?$CF?$AAd@
	call	_FormatTestLabel
	add	esp, 12					; 0000000cH
	push	eax
	mov	eax, DWORD PTR _env$[ebp]
	push	eax
	call	_TEST_Assert
	add	esp, 16					; 00000010H

; 97   :     TEST_Assert(env, FormatTestLabel(L"Compare_X_L (%d.%d)", no, 3), actual_w == desired_w, L"データの内容が一致しない");

	mov	eax, DWORD PTR _actual_w$[ebp]
	cmp	eax, DWORD PTR _desired_w$[ebp]
	jne	SHORT $LN8@TEST_Compa
	mov	DWORD PTR tv134[ebp], 1
	jmp	SHORT $LN9@TEST_Compa
$LN8@TEST_Compa:
	mov	DWORD PTR tv134[ebp], 0
$LN9@TEST_Compa:
	push	OFFSET ??_C@_1BK@CBDJCOBM@?$PP?G?$PP?$PM?$PP?$LP?$AAn?$PP?$IF?$PP?$LJ?$AAL?$AA?$AA?$PP?t?$AAW?$AAj?$AAD@
	mov	ecx, DWORD PTR tv134[ebp]
	push	ecx
	push	3
	mov	edx, DWORD PTR _no$[ebp]
	push	edx
	push	OFFSET ??_C@_1CI@CLDIENAL@?$AAC?$AAo?$AAm?$AAp?$AAa?$AAr?$AAe?$AA_?$AAX?$AA_?$AAL?$AA?5?$AA?$CI?$AA?$CF?$AAd@
	call	_FormatTestLabel
	add	esp, 12					; 0000000cH
	push	eax
	mov	eax, DWORD PTR _env$[ebp]
	push	eax
	call	_TEST_Assert
	add	esp, 16					; 00000010H

; 98   :     if (u_result == PMC_STATUS_OK)

	cmp	DWORD PTR _u_result$[ebp], 0
	jne	SHORT $LN1@TEST_Compa

; 99   :         ep->Dispose(u);

	mov	esi, esp
	mov	eax, DWORD PTR _u$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ep$[ebp]
	mov	edx, DWORD PTR [ecx+292]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@TEST_Compa:

; 100  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN13@TEST_Compa
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 248				; 000000f8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN13@TEST_Compa:
	DD	2
	DD	$LN12@TEST_Compa
$LN12@TEST_Compa:
	DD	-12					; fffffff4H
	DD	4
	DD	$LN10@TEST_Compa
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN11@TEST_Compa
$LN11@TEST_Compa:
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	95					; 0000005fH
	DB	119					; 00000077H
	DB	0
$LN10@TEST_Compa:
	DB	117					; 00000075H
	DB	0
_TEST_Compare_X_L ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.sint\palmtree.math.core.sint\test_op_compare.c
;	COMDAT _TEST_Compare_X_I
_TEXT	SEGMENT
tv134 = -248						; size = 4
tv92 = -248						; size = 4
tv74 = -248						; size = 4
_u_result$ = -48					; size = 4
_result$ = -36						; size = 4
_actual_w$ = -24					; size = 4
_u$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_env$ = 8						; size = 4
_ep$ = 12						; size = 4
_no$ = 16						; size = 4
_u_buf$ = 20						; size = 4
_u_buf_size$ = 24					; size = 4
_v$ = 28						; size = 4
_desired_w$ = 32					; size = 4
_TEST_Compare_X_I PROC					; COMDAT

; 77   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 248				; 000000f8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-248]
	mov	ecx, 62					; 0000003eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	ecx, OFFSET __88878CCC_test_op_compare@c
	call	@__CheckForDebuggerJustMyCode@4

; 78   :     PMC_HANDLE_SINT u;
; 79   :     __int32 actual_w;
; 80   :     PMC_STATUS_CODE result;
; 81   :     PMC_STATUS_CODE u_result;
; 82   :     TEST_Assert(env, FormatTestLabel(L"Compare_X_I (%d.%d)", no, 1), (u_result = ep->FromByteArray(u_buf, u_buf_size, &u)) == PMC_STATUS_OK, FormatTestMesssage(L"FromByteArrayの復帰コードが期待通りではない(%d)", u_result));

	mov	esi, esp
	lea	eax, DWORD PTR _u$[ebp]
	push	eax
	mov	ecx, DWORD PTR _u_buf_size$[ebp]
	push	ecx
	mov	edx, DWORD PTR _u_buf$[ebp]
	push	edx
	mov	eax, DWORD PTR _ep$[ebp]
	mov	ecx, DWORD PTR [eax+300]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _u_result$[ebp], eax
	cmp	DWORD PTR _u_result$[ebp], 0
	jne	SHORT $LN4@TEST_Compa
	mov	DWORD PTR tv74[ebp], 1
	jmp	SHORT $LN5@TEST_Compa
$LN4@TEST_Compa:
	mov	DWORD PTR tv74[ebp], 0
$LN5@TEST_Compa:
	mov	edx, DWORD PTR _u_result$[ebp]
	push	edx
	push	OFFSET ??_C@_1EC@NPMCAPKO@?$AAF?$AAr?$AAo?$AAm?$AAB?$AAy?$AAt?$AAe?$AAA?$AAr?$AAr?$AAa?$AAy?$AAn?$PP?$KJ@
	call	_FormatTestMesssage
	add	esp, 8
	push	eax
	mov	eax, DWORD PTR tv74[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _no$[ebp]
	push	ecx
	push	OFFSET ??_C@_1CI@LCJNBE@?$AAC?$AAo?$AAm?$AAp?$AAa?$AAr?$AAe?$AA_?$AAX?$AA_?$AAI?$AA?5?$AA?$CI?$AA?$CF?$AAd@
	call	_FormatTestLabel
	add	esp, 12					; 0000000cH
	push	eax
	mov	edx, DWORD PTR _env$[ebp]
	push	edx
	call	_TEST_Assert
	add	esp, 16					; 00000010H

; 83   :     TEST_Assert(env, FormatTestLabel(L"Compare_X_I (%d.%d)", no, 2), (result = ep->Compare_X_I(u, v, &actual_w)) == PMC_STATUS_OK, FormatTestMesssage(L"Compare_X_Iの復帰コードが期待通りではない(%d)", result));

	mov	esi, esp
	lea	eax, DWORD PTR _actual_w$[ebp]
	push	eax
	mov	ecx, DWORD PTR _v$[ebp]
	push	ecx
	mov	edx, DWORD PTR _u$[ebp]
	push	edx
	mov	eax, DWORD PTR _ep$[ebp]
	mov	ecx, DWORD PTR [eax+452]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _result$[ebp], eax
	cmp	DWORD PTR _result$[ebp], 0
	jne	SHORT $LN6@TEST_Compa
	mov	DWORD PTR tv92[ebp], 1
	jmp	SHORT $LN7@TEST_Compa
$LN6@TEST_Compa:
	mov	DWORD PTR tv92[ebp], 0
$LN7@TEST_Compa:
	mov	edx, DWORD PTR _result$[ebp]
	push	edx
	push	OFFSET ??_C@_1DO@EKPABNDN@?$AAC?$AAo?$AAm?$AAp?$AAa?$AAr?$AAe?$AA_?$AAX?$AA_?$AAI?$AAn?$PP?$KJ?$AA0?$PP?$LD@
	call	_FormatTestMesssage
	add	esp, 8
	push	eax
	mov	eax, DWORD PTR tv92[ebp]
	push	eax
	push	2
	mov	ecx, DWORD PTR _no$[ebp]
	push	ecx
	push	OFFSET ??_C@_1CI@LCJNBE@?$AAC?$AAo?$AAm?$AAp?$AAa?$AAr?$AAe?$AA_?$AAX?$AA_?$AAI?$AA?5?$AA?$CI?$AA?$CF?$AAd@
	call	_FormatTestLabel
	add	esp, 12					; 0000000cH
	push	eax
	mov	edx, DWORD PTR _env$[ebp]
	push	edx
	call	_TEST_Assert
	add	esp, 16					; 00000010H

; 84   :     TEST_Assert(env, FormatTestLabel(L"Compare_X_I (%d.%d)", no, 3), actual_w == desired_w, L"データの内容が一致しない");

	mov	eax, DWORD PTR _actual_w$[ebp]
	cmp	eax, DWORD PTR _desired_w$[ebp]
	jne	SHORT $LN8@TEST_Compa
	mov	DWORD PTR tv134[ebp], 1
	jmp	SHORT $LN9@TEST_Compa
$LN8@TEST_Compa:
	mov	DWORD PTR tv134[ebp], 0
$LN9@TEST_Compa:
	push	OFFSET ??_C@_1BK@CBDJCOBM@?$PP?G?$PP?$PM?$PP?$LP?$AAn?$PP?$IF?$PP?$LJ?$AAL?$AA?$AA?$PP?t?$AAW?$AAj?$AAD@
	mov	ecx, DWORD PTR tv134[ebp]
	push	ecx
	push	3
	mov	edx, DWORD PTR _no$[ebp]
	push	edx
	push	OFFSET ??_C@_1CI@LCJNBE@?$AAC?$AAo?$AAm?$AAp?$AAa?$AAr?$AAe?$AA_?$AAX?$AA_?$AAI?$AA?5?$AA?$CI?$AA?$CF?$AAd@
	call	_FormatTestLabel
	add	esp, 12					; 0000000cH
	push	eax
	mov	eax, DWORD PTR _env$[ebp]
	push	eax
	call	_TEST_Assert
	add	esp, 16					; 00000010H

; 85   :     if (u_result == PMC_STATUS_OK)

	cmp	DWORD PTR _u_result$[ebp], 0
	jne	SHORT $LN1@TEST_Compa

; 86   :         ep->Dispose(u);

	mov	esi, esp
	mov	eax, DWORD PTR _u$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ep$[ebp]
	mov	edx, DWORD PTR [ecx+292]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@TEST_Compa:

; 87   : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN13@TEST_Compa
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 248				; 000000f8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN13@TEST_Compa:
	DD	2
	DD	$LN12@TEST_Compa
$LN12@TEST_Compa:
	DD	-12					; fffffff4H
	DD	4
	DD	$LN10@TEST_Compa
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN11@TEST_Compa
$LN11@TEST_Compa:
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	95					; 0000005fH
	DB	119					; 00000077H
	DB	0
$LN10@TEST_Compa:
	DB	117					; 00000075H
	DB	0
_TEST_Compare_X_I ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.sint\palmtree.math.core.sint\test_op_compare.c
;	COMDAT _TEST_Compare_UX_X
_TEXT	SEGMENT
tv152 = -272						; size = 4
tv142 = -272						; size = 4
tv92 = -272						; size = 4
tv74 = -272						; size = 4
_v_result$ = -72					; size = 4
_u_result$ = -60					; size = 4
_result$ = -48						; size = 4
_actual_w$ = -36					; size = 4
_v$ = -24						; size = 4
_u$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_env$ = 8						; size = 4
_ep$ = 12						; size = 4
_no$ = 16						; size = 4
_u_buf$ = 20						; size = 4
_u_buf_size$ = 24					; size = 4
_v_buf$ = 28						; size = 4
_v_buf_size$ = 32					; size = 4
_desired_w$ = 36					; size = 4
_TEST_Compare_UX_X PROC					; COMDAT

; 59   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 272				; 00000110H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-272]
	mov	ecx, 68					; 00000044H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	ecx, OFFSET __88878CCC_test_op_compare@c
	call	@__CheckForDebuggerJustMyCode@4

; 60   :     PMC_HANDLE_UINT u;
; 61   :     PMC_HANDLE_SINT v;
; 62   :     __int32 actual_w;
; 63   :     PMC_STATUS_CODE result;
; 64   :     PMC_STATUS_CODE u_result;
; 65   :     PMC_STATUS_CODE v_result;
; 66   :     TEST_Assert(env, FormatTestLabel(L"Compare_UX_X (%d.%d)", no, 1), (u_result = ep->UINT_ENTRY_POINTS.FromByteArray(u_buf, u_buf_size, &u)) == PMC_STATUS_OK, FormatTestMesssage(L"FromByteArrayの復帰コードが期待通りではない(%d)", u_result));

	mov	esi, esp
	lea	eax, DWORD PTR _u$[ebp]
	push	eax
	mov	ecx, DWORD PTR _u_buf_size$[ebp]
	push	ecx
	mov	edx, DWORD PTR _u_buf$[ebp]
	push	edx
	mov	eax, DWORD PTR _ep$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _u_result$[ebp], eax
	cmp	DWORD PTR _u_result$[ebp], 0
	jne	SHORT $LN5@TEST_Compa
	mov	DWORD PTR tv74[ebp], 1
	jmp	SHORT $LN6@TEST_Compa
$LN5@TEST_Compa:
	mov	DWORD PTR tv74[ebp], 0
$LN6@TEST_Compa:
	mov	edx, DWORD PTR _u_result$[ebp]
	push	edx
	push	OFFSET ??_C@_1EC@NPMCAPKO@?$AAF?$AAr?$AAo?$AAm?$AAB?$AAy?$AAt?$AAe?$AAA?$AAr?$AAr?$AAa?$AAy?$AAn?$PP?$KJ@
	call	_FormatTestMesssage
	add	esp, 8
	push	eax
	mov	eax, DWORD PTR tv74[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _no$[ebp]
	push	ecx
	push	OFFSET ??_C@_1CK@OLGFOKBG@?$AAC?$AAo?$AAm?$AAp?$AAa?$AAr?$AAe?$AA_?$AAU?$AAX?$AA_?$AAX?$AA?5?$AA?$CI?$AA?$CF@
	call	_FormatTestLabel
	add	esp, 12					; 0000000cH
	push	eax
	mov	edx, DWORD PTR _env$[ebp]
	push	edx
	call	_TEST_Assert
	add	esp, 16					; 00000010H

; 67   :     TEST_Assert(env, FormatTestLabel(L"Compare_UX_X (%d.%d)", no, 2), (v_result = ep->FromByteArray(v_buf, v_buf_size, &v)) == PMC_STATUS_OK, FormatTestMesssage(L"FromByteArrayの復帰コードが期待通りではない(%d)", v_result));

	mov	esi, esp
	lea	eax, DWORD PTR _v$[ebp]
	push	eax
	mov	ecx, DWORD PTR _v_buf_size$[ebp]
	push	ecx
	mov	edx, DWORD PTR _v_buf$[ebp]
	push	edx
	mov	eax, DWORD PTR _ep$[ebp]
	mov	ecx, DWORD PTR [eax+300]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _v_result$[ebp], eax
	cmp	DWORD PTR _v_result$[ebp], 0
	jne	SHORT $LN7@TEST_Compa
	mov	DWORD PTR tv92[ebp], 1
	jmp	SHORT $LN8@TEST_Compa
$LN7@TEST_Compa:
	mov	DWORD PTR tv92[ebp], 0
$LN8@TEST_Compa:
	mov	edx, DWORD PTR _v_result$[ebp]
	push	edx
	push	OFFSET ??_C@_1EC@NPMCAPKO@?$AAF?$AAr?$AAo?$AAm?$AAB?$AAy?$AAt?$AAe?$AAA?$AAr?$AAr?$AAa?$AAy?$AAn?$PP?$KJ@
	call	_FormatTestMesssage
	add	esp, 8
	push	eax
	mov	eax, DWORD PTR tv92[ebp]
	push	eax
	push	2
	mov	ecx, DWORD PTR _no$[ebp]
	push	ecx
	push	OFFSET ??_C@_1CK@OLGFOKBG@?$AAC?$AAo?$AAm?$AAp?$AAa?$AAr?$AAe?$AA_?$AAU?$AAX?$AA_?$AAX?$AA?5?$AA?$CI?$AA?$CF@
	call	_FormatTestLabel
	add	esp, 12					; 0000000cH
	push	eax
	mov	edx, DWORD PTR _env$[ebp]
	push	edx
	call	_TEST_Assert
	add	esp, 16					; 00000010H

; 68   :     TEST_Assert(env, FormatTestLabel(L"Compare_UX_X (%d.%d)", no, 3), (result = ep->Compare_UX_X(u, v, &actual_w)) == PMC_STATUS_OK, FormatTestMesssage(L"Compare_UX_Xの復帰コードが期待通りではない(%d)", result));

	mov	esi, esp
	lea	eax, DWORD PTR _actual_w$[ebp]
	push	eax
	mov	ecx, DWORD PTR _v$[ebp]
	push	ecx
	mov	edx, DWORD PTR _u$[ebp]
	push	edx
	mov	eax, DWORD PTR _ep$[ebp]
	mov	ecx, DWORD PTR [eax+448]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _result$[ebp], eax
	cmp	DWORD PTR _result$[ebp], 0
	jne	SHORT $LN9@TEST_Compa
	mov	DWORD PTR tv142[ebp], 1
	jmp	SHORT $LN10@TEST_Compa
$LN9@TEST_Compa:
	mov	DWORD PTR tv142[ebp], 0
$LN10@TEST_Compa:
	mov	edx, DWORD PTR _result$[ebp]
	push	edx
	push	OFFSET ??_C@_1EA@CBGLBMOM@?$AAC?$AAo?$AAm?$AAp?$AAa?$AAr?$AAe?$AA_?$AAU?$AAX?$AA_?$AAX?$AAn?$PP?$KJ?$AA0@
	call	_FormatTestMesssage
	add	esp, 8
	push	eax
	mov	eax, DWORD PTR tv142[ebp]
	push	eax
	push	3
	mov	ecx, DWORD PTR _no$[ebp]
	push	ecx
	push	OFFSET ??_C@_1CK@OLGFOKBG@?$AAC?$AAo?$AAm?$AAp?$AAa?$AAr?$AAe?$AA_?$AAU?$AAX?$AA_?$AAX?$AA?5?$AA?$CI?$AA?$CF@
	call	_FormatTestLabel
	add	esp, 12					; 0000000cH
	push	eax
	mov	edx, DWORD PTR _env$[ebp]
	push	edx
	call	_TEST_Assert
	add	esp, 16					; 00000010H

; 69   :     TEST_Assert(env, FormatTestLabel(L"Compare_UX_X (%d.%d)", no, 4), actual_w == desired_w, L"データの内容が一致しない");

	mov	eax, DWORD PTR _actual_w$[ebp]
	cmp	eax, DWORD PTR _desired_w$[ebp]
	jne	SHORT $LN11@TEST_Compa
	mov	DWORD PTR tv152[ebp], 1
	jmp	SHORT $LN12@TEST_Compa
$LN11@TEST_Compa:
	mov	DWORD PTR tv152[ebp], 0
$LN12@TEST_Compa:
	push	OFFSET ??_C@_1BK@CBDJCOBM@?$PP?G?$PP?$PM?$PP?$LP?$AAn?$PP?$IF?$PP?$LJ?$AAL?$AA?$AA?$PP?t?$AAW?$AAj?$AAD@
	mov	ecx, DWORD PTR tv152[ebp]
	push	ecx
	push	4
	mov	edx, DWORD PTR _no$[ebp]
	push	edx
	push	OFFSET ??_C@_1CK@OLGFOKBG@?$AAC?$AAo?$AAm?$AAp?$AAa?$AAr?$AAe?$AA_?$AAU?$AAX?$AA_?$AAX?$AA?5?$AA?$CI?$AA?$CF@
	call	_FormatTestLabel
	add	esp, 12					; 0000000cH
	push	eax
	mov	eax, DWORD PTR _env$[ebp]
	push	eax
	call	_TEST_Assert
	add	esp, 16					; 00000010H

; 70   :     if (v_result == PMC_STATUS_OK)

	cmp	DWORD PTR _v_result$[ebp], 0
	jne	SHORT $LN2@TEST_Compa

; 71   :         ep->Dispose(v);

	mov	esi, esp
	mov	eax, DWORD PTR _v$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ep$[ebp]
	mov	edx, DWORD PTR [ecx+292]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@TEST_Compa:

; 72   :     if (u_result == PMC_STATUS_OK)

	cmp	DWORD PTR _u_result$[ebp], 0
	jne	SHORT $LN1@TEST_Compa

; 73   :         ep->UINT_ENTRY_POINTS.Dispose(u);

	mov	esi, esp
	mov	eax, DWORD PTR _u$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ep$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@TEST_Compa:

; 74   : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN17@TEST_Compa
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 272				; 00000110H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN17@TEST_Compa:
	DD	3
	DD	$LN16@TEST_Compa
$LN16@TEST_Compa:
	DD	-12					; fffffff4H
	DD	4
	DD	$LN13@TEST_Compa
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN14@TEST_Compa
	DD	-36					; ffffffdcH
	DD	4
	DD	$LN15@TEST_Compa
$LN15@TEST_Compa:
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	95					; 0000005fH
	DB	119					; 00000077H
	DB	0
$LN14@TEST_Compa:
	DB	118					; 00000076H
	DB	0
$LN13@TEST_Compa:
	DB	117					; 00000075H
	DB	0
_TEST_Compare_UX_X ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.sint\palmtree.math.core.sint\test_op_compare.c
;	COMDAT _TEST_Compare_L_X
_TEXT	SEGMENT
tv134 = -248						; size = 4
tv92 = -248						; size = 4
tv74 = -248						; size = 4
_v_result$ = -48					; size = 4
_result$ = -36						; size = 4
_actual_w$ = -24					; size = 4
_v$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_env$ = 8						; size = 4
_ep$ = 12						; size = 4
_no$ = 16						; size = 4
_u$ = 20						; size = 8
_v_buf$ = 28						; size = 4
_v_buf_size$ = 32					; size = 4
_desired_w$ = 36					; size = 4
_TEST_Compare_L_X PROC					; COMDAT

; 46   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 248				; 000000f8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-248]
	mov	ecx, 62					; 0000003eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	ecx, OFFSET __88878CCC_test_op_compare@c
	call	@__CheckForDebuggerJustMyCode@4

; 47   :     PMC_HANDLE_SINT v;
; 48   :     __int32 actual_w;
; 49   :     PMC_STATUS_CODE result;
; 50   :     PMC_STATUS_CODE v_result;
; 51   :     TEST_Assert(env, FormatTestLabel(L"Compare_L_X (%d.%d)", no, 1), (v_result = ep->FromByteArray(v_buf, v_buf_size, &v)) == PMC_STATUS_OK, FormatTestMesssage(L"FromByteArrayの復帰コードが期待通りではない(%d)", v_result));

	mov	esi, esp
	lea	eax, DWORD PTR _v$[ebp]
	push	eax
	mov	ecx, DWORD PTR _v_buf_size$[ebp]
	push	ecx
	mov	edx, DWORD PTR _v_buf$[ebp]
	push	edx
	mov	eax, DWORD PTR _ep$[ebp]
	mov	ecx, DWORD PTR [eax+300]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _v_result$[ebp], eax
	cmp	DWORD PTR _v_result$[ebp], 0
	jne	SHORT $LN4@TEST_Compa
	mov	DWORD PTR tv74[ebp], 1
	jmp	SHORT $LN5@TEST_Compa
$LN4@TEST_Compa:
	mov	DWORD PTR tv74[ebp], 0
$LN5@TEST_Compa:
	mov	edx, DWORD PTR _v_result$[ebp]
	push	edx
	push	OFFSET ??_C@_1EC@NPMCAPKO@?$AAF?$AAr?$AAo?$AAm?$AAB?$AAy?$AAt?$AAe?$AAA?$AAr?$AAr?$AAa?$AAy?$AAn?$PP?$KJ@
	call	_FormatTestMesssage
	add	esp, 8
	push	eax
	mov	eax, DWORD PTR tv74[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _no$[ebp]
	push	ecx
	push	OFFSET ??_C@_1CI@JDHOOMBF@?$AAC?$AAo?$AAm?$AAp?$AAa?$AAr?$AAe?$AA_?$AAL?$AA_?$AAX?$AA?5?$AA?$CI?$AA?$CF?$AAd@
	call	_FormatTestLabel
	add	esp, 12					; 0000000cH
	push	eax
	mov	edx, DWORD PTR _env$[ebp]
	push	edx
	call	_TEST_Assert
	add	esp, 16					; 00000010H

; 52   :     TEST_Assert(env, FormatTestLabel(L"Compare_L_X (%d.%d)", no, 2), (result = ep->Compare_L_X(u, v, &actual_w)) == PMC_STATUS_OK, FormatTestMesssage(L"Compare_L_Xの復帰コードが期待通りではない(%d)", result));

	mov	esi, esp
	lea	eax, DWORD PTR _actual_w$[ebp]
	push	eax
	mov	ecx, DWORD PTR _v$[ebp]
	push	ecx
	mov	edx, DWORD PTR _u$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _u$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ep$[ebp]
	mov	edx, DWORD PTR [ecx+444]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _result$[ebp], eax
	cmp	DWORD PTR _result$[ebp], 0
	jne	SHORT $LN6@TEST_Compa
	mov	DWORD PTR tv92[ebp], 1
	jmp	SHORT $LN7@TEST_Compa
$LN6@TEST_Compa:
	mov	DWORD PTR tv92[ebp], 0
$LN7@TEST_Compa:
	mov	eax, DWORD PTR _result$[ebp]
	push	eax
	push	OFFSET ??_C@_1DO@ENPFDIIE@?$AAC?$AAo?$AAm?$AAp?$AAa?$AAr?$AAe?$AA_?$AAL?$AA_?$AAX?$AAn?$PP?$KJ?$AA0?$PP?$LD@
	call	_FormatTestMesssage
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR tv92[ebp]
	push	ecx
	push	2
	mov	edx, DWORD PTR _no$[ebp]
	push	edx
	push	OFFSET ??_C@_1CI@JDHOOMBF@?$AAC?$AAo?$AAm?$AAp?$AAa?$AAr?$AAe?$AA_?$AAL?$AA_?$AAX?$AA?5?$AA?$CI?$AA?$CF?$AAd@
	call	_FormatTestLabel
	add	esp, 12					; 0000000cH
	push	eax
	mov	eax, DWORD PTR _env$[ebp]
	push	eax
	call	_TEST_Assert
	add	esp, 16					; 00000010H

; 53   :     TEST_Assert(env, FormatTestLabel(L"Compare_I_X (%d.%d)", no, 3), actual_w == desired_w, L"データの内容が一致しない");

	mov	eax, DWORD PTR _actual_w$[ebp]
	cmp	eax, DWORD PTR _desired_w$[ebp]
	jne	SHORT $LN8@TEST_Compa
	mov	DWORD PTR tv134[ebp], 1
	jmp	SHORT $LN9@TEST_Compa
$LN8@TEST_Compa:
	mov	DWORD PTR tv134[ebp], 0
$LN9@TEST_Compa:
	push	OFFSET ??_C@_1BK@CBDJCOBM@?$PP?G?$PP?$PM?$PP?$LP?$AAn?$PP?$IF?$PP?$LJ?$AAL?$AA?$AA?$PP?t?$AAW?$AAj?$AAD@
	mov	ecx, DWORD PTR tv134[ebp]
	push	ecx
	push	3
	mov	edx, DWORD PTR _no$[ebp]
	push	edx
	push	OFFSET ??_C@_1CI@HLFNBHGN@?$AAC?$AAo?$AAm?$AAp?$AAa?$AAr?$AAe?$AA_?$AAI?$AA_?$AAX?$AA?5?$AA?$CI?$AA?$CF?$AAd@
	call	_FormatTestLabel
	add	esp, 12					; 0000000cH
	push	eax
	mov	eax, DWORD PTR _env$[ebp]
	push	eax
	call	_TEST_Assert
	add	esp, 16					; 00000010H

; 54   :     if (v_result == PMC_STATUS_OK)

	cmp	DWORD PTR _v_result$[ebp], 0
	jne	SHORT $LN1@TEST_Compa

; 55   :         ep->Dispose(v);

	mov	esi, esp
	mov	eax, DWORD PTR _v$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ep$[ebp]
	mov	edx, DWORD PTR [ecx+292]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@TEST_Compa:

; 56   : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN13@TEST_Compa
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 248				; 000000f8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN13@TEST_Compa:
	DD	2
	DD	$LN12@TEST_Compa
$LN12@TEST_Compa:
	DD	-12					; fffffff4H
	DD	4
	DD	$LN10@TEST_Compa
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN11@TEST_Compa
$LN11@TEST_Compa:
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	95					; 0000005fH
	DB	119					; 00000077H
	DB	0
$LN10@TEST_Compa:
	DB	118					; 00000076H
	DB	0
_TEST_Compare_L_X ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File z:\sources\lunor\repos\rougemeilland\palmtree.math.core.sint\palmtree.math.core.sint\test_op_compare.c
;	COMDAT _TEST_Compare_I_X
_TEXT	SEGMENT
tv134 = -248						; size = 4
tv92 = -248						; size = 4
tv74 = -248						; size = 4
_v_result$ = -48					; size = 4
_result$ = -36						; size = 4
_actual_w$ = -24					; size = 4
_v$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_env$ = 8						; size = 4
_ep$ = 12						; size = 4
_no$ = 16						; size = 4
_u$ = 20						; size = 4
_v_buf$ = 24						; size = 4
_v_buf_size$ = 28					; size = 4
_desired_w$ = 32					; size = 4
_TEST_Compare_I_X PROC					; COMDAT

; 33   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 248				; 000000f8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-248]
	mov	ecx, 62					; 0000003eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	ecx, OFFSET __88878CCC_test_op_compare@c
	call	@__CheckForDebuggerJustMyCode@4

; 34   :     PMC_HANDLE_SINT v;
; 35   :     __int32 actual_w;
; 36   :     PMC_STATUS_CODE result;
; 37   :     PMC_STATUS_CODE v_result;
; 38   :     TEST_Assert(env, FormatTestLabel(L"Compare_I_X (%d.%d)", no, 1), (v_result = ep->FromByteArray(v_buf, v_buf_size, &v)) == PMC_STATUS_OK, FormatTestMesssage(L"FromByteArrayの復帰コードが期待通りではない(%d)", v_result));

	mov	esi, esp
	lea	eax, DWORD PTR _v$[ebp]
	push	eax
	mov	ecx, DWORD PTR _v_buf_size$[ebp]
	push	ecx
	mov	edx, DWORD PTR _v_buf$[ebp]
	push	edx
	mov	eax, DWORD PTR _ep$[ebp]
	mov	ecx, DWORD PTR [eax+300]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _v_result$[ebp], eax
	cmp	DWORD PTR _v_result$[ebp], 0
	jne	SHORT $LN4@TEST_Compa
	mov	DWORD PTR tv74[ebp], 1
	jmp	SHORT $LN5@TEST_Compa
$LN4@TEST_Compa:
	mov	DWORD PTR tv74[ebp], 0
$LN5@TEST_Compa:
	mov	edx, DWORD PTR _v_result$[ebp]
	push	edx
	push	OFFSET ??_C@_1EC@NPMCAPKO@?$AAF?$AAr?$AAo?$AAm?$AAB?$AAy?$AAt?$AAe?$AAA?$AAr?$AAr?$AAa?$AAy?$AAn?$PP?$KJ@
	call	_FormatTestMesssage
	add	esp, 8
	push	eax
	mov	eax, DWORD PTR tv74[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _no$[ebp]
	push	ecx
	push	OFFSET ??_C@_1CI@HLFNBHGN@?$AAC?$AAo?$AAm?$AAp?$AAa?$AAr?$AAe?$AA_?$AAI?$AA_?$AAX?$AA?5?$AA?$CI?$AA?$CF?$AAd@
	call	_FormatTestLabel
	add	esp, 12					; 0000000cH
	push	eax
	mov	edx, DWORD PTR _env$[ebp]
	push	edx
	call	_TEST_Assert
	add	esp, 16					; 00000010H

; 39   :     TEST_Assert(env, FormatTestLabel(L"Compare_I_X (%d.%d)", no, 2), (result = ep->Compare_I_X(u, v, &actual_w)) == PMC_STATUS_OK, FormatTestMesssage(L"Compare_I_Xの復帰コードが期待通りではない(%d)", result));

	mov	esi, esp
	lea	eax, DWORD PTR _actual_w$[ebp]
	push	eax
	mov	ecx, DWORD PTR _v$[ebp]
	push	ecx
	mov	edx, DWORD PTR _u$[ebp]
	push	edx
	mov	eax, DWORD PTR _ep$[ebp]
	mov	ecx, DWORD PTR [eax+440]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _result$[ebp], eax
	cmp	DWORD PTR _result$[ebp], 0
	jne	SHORT $LN6@TEST_Compa
	mov	DWORD PTR tv92[ebp], 1
	jmp	SHORT $LN7@TEST_Compa
$LN6@TEST_Compa:
	mov	DWORD PTR tv92[ebp], 0
$LN7@TEST_Compa:
	mov	edx, DWORD PTR _result$[ebp]
	push	edx
	push	OFFSET ??_C@_1DO@BGGLMLBK@?$AAC?$AAo?$AAm?$AAp?$AAa?$AAr?$AAe?$AA_?$AAI?$AA_?$AAX?$AAn?$PP?$KJ?$AA0?$PP?$LD@
	call	_FormatTestMesssage
	add	esp, 8
	push	eax
	mov	eax, DWORD PTR tv92[ebp]
	push	eax
	push	2
	mov	ecx, DWORD PTR _no$[ebp]
	push	ecx
	push	OFFSET ??_C@_1CI@HLFNBHGN@?$AAC?$AAo?$AAm?$AAp?$AAa?$AAr?$AAe?$AA_?$AAI?$AA_?$AAX?$AA?5?$AA?$CI?$AA?$CF?$AAd@
	call	_FormatTestLabel
	add	esp, 12					; 0000000cH
	push	eax
	mov	edx, DWORD PTR _env$[ebp]
	push	edx
	call	_TEST_Assert
	add	esp, 16					; 00000010H

; 40   :     TEST_Assert(env, FormatTestLabel(L"Compare_I_X (%d.%d)", no, 3), actual_w == desired_w, L"データの内容が一致しない");

	mov	eax, DWORD PTR _actual_w$[ebp]
	cmp	eax, DWORD PTR _desired_w$[ebp]
	jne	SHORT $LN8@TEST_Compa
	mov	DWORD PTR tv134[ebp], 1
	jmp	SHORT $LN9@TEST_Compa
$LN8@TEST_Compa:
	mov	DWORD PTR tv134[ebp], 0
$LN9@TEST_Compa:
	push	OFFSET ??_C@_1BK@CBDJCOBM@?$PP?G?$PP?$PM?$PP?$LP?$AAn?$PP?$IF?$PP?$LJ?$AAL?$AA?$AA?$PP?t?$AAW?$AAj?$AAD@
	mov	ecx, DWORD PTR tv134[ebp]
	push	ecx
	push	3
	mov	edx, DWORD PTR _no$[ebp]
	push	edx
	push	OFFSET ??_C@_1CI@HLFNBHGN@?$AAC?$AAo?$AAm?$AAp?$AAa?$AAr?$AAe?$AA_?$AAI?$AA_?$AAX?$AA?5?$AA?$CI?$AA?$CF?$AAd@
	call	_FormatTestLabel
	add	esp, 12					; 0000000cH
	push	eax
	mov	eax, DWORD PTR _env$[ebp]
	push	eax
	call	_TEST_Assert
	add	esp, 16					; 00000010H

; 41   :     if (v_result == PMC_STATUS_OK)

	cmp	DWORD PTR _v_result$[ebp], 0
	jne	SHORT $LN1@TEST_Compa

; 42   :         ep->Dispose(v);

	mov	esi, esp
	mov	eax, DWORD PTR _v$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ep$[ebp]
	mov	edx, DWORD PTR [ecx+292]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@TEST_Compa:

; 43   : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN13@TEST_Compa
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 248				; 000000f8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN13@TEST_Compa:
	DD	2
	DD	$LN12@TEST_Compa
$LN12@TEST_Compa:
	DD	-12					; fffffff4H
	DD	4
	DD	$LN10@TEST_Compa
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN11@TEST_Compa
$LN11@TEST_Compa:
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	95					; 0000005fH
	DB	119					; 00000077H
	DB	0
$LN10@TEST_Compa:
	DB	118					; 00000076H
	DB	0
_TEST_Compare_I_X ENDP
_TEXT	ENDS
END
